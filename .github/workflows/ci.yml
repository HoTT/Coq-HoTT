## This is the name of the CI
name: CI

## These are the actions that trigger the CI to run
on: [push, pull_request]

jobs:
  build:
    # TODO: Eventually include different OS's in the matrix

    strategy:
      fail-fast: false
      matrix:
        include:
        - env: { UPDATE_HTML: "", UPDATE_QUICK_DOC: "", UPDATE_DEP_GRAPHS: "", BUILD_COQ: "", FORCE_COQ_VERSION: "", VALIDATE: "" }
        - label: update dep graphs
          env: { UPDATE_DEP_GRAPHS: "yes", BUILD_COQ: "yes", UPDATE_QUICK_DOC: "" }
        - label: update quick doc
          env: { UPDATE_QUICK_DOC: "yes" }
        - label: update html
          env: { UPDATE_HTML: "yes", UPDATE_QUICK_DOC: "" }
        - label: validate
          env: { VALIDATE: "yes"   , UPDATE_QUICK_DOC: "" }
        - label: with submodule coq
          env: { FORCE_COQ_VERSION: ""      , BUILD_COQ: "yes", UPDATE_QUICK_DOC: "" }
        - label: building coq master
          env: { FORCE_COQ_VERSION: "master", BUILD_COQ: "yes", UPDATE_QUICK_DOC: "", EXTRA_GH_REPORTIFY: "--warnings" }
          display-warnings: true

    env: ${{ matrix.env }}

    # The operating system
    runs-on: ubuntu-latest

    # Here is the main script
    steps:
    # First we set up Python 2.7
    - name: Set up Python 2.7
      run: |
        sudo apt-get install -y python curl
        sudo curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py
        sudo python ./get-pip.py

    - uses: actions/checkout@v2

    # We update the submodules
    - name: submodules-init
      uses: snickerbockers/submodules-init@v4

    - name: Add repositories to apt
      ## TODO: Cache dependencies?
      run: |
        # echo Adding repositories...
        # sudo add-apt-repository avsm
        # sudo add-apt-repository -y 'ppa:jgross-h/graphviz'
        sudo add-apt-repository -y 'ppa:jgross-h/coq-master-daily'

    - name: Update apt
      run: sudo apt-get update

    - name: Installing dependencies
      run: |
        # Work around issue with npm as per https://bugs.launchpad.net/ubuntu/+source/npm/+bug/1809828 and https://askubuntu.com/a/1092849/223605
        sudo apt-get install -y --allow-unauthenticated libnode-dev node-gyp libssl-dev
        sudo apt-get install -y --allow-unauthenticated npm aspcud ghc cabal-install graphviz xsltproc python-lxml python-pexpect libxml2-dev libxslt1-dev time lua5.1 unzip ocaml
        sudo sh -c "yes | $(curl -sL https://raw.githubusercontent.com/ocaml/opam/master/shell/install.sh)"
        opam init --disable-sandboxing -y
        opam update
        sudo apt-get install -y libipc-system-simple-perl libstring-shellquote-perl
        opam install -y camlp5 ocamlfind ocamlgraph zarith

    - name: Upgrade and autoremove packages
      run: |
        # This will take a very long time
        # sudo apt-get -y upgrade
        sudo apt-get autoremove

    - name: Before script information
      run: |
        eval $(opam env)
        lscpu
        uname -a
        lsb_release -a
        etc/ci/before_script.sh
        coqc --version
        echo | coqtop
        export COMMITISH="$(git rev-list HEAD -1)"

    # we display errors in the changes tab from all jobs
    # we only display warnings from the master job, so we don't get duplicate warnings
    - name: add warning problem matchers
      run: |
        #echo "::add-matcher::etc/coq-scripts/github/coqdoc.json" # disabled for now, since they don't have file names
      if: ${{ matrix.display-warnings }}

    - name: make strict-test
      run: make strict-test
      if: env.UPDATE_QUICK_DOC == ''

    # we display errors in the changes tab from all jobs
    # we only display warnings from the master job, so we don't get duplicate warnings
    - name: Build with timing
      run: |
        etc/coq-scripts/github/reportify-coq.sh --errors ${EXTRA_GH_REPORTIFY} etc/coq-scripts/timing/make-pretty-timed.sh -j2 TIMING=1
        make
      if: env.UPDATE_QUICK_DOC == ''

    - name: Test install target
      run: etc/ci/test-install-target.sh
      if: env.UPDATE_QUICK_DOC == ''

    - name: After success script
      run: etc/ci/after_success.sh
      env:
        ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}

  alectryon:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: snickerbockers/submodules-init@v4
    - name: add problem matchers
      run: |
        #echo "::add-matcher::etc/coq-scripts/github/coq-oneline-error.json" # now via a script
        #echo "::add-matcher::etc/coq-scripts/github/coqdoc.json" # disabled for now, since they don't have file names
        echo "::add-matcher::etc/coq-scripts/github/alectryon-error.json"
        #echo "::add-matcher::etc/coq-scripts/github/alectryon-warning.json" # too noisy right now, cf https://github.com/cpitclaudel/alectryon/issues/34 and https://github.com/cpitclaudel/alectryon/issues/33
    - uses: coq-community/docker-coq-action@v1
      with:
        coq_version: 8.13
        ocaml_version: 4.11-flambda
        custom_script: |
          opam install -y coq-serapi
          sudo apt-get -o Acquire::Retries=30 update -q
          sudo apt-get -o Acquire::Retries=30 install python3-pip autoconf -y --allow-unauthenticated
          python3 -m pip install --user --upgrade pygments dominate beautifulsoup4 docutils
          startGroup "Workaround permission issue" # https://github.com/coq-community/docker-coq-action#permissions
            sudo chown -R coq:coq .
          endGroup
          etc/coq-scripts/github/reportify-coq.sh --errors make TIMED=1 -j2 --output-sync GH_REPORT_ERRORS=1
          make alectryon ALECTRYON_EXTRAFLAGS=--traceback
    - name: Revert permissions
      # to avoid a warning at cleanup time - https://github.com/coq-community/docker-coq-action#permissions
      if: ${{ always() }}
      run: sudo chown -R 1001:116 .
    - name: upload alectryon artifact
      uses: actions/upload-artifact@v1
      with:
        name: alectryon-html
        path: alectryon-html
    - name: Deploy html files
      uses: JamesIves/github-pages-deploy-action@releases/v4
      with:
        dry-run: ${{ github.ref != 'refs/heads/master' || github.event_name != 'push' }}
        branch: gh-pages
        folder: alectryon-html
        target-folder: alectryon-html
        single-commit: false
