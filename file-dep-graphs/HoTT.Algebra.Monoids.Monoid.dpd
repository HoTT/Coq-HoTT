N: 26 "Build_MonoidIsomorphism'" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 46 "MonoidHomomorphism_ind" [body=yes, kind=cnst, prop=yes, path="Monoid", ];
N: 45 "MonoidHomomorphism_rec" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 47 "MonoidHomomorphism_rect" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 44 "MonoidHomomorphism_sind" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 31 "MonoidIsomorphism_ind" [body=yes, kind=cnst, prop=yes, path="Monoid", ];
N: 30 "MonoidIsomorphism_rec" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 32 "MonoidIsomorphism_rect" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 29 "MonoidIsomorphism_sind" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 60 "Monoid_ind" [body=yes, kind=cnst, prop=yes, path="Monoid", ];
N: 59 "Monoid_rec" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 61 "Monoid_rect" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 58 "Monoid_sind" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 24 "equiv_mnd_iso" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 38 "equiv_path_monoidhomomorphism" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 1 "hasbinaryproducts_monoid" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 8 "hasequivs_monoid" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 16 "is01cat_monoid" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 13 "is01cat_monoidhomomorphism" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 7 "is0functor_monoid_type" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 11 "is0functor_postcomp_monoidhomomorphism" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 10 "is0functor_precomp_monoidhomomorphism" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 12 "is0gpd_monoidhomomorphism" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 9 "is1cat_monoid" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 6 "is1functor_monoid_type" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 15 "is2graph_monoid" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 27 "isequiv_mnd_iso" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 17 "isgraph_monoid" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 14 "isgraph_monoidhomomorphism" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 37 "ishset_monoidhomomorphism" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 42 "ismonoidpreserving_mnd_homo" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 41 "issig_MonoidHomomorphism" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 25 "issig_MonoidIsomorphism" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 53 "issig_monoid" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 52 "mnd_assoc" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 35 "mnd_homo_compose" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 36 "mnd_homo_id" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 43 "mnd_homo_map" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 40 "mnd_homo_op" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 39 "mnd_homo_unit" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 22 "mnd_iso_compose" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 28 "mnd_iso_homo" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 23 "mnd_iso_id" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 21 "mnd_iso_inverse" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 5 "mnd_prod" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 2 "mnd_prod_corec" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 4 "mnd_prod_pr1" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 3 "mnd_prod_pr2" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 51 "mnd_unit_l" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 50 "mnd_unit_r" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 54 "monoid_ismonoid" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 56 "monoid_sgop" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 57 "monoid_type" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 55 "monoid_unit" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 20 "reflexive_monoidisomorphism" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 19 "symmetric_monoidisomorphism" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 18 "transitive_monoidisomorphism" [body=yes, kind=cnst, prop=no, path="Monoid", ];
N: 63 "Monoid" [kind=inductive, prop=no, path="Monoid", ];
N: 49 "MonoidHomomorphism" [kind=inductive, prop=no, path="Monoid", ];
N: 34 "MonoidIsomorphism" [kind=inductive, prop=no, path="Monoid", ];
N: 62 "Build_Monoid" [kind=construct, prop=no, path="Monoid", ];
N: 48 "Build_MonoidHomomorphism" [kind=construct, prop=no, path="Monoid", ];
N: 33 "Build_MonoidIsomorphism" [kind=construct, prop=no, path="Monoid", ];
E: 1 2 [weight=3, ];
E: 1 3 [weight=6, ];
E: 1 4 [weight=6, ];
E: 1 5 [weight=17, ];
E: 1 9 [weight=9, ];
E: 1 13 [weight=2, ];
E: 1 15 [weight=6, ];
E: 1 16 [weight=13, ];
E: 1 17 [weight=15, ];
E: 1 43 [weight=4, ];
E: 1 63 [weight=14, ];
E: 2 5 [weight=11, ];
E: 2 39 [weight=2, ];
E: 2 40 [weight=2, ];
E: 2 48 [weight=1, ];
E: 2 49 [weight=5, ];
E: 2 63 [weight=6, ];
E: 3 5 [weight=11, ];
E: 3 48 [weight=1, ];
E: 3 49 [weight=1, ];
E: 3 63 [weight=4, ];
E: 4 5 [weight=11, ];
E: 4 48 [weight=1, ];
E: 4 49 [weight=1, ];
E: 4 63 [weight=4, ];
E: 5 50 [weight=2, ];
E: 5 51 [weight=2, ];
E: 5 52 [weight=2, ];
E: 5 62 [weight=1, ];
E: 5 63 [weight=5, ];
E: 6 7 [weight=4, ];
E: 6 9 [weight=4, ];
E: 6 15 [weight=3, ];
E: 6 16 [weight=2, ];
E: 6 17 [weight=8, ];
E: 6 57 [weight=22, ];
E: 6 63 [weight=9, ];
E: 7 17 [weight=2, ];
E: 7 43 [weight=1, ];
E: 7 57 [weight=2, ];
E: 7 63 [weight=2, ];
E: 8 9 [weight=6, ];
E: 8 12 [weight=1, ];
E: 8 13 [weight=1, ];
E: 8 15 [weight=5, ];
E: 8 16 [weight=8, ];
E: 8 17 [weight=13, ];
E: 8 21 [weight=3, ];
E: 8 33 [weight=1, ];
E: 8 34 [weight=12, ];
E: 8 43 [weight=3, ];
E: 8 49 [weight=1, ];
E: 8 63 [weight=37, ];
E: 9 10 [weight=1, ];
E: 9 11 [weight=1, ];
E: 9 12 [weight=1, ];
E: 9 13 [weight=1, ];
E: 9 15 [weight=2, ];
E: 9 16 [weight=6, ];
E: 9 17 [weight=12, ];
E: 9 43 [weight=4, ];
E: 9 63 [weight=24, ];
E: 10 14 [weight=5, ];
E: 10 16 [weight=2, ];
E: 10 17 [weight=10, ];
E: 10 43 [weight=2, ];
E: 10 49 [weight=2, ];
E: 10 63 [weight=8, ];
E: 11 14 [weight=6, ];
E: 11 16 [weight=4, ];
E: 11 17 [weight=12, ];
E: 11 43 [weight=2, ];
E: 11 63 [weight=10, ];
E: 12 13 [weight=1, ];
E: 12 14 [weight=1, ];
E: 12 17 [weight=1, ];
E: 12 43 [weight=1, ];
E: 12 49 [weight=2, ];
E: 12 63 [weight=4, ];
E: 13 14 [weight=1, ];
E: 13 17 [weight=1, ];
E: 13 43 [weight=1, ];
E: 13 49 [weight=2, ];
E: 13 63 [weight=4, ];
E: 14 17 [weight=1, ];
E: 14 43 [weight=1, ];
E: 14 49 [weight=2, ];
E: 14 63 [weight=4, ];
E: 15 17 [weight=1, ];
E: 15 43 [weight=1, ];
E: 15 49 [weight=2, ];
E: 15 63 [weight=3, ];
E: 16 17 [weight=2, ];
E: 16 35 [weight=1, ];
E: 16 36 [weight=1, ];
E: 16 63 [weight=2, ];
E: 17 49 [weight=1, ];
E: 17 63 [weight=2, ];
E: 18 22 [weight=1, ];
E: 18 34 [weight=3, ];
E: 18 63 [weight=4, ];
E: 19 21 [weight=1, ];
E: 19 34 [weight=1, ];
E: 19 63 [weight=3, ];
E: 20 23 [weight=1, ];
E: 20 34 [weight=1, ];
E: 20 63 [weight=2, ];
E: 21 33 [weight=1, ];
E: 21 34 [weight=3, ];
E: 21 48 [weight=1, ];
E: 21 63 [weight=4, ];
E: 22 33 [weight=1, ];
E: 22 34 [weight=5, ];
E: 22 35 [weight=1, ];
E: 22 43 [weight=1, ];
E: 22 63 [weight=6, ];
E: 23 33 [weight=1, ];
E: 23 34 [weight=1, ];
E: 23 36 [weight=1, ];
E: 23 63 [weight=2, ];
E: 24 34 [weight=2, ];
E: 24 63 [weight=4, ];
E: 25 33 [weight=8, ];
E: 25 34 [weight=12, ];
E: 25 49 [weight=39, ];
E: 25 63 [weight=4, ];
E: 26 33 [weight=1, ];
E: 26 48 [weight=1, ];
E: 26 49 [weight=1, ];
E: 26 63 [weight=4, ];
E: 27 34 [weight=2, ];
E: 27 63 [weight=4, ];
E: 28 34 [weight=2, ];
E: 28 49 [weight=1, ];
E: 28 63 [weight=4, ];
E: 29 33 [weight=2, ];
E: 29 34 [weight=4, ];
E: 29 49 [weight=2, ];
E: 29 63 [weight=4, ];
E: 30 32 [weight=1, ];
E: 30 33 [weight=1, ];
E: 30 34 [weight=3, ];
E: 30 49 [weight=1, ];
E: 30 63 [weight=4, ];
E: 31 33 [weight=2, ];
E: 31 34 [weight=4, ];
E: 31 49 [weight=2, ];
E: 31 63 [weight=4, ];
E: 32 33 [weight=2, ];
E: 32 34 [weight=4, ];
E: 32 49 [weight=2, ];
E: 32 63 [weight=4, ];
E: 33 49 [weight=1, ];
E: 33 63 [weight=2, ];
E: 34 49 [weight=1, ];
E: 34 63 [weight=2, ];
E: 35 48 [weight=1, ];
E: 35 49 [weight=5, ];
E: 35 63 [weight=6, ];
E: 36 48 [weight=1, ];
E: 36 49 [weight=1, ];
E: 36 63 [weight=2, ];
E: 37 38 [weight=1, ];
E: 37 49 [weight=5, ];
E: 37 57 [weight=3, ];
E: 37 63 [weight=4, ];
E: 38 41 [weight=15, ];
E: 38 49 [weight=9, ];
E: 38 57 [weight=4, ];
E: 38 63 [weight=4, ];
E: 39 49 [weight=2, ];
E: 39 63 [weight=4, ];
E: 40 49 [weight=2, ];
E: 40 63 [weight=4, ];
E: 41 48 [weight=8, ];
E: 41 49 [weight=12, ];
E: 41 63 [weight=4, ];
E: 42 49 [weight=2, ];
E: 42 63 [weight=4, ];
E: 43 49 [weight=2, ];
E: 43 63 [weight=4, ];
E: 44 48 [weight=2, ];
E: 44 49 [weight=4, ];
E: 44 63 [weight=4, ];
E: 45 47 [weight=1, ];
E: 45 48 [weight=1, ];
E: 45 49 [weight=3, ];
E: 45 63 [weight=4, ];
E: 46 48 [weight=2, ];
E: 46 49 [weight=4, ];
E: 46 63 [weight=4, ];
E: 47 48 [weight=2, ];
E: 47 49 [weight=4, ];
E: 47 63 [weight=4, ];
E: 48 63 [weight=2, ];
E: 49 63 [weight=2, ];
E: 50 63 [weight=2, ];
E: 51 63 [weight=2, ];
E: 52 63 [weight=2, ];
E: 53 62 [weight=8, ];
E: 53 63 [weight=12, ];
E: 54 63 [weight=2, ];
E: 55 63 [weight=2, ];
E: 56 63 [weight=2, ];
E: 57 63 [weight=2, ];
E: 58 62 [weight=2, ];
E: 58 63 [weight=4, ];
E: 59 61 [weight=1, ];
E: 59 62 [weight=1, ];
E: 59 63 [weight=3, ];
E: 60 62 [weight=2, ];
E: 60 63 [weight=4, ];
E: 61 62 [weight=2, ];
E: 61 63 [weight=4, ];
