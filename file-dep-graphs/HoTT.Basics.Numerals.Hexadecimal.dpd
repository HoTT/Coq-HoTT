N: 7 "app" [body=yes, kind=cnst, prop=no, path="Numerals.Hexadecimal", ];
N: 6 "app_int" [body=yes, kind=cnst, prop=no, path="Numerals.Hexadecimal", ];
N: 2 "double" [body=yes, kind=cnst, prop=no, path="Numerals.Hexadecimal.Little", ];
N: 17 "hexadecimal_ind" [body=yes, kind=cnst, prop=yes, path="Hexadecimal", ];
N: 16 "hexadecimal_rec" [body=yes, kind=cnst, prop=no, path="Hexadecimal", ];
N: 18 "hexadecimal_rect" [body=yes, kind=cnst, prop=no, path="Hexadecimal", ];
N: 15 "hexadecimal_sind" [body=yes, kind=cnst, prop=no, path="Hexadecimal", ];
N: 24 "int_ind" [body=yes, kind=cnst, prop=yes, path="Hexadecimal", ];
N: 23 "int_rec" [body=yes, kind=cnst, prop=no, path="Hexadecimal", ];
N: 25 "int_rect" [body=yes, kind=cnst, prop=no, path="Hexadecimal", ];
N: 22 "int_sind" [body=yes, kind=cnst, prop=no, path="Hexadecimal", ];
N: 14 "nb_digits" [body=yes, kind=cnst, prop=no, path="Numerals.Hexadecimal", ];
N: 11 "norm" [body=yes, kind=cnst, prop=no, path="Numerals.Hexadecimal", ];
N: 13 "nzhead" [body=yes, kind=cnst, prop=no, path="Numerals.Hexadecimal", ];
N: 5 "nztail" [body=yes, kind=cnst, prop=no, path="Numerals.Hexadecimal", ];
N: 4 "nztail_int" [body=yes, kind=cnst, prop=no, path="Numerals.Hexadecimal", ];
N: 10 "opp" [body=yes, kind=cnst, prop=no, path="Numerals.Hexadecimal", ];
N: 8 "rev" [body=yes, kind=cnst, prop=no, path="Numerals.Hexadecimal", ];
N: 9 "revapp" [body=yes, kind=cnst, prop=no, path="Numerals.Hexadecimal", ];
N: 3 "succ" [body=yes, kind=cnst, prop=no, path="Numerals.Hexadecimal.Little", ];
N: 1 "succ_double" [body=yes, kind=cnst, prop=no, path="Numerals.Hexadecimal.Little", ];
N: 31 "uint_ind" [body=yes, kind=cnst, prop=yes, path="Numerals.Hexadecimal", ];
N: 30 "uint_rec" [body=yes, kind=cnst, prop=no, path="Numerals.Hexadecimal", ];
N: 32 "uint_rect" [body=yes, kind=cnst, prop=no, path="Numerals.Hexadecimal", ];
N: 29 "uint_sind" [body=yes, kind=cnst, prop=no, path="Numerals.Hexadecimal", ];
N: 12 "unorm" [body=yes, kind=cnst, prop=no, path="Numerals.Hexadecimal", ];
N: 21 "hexadecimal" [kind=inductive, prop=no, path="Numerals.Hexadecimal", ];
N: 28 "int" [kind=inductive, prop=no, path="Numerals.Hexadecimal", ];
N: 50 "uint" [kind=inductive, prop=no, path="Numerals.Hexadecimal", ];
N: 20 "Hexadecimal" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 27 "Pos" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 49 "Nil" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 19 "HexadecimalExp" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 26 "Neg" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 48 "D0" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 47 "D1" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 46 "D2" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 45 "D3" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 44 "D4" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 43 "D5" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 42 "D6" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 41 "D7" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 40 "D8" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 39 "D9" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 38 "Da" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 37 "Db" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 36 "Dc" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 35 "Dd" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 34 "De" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
N: 33 "Df" [kind=construct, prop=no, path="Numerals.Hexadecimal", ];
E: 1 33 [weight=2, ];
E: 1 34 [weight=2, ];
E: 1 35 [weight=2, ];
E: 1 36 [weight=2, ];
E: 1 37 [weight=2, ];
E: 1 38 [weight=2, ];
E: 1 39 [weight=2, ];
E: 1 40 [weight=2, ];
E: 1 41 [weight=2, ];
E: 1 42 [weight=2, ];
E: 1 43 [weight=2, ];
E: 1 44 [weight=2, ];
E: 1 45 [weight=2, ];
E: 1 46 [weight=2, ];
E: 1 47 [weight=3, ];
E: 1 48 [weight=2, ];
E: 1 49 [weight=2, ];
E: 1 50 [weight=12, ];
E: 2 33 [weight=2, ];
E: 2 34 [weight=2, ];
E: 2 35 [weight=2, ];
E: 2 36 [weight=2, ];
E: 2 37 [weight=2, ];
E: 2 38 [weight=2, ];
E: 2 39 [weight=2, ];
E: 2 40 [weight=2, ];
E: 2 41 [weight=2, ];
E: 2 42 [weight=2, ];
E: 2 43 [weight=2, ];
E: 2 44 [weight=2, ];
E: 2 45 [weight=2, ];
E: 2 46 [weight=2, ];
E: 2 47 [weight=3, ];
E: 2 48 [weight=2, ];
E: 2 49 [weight=2, ];
E: 2 50 [weight=12, ];
E: 3 33 [weight=1, ];
E: 3 34 [weight=1, ];
E: 3 35 [weight=1, ];
E: 3 36 [weight=1, ];
E: 3 37 [weight=1, ];
E: 3 38 [weight=1, ];
E: 3 39 [weight=1, ];
E: 3 40 [weight=1, ];
E: 3 41 [weight=1, ];
E: 3 42 [weight=1, ];
E: 3 43 [weight=1, ];
E: 3 44 [weight=1, ];
E: 3 45 [weight=1, ];
E: 3 46 [weight=1, ];
E: 3 47 [weight=2, ];
E: 3 48 [weight=1, ];
E: 3 49 [weight=1, ];
E: 3 50 [weight=7, ];
E: 4 5 [weight=4, ];
E: 4 26 [weight=1, ];
E: 4 27 [weight=1, ];
E: 4 28 [weight=7, ];
E: 4 50 [weight=2, ];
E: 5 8 [weight=3, ];
E: 5 50 [weight=30, ];
E: 6 7 [weight=2, ];
E: 6 26 [weight=1, ];
E: 6 27 [weight=1, ];
E: 6 28 [weight=5, ];
E: 6 50 [weight=2, ];
E: 7 8 [weight=1, ];
E: 7 9 [weight=1, ];
E: 7 50 [weight=5, ];
E: 8 9 [weight=1, ];
E: 8 49 [weight=1, ];
E: 8 50 [weight=3, ];
E: 9 33 [weight=1, ];
E: 9 34 [weight=1, ];
E: 9 35 [weight=1, ];
E: 9 36 [weight=1, ];
E: 9 37 [weight=1, ];
E: 9 38 [weight=1, ];
E: 9 39 [weight=1, ];
E: 9 40 [weight=1, ];
E: 9 41 [weight=1, ];
E: 9 42 [weight=1, ];
E: 9 43 [weight=1, ];
E: 9 44 [weight=1, ];
E: 9 45 [weight=1, ];
E: 9 46 [weight=1, ];
E: 9 47 [weight=1, ];
E: 9 48 [weight=1, ];
E: 9 50 [weight=10, ];
E: 10 26 [weight=1, ];
E: 10 27 [weight=1, ];
E: 10 28 [weight=5, ];
E: 11 12 [weight=1, ];
E: 11 13 [weight=1, ];
E: 11 26 [weight=16, ];
E: 11 27 [weight=2, ];
E: 11 28 [weight=6, ];
E: 11 33 [weight=1, ];
E: 11 34 [weight=1, ];
E: 11 35 [weight=1, ];
E: 11 36 [weight=1, ];
E: 11 37 [weight=1, ];
E: 11 38 [weight=1, ];
E: 11 39 [weight=1, ];
E: 11 40 [weight=1, ];
E: 11 41 [weight=1, ];
E: 11 42 [weight=1, ];
E: 11 43 [weight=1, ];
E: 11 44 [weight=1, ];
E: 11 45 [weight=1, ];
E: 11 46 [weight=1, ];
E: 11 47 [weight=1, ];
E: 11 48 [weight=2, ];
E: 11 49 [weight=1, ];
E: 11 50 [weight=1, ];
E: 12 13 [weight=1, ];
E: 12 33 [weight=1, ];
E: 12 34 [weight=1, ];
E: 12 35 [weight=1, ];
E: 12 36 [weight=1, ];
E: 12 37 [weight=1, ];
E: 12 38 [weight=1, ];
E: 12 39 [weight=1, ];
E: 12 40 [weight=1, ];
E: 12 41 [weight=1, ];
E: 12 42 [weight=1, ];
E: 12 43 [weight=1, ];
E: 12 44 [weight=1, ];
E: 12 45 [weight=1, ];
E: 12 46 [weight=1, ];
E: 12 47 [weight=1, ];
E: 12 48 [weight=2, ];
E: 12 49 [weight=1, ];
E: 12 50 [weight=5, ];
E: 13 50 [weight=7, ];
E: 14 50 [weight=4, ];
E: 15 19 [weight=2, ];
E: 15 20 [weight=2, ];
E: 15 21 [weight=5, ];
E: 15 28 [weight=4, ];
E: 15 50 [weight=4, ];
E: 16 18 [weight=1, ];
E: 16 19 [weight=1, ];
E: 16 20 [weight=1, ];
E: 16 21 [weight=3, ];
E: 16 28 [weight=2, ];
E: 16 50 [weight=2, ];
E: 17 19 [weight=2, ];
E: 17 20 [weight=2, ];
E: 17 21 [weight=5, ];
E: 17 28 [weight=4, ];
E: 17 50 [weight=4, ];
E: 18 19 [weight=2, ];
E: 18 20 [weight=2, ];
E: 18 21 [weight=5, ];
E: 18 28 [weight=4, ];
E: 18 50 [weight=4, ];
E: 19 28 [weight=2, ];
E: 19 50 [weight=2, ];
E: 20 28 [weight=2, ];
E: 20 50 [weight=2, ];
E: 21 28 [weight=2, ];
E: 21 50 [weight=2, ];
E: 22 26 [weight=2, ];
E: 22 27 [weight=2, ];
E: 22 28 [weight=5, ];
E: 22 50 [weight=4, ];
E: 23 25 [weight=1, ];
E: 23 26 [weight=1, ];
E: 23 27 [weight=1, ];
E: 23 28 [weight=3, ];
E: 23 50 [weight=2, ];
E: 24 26 [weight=2, ];
E: 24 27 [weight=2, ];
E: 24 28 [weight=5, ];
E: 24 50 [weight=4, ];
E: 25 26 [weight=2, ];
E: 25 27 [weight=2, ];
E: 25 28 [weight=5, ];
E: 25 50 [weight=4, ];
E: 26 50 [weight=2, ];
E: 27 50 [weight=2, ];
E: 28 50 [weight=2, ];
E: 29 33 [weight=2, ];
E: 29 34 [weight=2, ];
E: 29 35 [weight=2, ];
E: 29 36 [weight=2, ];
E: 29 37 [weight=2, ];
E: 29 38 [weight=2, ];
E: 29 39 [weight=2, ];
E: 29 40 [weight=2, ];
E: 29 41 [weight=2, ];
E: 29 42 [weight=2, ];
E: 29 43 [weight=2, ];
E: 29 44 [weight=2, ];
E: 29 45 [weight=2, ];
E: 29 46 [weight=2, ];
E: 29 47 [weight=2, ];
E: 29 48 [weight=2, ];
E: 29 49 [weight=2, ];
E: 29 50 [weight=38, ];
E: 30 32 [weight=1, ];
E: 30 33 [weight=1, ];
E: 30 34 [weight=1, ];
E: 30 35 [weight=1, ];
E: 30 36 [weight=1, ];
E: 30 37 [weight=1, ];
E: 30 38 [weight=1, ];
E: 30 39 [weight=1, ];
E: 30 40 [weight=1, ];
E: 30 41 [weight=1, ];
E: 30 42 [weight=1, ];
E: 30 43 [weight=1, ];
E: 30 44 [weight=1, ];
E: 30 45 [weight=1, ];
E: 30 46 [weight=1, ];
E: 30 47 [weight=1, ];
E: 30 48 [weight=1, ];
E: 30 49 [weight=1, ];
E: 30 50 [weight=19, ];
E: 31 33 [weight=2, ];
E: 31 34 [weight=2, ];
E: 31 35 [weight=2, ];
E: 31 36 [weight=2, ];
E: 31 37 [weight=2, ];
E: 31 38 [weight=2, ];
E: 31 39 [weight=2, ];
E: 31 40 [weight=2, ];
E: 31 41 [weight=2, ];
E: 31 42 [weight=2, ];
E: 31 43 [weight=2, ];
E: 31 44 [weight=2, ];
E: 31 45 [weight=2, ];
E: 31 46 [weight=2, ];
E: 31 47 [weight=2, ];
E: 31 48 [weight=2, ];
E: 31 49 [weight=2, ];
E: 31 50 [weight=38, ];
E: 32 33 [weight=2, ];
E: 32 34 [weight=2, ];
E: 32 35 [weight=2, ];
E: 32 36 [weight=2, ];
E: 32 37 [weight=2, ];
E: 32 38 [weight=2, ];
E: 32 39 [weight=2, ];
E: 32 40 [weight=2, ];
E: 32 41 [weight=2, ];
E: 32 42 [weight=2, ];
E: 32 43 [weight=2, ];
E: 32 44 [weight=2, ];
E: 32 45 [weight=2, ];
E: 32 46 [weight=2, ];
E: 32 47 [weight=2, ];
E: 32 48 [weight=2, ];
E: 32 49 [weight=2, ];
E: 32 50 [weight=38, ];
