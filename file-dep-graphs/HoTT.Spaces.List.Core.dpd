N: 3 "InList" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 18 "app" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 17 "fold_left" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 16 "fold_right" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 2 "for_all" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 11 "head" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 9 "last" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 19 "length" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 1 "list_exists" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 21 "list_ind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 15 "list_map" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 14 "list_map2" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 20 "list_rec" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 22 "list_rect" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 8 "nth" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 7 "remove_last" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 4 "repeat" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 12 "reverse" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 13 "reverse_acc" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 5 "seq" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 6 "seq_rev" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 10 "tail" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 25 "list" [kind=inductive, prop=no, path="Core", ];
N: 24 "nil" [kind=construct, prop=no, path="Core", ];
N: 23 "cons" [kind=construct, prop=no, path="Core", ];
E: 1 25 [weight=4, ];
E: 2 25 [weight=4, ];
E: 3 25 [weight=4, ];
E: 4 23 [weight=1, ];
E: 4 24 [weight=1, ];
E: 4 25 [weight=3, ];
E: 5 6 [weight=1, ];
E: 5 12 [weight=1, ];
E: 5 25 [weight=1, ];
E: 6 23 [weight=1, ];
E: 6 24 [weight=1, ];
E: 6 25 [weight=3, ];
E: 7 23 [weight=1, ];
E: 7 24 [weight=2, ];
E: 7 25 [weight=9, ];
E: 8 25 [weight=5, ];
E: 9 25 [weight=5, ];
E: 10 24 [weight=1, ];
E: 10 25 [weight=5, ];
E: 11 25 [weight=3, ];
E: 12 13 [weight=1, ];
E: 12 24 [weight=1, ];
E: 12 25 [weight=3, ];
E: 13 23 [weight=1, ];
E: 13 25 [weight=10, ];
E: 14 23 [weight=1, ];
E: 14 24 [weight=1, ];
E: 14 25 [weight=26, ];
E: 15 23 [weight=1, ];
E: 15 24 [weight=1, ];
E: 15 25 [weight=7, ];
E: 16 25 [weight=4, ];
E: 17 25 [weight=4, ];
E: 18 23 [weight=1, ];
E: 18 25 [weight=10, ];
E: 19 25 [weight=4, ];
E: 20 25 [weight=6, ];
E: 21 23 [weight=2, ];
E: 21 24 [weight=2, ];
E: 21 25 [weight=8, ];
E: 22 23 [weight=2, ];
E: 22 24 [weight=2, ];
E: 22 25 [weight=8, ];
