N: 10 "iff" [body=yes, kind=cnst, prop=no, path="Iff", ];
N: 5 "iff_compose" [body=yes, kind=cnst, prop=no, path="Iff", ];
N: 1 "iff_contradiction" [body=yes, kind=cnst, prop=no, path="Iff", ];
N: 3 "iff_equiv" [body=yes, kind=cnst, prop=no, path="Iff", ];
N: 7 "iff_inverse" [body=yes, kind=cnst, prop=no, path="Iff", ];
N: 2 "iff_not_sum" [body=yes, kind=cnst, prop=no, path="Iff", ];
N: 9 "iff_refl" [body=yes, kind=cnst, prop=no, path="Iff", ];
N: 8 "iff_reflexive" [body=yes, kind=cnst, prop=no, path="Iff", ];
N: 6 "symmetric_iff" [body=yes, kind=cnst, prop=no, path="Iff", ];
N: 4 "transitive_iff" [body=yes, kind=cnst, prop=no, path="Iff", ];
E: 1 10 [weight=1, ];
E: 2 10 [weight=1, ];
E: 3 10 [weight=1, ];
E: 4 5 [weight=1, ];
E: 4 10 [weight=1, ];
E: 5 10 [weight=5, ];
E: 6 7 [weight=1, ];
E: 6 10 [weight=1, ];
E: 7 10 [weight=3, ];
E: 8 9 [weight=1, ];
E: 8 10 [weight=1, ];
E: 9 10 [weight=1, ];
