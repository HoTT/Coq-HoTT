N: 41 "HomotopyGroup_type" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 40 "HomotopyGroup_type_ptype" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 32 "Pi" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 33 "Pi1" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 29 "commutative_pi" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 14 "fmap_pi_loops" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 26 "fmap_pi_succ" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 18 "fmap_ppi_ptr_iterated_loops" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 17 "groupiso_pi_functor" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 15 "groupiso_pi_loops" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 4 "grp_iso_pi_Tr" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 7 "grp_iso_pi_connmap" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 11 "grp_iso_pi_prod" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 37 "is01cat_homotopygroup_type" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 35 "is0functor_homotopygroup_type_ptype" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 27 "is0functor_pi" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 28 "is0functor_pi1" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 22 "is0functor_ppi" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 36 "is1cat_homotopygroup_type" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 34 "is1functor_homotopygroup_type_ptype" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 24 "is1functor_pi" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 25 "is1functor_pi1" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 21 "is1functor_ppi" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 38 "is2graph_homotopygroup_type" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 1 "isembedding_pi_psect" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 6 "isequiv_pi_Tr" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 9 "isequiv_pi_connmap" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 10 "isequiv_pi_connmap'" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 39 "isgraph_homotopygroup_type" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 30 "ishset_pi" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 3 "issurj_iterated_loops_connmap" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 2 "issurj_pi_connmap" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 23 "pPi" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 5 "pequiv_pi_Tr" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 8 "pequiv_pi_connmap" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 19 "pequiv_ppi_ptr_iterated_loops" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 16 "pi_loops" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 12 "pi_prod" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 13 "pi_prod'" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 31 "pi_succ" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
N: 20 "ppi_ptr_iterated_loops" [body=yes, kind=cnst, prop=no, path="HomotopyGroup", ];
E: 1 21 [weight=3, ];
E: 1 22 [weight=14, ];
E: 1 23 [weight=24, ];
E: 1 30 [weight=1, ];
E: 2 3 [weight=1, ];
E: 2 22 [weight=1, ];
E: 2 23 [weight=2, ];
E: 4 7 [weight=1, ];
E: 4 32 [weight=2, ];
E: 5 9 [weight=1, ];
E: 5 22 [weight=1, ];
E: 5 32 [weight=4, ];
E: 5 40 [weight=4, ];
E: 6 9 [weight=1, ];
E: 6 22 [weight=1, ];
E: 6 32 [weight=4, ];
E: 6 40 [weight=4, ];
E: 7 9 [weight=1, ];
E: 7 27 [weight=1, ];
E: 7 32 [weight=4, ];
E: 8 9 [weight=1, ];
E: 8 22 [weight=1, ];
E: 8 32 [weight=4, ];
E: 8 40 [weight=4, ];
E: 9 10 [weight=2, ];
E: 9 22 [weight=2, ];
E: 9 23 [weight=4, ];
E: 11 12 [weight=1, ];
E: 11 23 [weight=7, ];
E: 11 27 [weight=2, ];
E: 11 32 [weight=9, ];
E: 12 13 [weight=9, ];
E: 12 22 [weight=24, ];
E: 12 23 [weight=272, ];
E: 12 30 [weight=4, ];
E: 13 19 [weight=3, ];
E: 13 23 [weight=28, ];
E: 14 16 [weight=13, ];
E: 14 22 [weight=7, ];
E: 14 23 [weight=21, ];
E: 14 27 [weight=6, ];
E: 14 30 [weight=2, ];
E: 14 32 [weight=57, ];
E: 14 40 [weight=26, ];
E: 15 17 [weight=1, ];
E: 15 32 [weight=2, ];
E: 15 36 [weight=1, ];
E: 15 37 [weight=1, ];
E: 15 38 [weight=1, ];
E: 15 39 [weight=1, ];
E: 15 41 [weight=1, ];
E: 16 32 [weight=5, ];
E: 16 40 [weight=5, ];
E: 17 24 [weight=1, ];
E: 17 27 [weight=1, ];
E: 17 32 [weight=3, ];
E: 17 36 [weight=2, ];
E: 17 37 [weight=2, ];
E: 17 38 [weight=2, ];
E: 17 39 [weight=2, ];
E: 17 41 [weight=2, ];
E: 18 19 [weight=8, ];
E: 18 22 [weight=16, ];
E: 18 23 [weight=50, ];
E: 19 23 [weight=4, ];
E: 20 23 [weight=2, ];
E: 21 22 [weight=1, ];
E: 21 23 [weight=1, ];
E: 21 24 [weight=1, ];
E: 21 27 [weight=1, ];
E: 21 32 [weight=1, ];
E: 21 34 [weight=1, ];
E: 21 35 [weight=1, ];
E: 21 36 [weight=1, ];
E: 21 37 [weight=1, ];
E: 21 38 [weight=1, ];
E: 21 39 [weight=1, ];
E: 21 40 [weight=1, ];
E: 21 41 [weight=1, ];
E: 22 23 [weight=1, ];
E: 22 27 [weight=1, ];
E: 22 32 [weight=1, ];
E: 22 35 [weight=1, ];
E: 22 39 [weight=1, ];
E: 22 40 [weight=1, ];
E: 22 41 [weight=1, ];
E: 23 32 [weight=1, ];
E: 23 40 [weight=1, ];
E: 23 41 [weight=2, ];
E: 24 25 [weight=1, ];
E: 24 27 [weight=2, ];
E: 24 28 [weight=1, ];
E: 24 32 [weight=2, ];
E: 24 33 [weight=1, ];
E: 24 36 [weight=3, ];
E: 24 37 [weight=3, ];
E: 24 38 [weight=3, ];
E: 24 39 [weight=3, ];
E: 24 41 [weight=3, ];
E: 25 28 [weight=2, ];
E: 25 33 [weight=2, ];
E: 26 27 [weight=3, ];
E: 26 32 [weight=8, ];
E: 26 33 [weight=8, ];
E: 27 28 [weight=1, ];
E: 27 32 [weight=2, ];
E: 27 33 [weight=1, ];
E: 27 39 [weight=3, ];
E: 27 41 [weight=3, ];
E: 28 33 [weight=32, ];
E: 29 30 [weight=2, ];
E: 29 32 [weight=37, ];
E: 29 40 [weight=25, ];
E: 30 32 [weight=2, ];
E: 30 40 [weight=2, ];
E: 31 32 [weight=3, ];
E: 31 36 [weight=1, ];
E: 31 37 [weight=1, ];
E: 31 38 [weight=1, ];
E: 31 39 [weight=1, ];
E: 31 41 [weight=1, ];
E: 32 33 [weight=1, ];
E: 32 41 [weight=2, ];
E: 34 35 [weight=2, ];
E: 34 36 [weight=2, ];
E: 34 37 [weight=2, ];
E: 34 38 [weight=2, ];
E: 34 39 [weight=2, ];
E: 34 40 [weight=2, ];
E: 34 41 [weight=2, ];
E: 35 39 [weight=2, ];
E: 35 40 [weight=2, ];
E: 35 41 [weight=2, ];
E: 36 37 [weight=2, ];
E: 36 38 [weight=2, ];
E: 36 39 [weight=2, ];
E: 36 41 [weight=2, ];
E: 37 39 [weight=2, ];
E: 37 41 [weight=2, ];
E: 38 39 [weight=2, ];
E: 38 41 [weight=2, ];
E: 39 41 [weight=2, ];
E: 40 41 [weight=4, ];
