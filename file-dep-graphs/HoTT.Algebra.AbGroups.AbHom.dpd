N: 19 "ab_coeq" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 17 "ab_coeq_glue" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 18 "ab_coeq_in" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 13 "ab_coeq_ind_homotopy" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 14 "ab_coeq_ind_hprop" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 16 "ab_coeq_rec" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 15 "ab_coeq_rec_beta_in" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 20 "ab_hom" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 11 "functor2_ab_coeq" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 12 "functor_ab_coeq" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 10 "functor_ab_coeq_compose" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 9 "functor_ab_coeq_id" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 21 "grp_hom" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 8 "grp_iso_ab_coeq" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 22 "inverse_hom" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 3 "is0bifunctor_ab_hom" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 7 "is0functor_ab_hom01" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 6 "is0functor_ab_hom10" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 2 "is1bifunctor_ab_hom" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 5 "is1functor_ab_hom01" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 4 "is1functor_ab_hom10" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 1 "isembedding_precompose_surjection_ab" [body=yes, kind=cnst, prop=no, path="AbHom", ];
N: 23 "sgop_hom" [body=yes, kind=cnst, prop=no, path="AbHom", ];
E: 1 3 [weight=7, ];
E: 1 20 [weight=16, ];
E: 2 3 [weight=1, ];
E: 2 4 [weight=1, ];
E: 2 5 [weight=1, ];
E: 2 6 [weight=9, ];
E: 2 7 [weight=9, ];
E: 2 20 [weight=44, ];
E: 3 6 [weight=1, ];
E: 3 7 [weight=1, ];
E: 3 20 [weight=2, ];
E: 4 6 [weight=32, ];
E: 4 20 [weight=97, ];
E: 5 7 [weight=32, ];
E: 5 20 [weight=97, ];
E: 6 20 [weight=26, ];
E: 7 20 [weight=32, ];
E: 8 9 [weight=2, ];
E: 8 10 [weight=2, ];
E: 8 11 [weight=2, ];
E: 8 12 [weight=16, ];
E: 8 19 [weight=50, ];
E: 9 12 [weight=2, ];
E: 9 13 [weight=1, ];
E: 9 18 [weight=1, ];
E: 9 19 [weight=18, ];
E: 10 12 [weight=9, ];
E: 10 13 [weight=1, ];
E: 10 18 [weight=2, ];
E: 10 19 [weight=26, ];
E: 10 22 [weight=1, ];
E: 10 23 [weight=1, ];
E: 11 12 [weight=6, ];
E: 11 13 [weight=1, ];
E: 11 18 [weight=3, ];
E: 11 19 [weight=18, ];
E: 12 16 [weight=1, ];
E: 12 17 [weight=1, ];
E: 12 18 [weight=27, ];
E: 12 19 [weight=61, ];
E: 13 14 [weight=1, ];
E: 13 18 [weight=4, ];
E: 13 19 [weight=23, ];
E: 14 18 [weight=2, ];
E: 14 19 [weight=5, ];
E: 14 22 [weight=2, ];
E: 14 23 [weight=2, ];
E: 15 16 [weight=2, ];
E: 15 18 [weight=2, ];
E: 15 19 [weight=2, ];
E: 16 19 [weight=1, ];
E: 16 22 [weight=4, ];
E: 16 23 [weight=4, ];
E: 17 18 [weight=4, ];
E: 17 19 [weight=12, ];
E: 17 22 [weight=4, ];
E: 17 23 [weight=4, ];
E: 18 19 [weight=1, ];
E: 18 22 [weight=2, ];
E: 18 23 [weight=2, ];
E: 19 22 [weight=1, ];
E: 19 23 [weight=1, ];
E: 20 21 [weight=12, ];
E: 20 23 [weight=10, ];
E: 21 22 [weight=7, ];
E: 21 23 [weight=34, ];
