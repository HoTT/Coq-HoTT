N: 4 "seq_agree_inductive" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 3 "seq_agree_inductive_seq_agree_lt" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 5 "seq_agree_lt" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 1 "seq_agree_lt_iff_seq_agree_inductive" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 2 "seq_agree_lt_seq_agree_inductive" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 8 "seq_cons" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 7 "seq_cons_head_tail" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 9 "seq_tail" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 6 "tail_cons" [body=yes, kind=cnst, prop=no, path="Core", ];
E: 1 2 [weight=1, ];
E: 1 3 [weight=1, ];
E: 1 4 [weight=4, ];
E: 1 5 [weight=4, ];
E: 2 4 [weight=12, ];
E: 2 5 [weight=2, ];
E: 2 9 [weight=2, ];
E: 3 4 [weight=5, ];
E: 3 5 [weight=6, ];
E: 4 9 [weight=2, ];
E: 6 8 [weight=2, ];
E: 6 9 [weight=2, ];
E: 7 8 [weight=3, ];
E: 7 9 [weight=3, ];
