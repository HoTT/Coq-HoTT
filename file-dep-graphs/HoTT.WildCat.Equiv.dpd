N: 107 "Build_CatEquiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 112 "CatEquiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 122 "CatEquiv'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 110 "CatIsEquiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 121 "CatIsEquiv'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 8 "Cat_BiInv_ind" [body=yes, kind=cnst, prop=yes, path="Equiv", ];
N: 7 "Cat_BiInv_rec" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 9 "Cat_BiInv_rect" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 6 "Cat_BiInv_sind" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 18 "Cat_IsBiInv_ind" [body=yes, kind=cnst, prop=yes, path="Equiv", ];
N: 17 "Cat_IsBiInv_rec" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 19 "Cat_IsBiInv_rect" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 16 "Cat_IsBiInv_sind" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 125 "HasEquivs_ind" [body=yes, kind=cnst, prop=yes, path="Equiv", ];
N: 124 "HasEquivs_rec" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 126 "HasEquivs_rect" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 123 "HasEquivs_sind" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 47 "IsUnivalent1Cat" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 14 "cat_eisretr" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 2 "cat_eissect" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 12 "cat_eissect'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 5 "cat_equiv_fun" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 15 "cat_equiv_inv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 13 "cat_equiv_inv'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 4 "cat_equiv_isequiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 48 "cat_equiv_path" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 1 "cat_hasequivs" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 3 "cat_inverses_homotopic" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 45 "cat_path_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 104 "cate_adjointify" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 118 "cate_buildequiv'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 106 "cate_buildequiv_fun" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 117 "cate_buildequiv_fun'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 72 "cate_epic_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 111 "cate_fun" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 120 "cate_fun'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 103 "cate_inv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 116 "cate_inv'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 59 "cate_inv2" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 56 "cate_inv_V" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 96 "cate_inv_adjointify" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 58 "cate_inv_compose" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 57 "cate_inv_compose'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 97 "cate_inverse_retr" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 98 "cate_inverse_sect" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 108 "cate_isequiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 119 "cate_isequiv'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 25 "cate_isinitial" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 99 "cate_isretr" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 114 "cate_isretr'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 100 "cate_issect" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 115 "cate_issect'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 24 "cate_isterminal" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 73 "cate_monic_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 62 "cate_moveL_1V" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 69 "cate_moveL_Me" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 63 "cate_moveL_V1" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 65 "cate_moveL_Ve" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 71 "cate_moveL_eM" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 67 "cate_moveL_eV" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 60 "cate_moveR_1V" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 68 "cate_moveR_Me" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 61 "cate_moveR_V1" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 64 "cate_moveR_Ve" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 70 "cate_moveR_eM" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 66 "cate_moveR_eV" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 105 "catie_adjointify" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 113 "catie_adjointify'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 91 "catie_homotopic" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 95 "catie_id" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 109 "catisequiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 77 "compose_V_hh" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 86 "compose_cate" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 82 "compose_cate_assoc" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 81 "compose_cate_assoc_opp" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 85 "compose_cate_fun" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 84 "compose_cate_funinv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 80 "compose_cate_idl" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 79 "compose_cate_idr" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 88 "compose_catie" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 87 "compose_catie'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 90 "compose_catie_isretr" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 89 "compose_catie_issect" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 74 "compose_hV_h" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 76 "compose_h_Vh" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 75 "compose_hh_V" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 41 "core_ind" [body=yes, kind=cnst, prop=yes, path="Equiv", ];
N: 40 "core_rec" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 42 "core_rect" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 39 "core_sind" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 54 "emap" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 52 "emap_compose" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 51 "emap_compose'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 53 "emap_id" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 50 "emap_inv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 49 "emap_inv'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 27 "hasequivs_core" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 102 "hasequivs_op" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 26 "hasmorext_core" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 94 "id_cate" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 83 "id_cate_fun" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 55 "iemap" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 36 "is01cat_core" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 34 "is01cat_core_hom" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 32 "is0functor_core_postcomp" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 31 "is0functor_core_precomp" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 29 "is0gpd_core" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 33 "is0gpd_core_hom" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 30 "is1cat_core" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 28 "is1gpd_core" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 35 "is2graph_core" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 46 "isequiv_cat_equiv_path" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 101 "isequiv_op" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 37 "isgraph_core" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 23 "isinitial_cate" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 22 "isterminal_cate" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 93 "reflexive_cate" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 92 "symmetric_cate" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 78 "transitive_cate" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 38 "uncore" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 11 "Cat_BiInv" [kind=inductive, prop=no, path="Equiv", ];
N: 21 "Cat_IsBiInv" [kind=inductive, prop=no, path="Equiv", ];
N: 128 "HasEquivs" [kind=inductive, prop=no, path="Equiv", ];
N: 44 "core" [kind=inductive, prop=no, path="Equiv", ];
N: 10 "Build_Cat_BiInv" [kind=construct, prop=no, path="Equiv", ];
N: 20 "Build_Cat_IsBiInv" [kind=construct, prop=no, path="Equiv", ];
N: 127 "Build_HasEquivs" [kind=construct, prop=no, path="Equiv", ];
N: 43 "Build_core" [kind=construct, prop=no, path="Equiv", ];
E: 1 2 [weight=1, ];
E: 1 10 [weight=2, ];
E: 1 11 [weight=14, ];
E: 1 14 [weight=1, ];
E: 1 20 [weight=1, ];
E: 1 21 [weight=7, ];
E: 1 127 [weight=1, ];
E: 1 128 [weight=1, ];
E: 2 3 [weight=1, ];
E: 2 21 [weight=2, ];
E: 3 21 [weight=2, ];
E: 4 11 [weight=2, ];
E: 4 21 [weight=1, ];
E: 5 11 [weight=2, ];
E: 6 10 [weight=2, ];
E: 6 11 [weight=4, ];
E: 6 21 [weight=2, ];
E: 7 9 [weight=1, ];
E: 7 10 [weight=1, ];
E: 7 11 [weight=3, ];
E: 7 21 [weight=1, ];
E: 8 10 [weight=2, ];
E: 8 11 [weight=4, ];
E: 8 21 [weight=2, ];
E: 9 10 [weight=2, ];
E: 9 11 [weight=4, ];
E: 9 21 [weight=2, ];
E: 10 21 [weight=1, ];
E: 11 21 [weight=1, ];
E: 12 21 [weight=2, ];
E: 13 21 [weight=2, ];
E: 14 21 [weight=2, ];
E: 15 21 [weight=2, ];
E: 16 20 [weight=2, ];
E: 16 21 [weight=4, ];
E: 17 19 [weight=1, ];
E: 17 20 [weight=1, ];
E: 17 21 [weight=3, ];
E: 18 20 [weight=2, ];
E: 18 21 [weight=4, ];
E: 19 20 [weight=2, ];
E: 19 21 [weight=4, ];
E: 22 23 [weight=1, ];
E: 22 102 [weight=1, ];
E: 22 112 [weight=1, ];
E: 22 128 [weight=2, ];
E: 23 75 [weight=1, ];
E: 23 103 [weight=4, ];
E: 23 111 [weight=7, ];
E: 23 112 [weight=2, ];
E: 23 128 [weight=2, ];
E: 24 25 [weight=1, ];
E: 24 102 [weight=1, ];
E: 24 112 [weight=1, ];
E: 24 128 [weight=2, ];
E: 25 104 [weight=1, ];
E: 25 112 [weight=1, ];
E: 25 128 [weight=2, ];
E: 26 30 [weight=6, ];
E: 26 33 [weight=4, ];
E: 26 34 [weight=4, ];
E: 26 35 [weight=8, ];
E: 26 36 [weight=2, ];
E: 26 37 [weight=13, ];
E: 26 44 [weight=14, ];
E: 26 111 [weight=44, ];
E: 26 112 [weight=29, ];
E: 26 128 [weight=2, ];
E: 27 30 [weight=12, ];
E: 27 35 [weight=7, ];
E: 27 36 [weight=10, ];
E: 27 37 [weight=45, ];
E: 27 44 [weight=77, ];
E: 27 83 [weight=2, ];
E: 27 85 [weight=2, ];
E: 27 86 [weight=4, ];
E: 27 94 [weight=8, ];
E: 27 99 [weight=1, ];
E: 27 100 [weight=1, ];
E: 27 103 [weight=11, ];
E: 27 111 [weight=21, ];
E: 27 112 [weight=1, ];
E: 27 127 [weight=1, ];
E: 27 128 [weight=3, ];
E: 28 29 [weight=4, ];
E: 28 30 [weight=6, ];
E: 28 35 [weight=4, ];
E: 28 36 [weight=6, ];
E: 28 37 [weight=8, ];
E: 28 44 [weight=12, ];
E: 28 83 [weight=2, ];
E: 28 85 [weight=2, ];
E: 28 86 [weight=4, ];
E: 28 94 [weight=4, ];
E: 28 99 [weight=1, ];
E: 28 100 [weight=1, ];
E: 28 103 [weight=8, ];
E: 28 111 [weight=12, ];
E: 28 112 [weight=2, ];
E: 28 128 [weight=2, ];
E: 29 36 [weight=2, ];
E: 29 37 [weight=4, ];
E: 29 44 [weight=4, ];
E: 29 103 [weight=1, ];
E: 29 128 [weight=2, ];
E: 30 31 [weight=1, ];
E: 30 32 [weight=1, ];
E: 30 33 [weight=1, ];
E: 30 34 [weight=1, ];
E: 30 35 [weight=2, ];
E: 30 36 [weight=2, ];
E: 30 37 [weight=12, ];
E: 30 44 [weight=24, ];
E: 30 79 [weight=1, ];
E: 30 80 [weight=1, ];
E: 30 81 [weight=1, ];
E: 30 82 [weight=1, ];
E: 30 128 [weight=2, ];
E: 31 35 [weight=5, ];
E: 31 36 [weight=2, ];
E: 31 37 [weight=15, ];
E: 31 44 [weight=13, ];
E: 31 85 [weight=2, ];
E: 31 86 [weight=4, ];
E: 31 111 [weight=15, ];
E: 31 128 [weight=2, ];
E: 32 35 [weight=5, ];
E: 32 36 [weight=2, ];
E: 32 37 [weight=15, ];
E: 32 44 [weight=13, ];
E: 32 85 [weight=2, ];
E: 32 86 [weight=4, ];
E: 32 111 [weight=15, ];
E: 32 128 [weight=2, ];
E: 33 34 [weight=2, ];
E: 33 35 [weight=4, ];
E: 33 37 [weight=8, ];
E: 33 44 [weight=8, ];
E: 33 128 [weight=2, ];
E: 34 35 [weight=6, ];
E: 34 37 [weight=12, ];
E: 34 44 [weight=10, ];
E: 34 111 [weight=4, ];
E: 34 128 [weight=2, ];
E: 35 37 [weight=5, ];
E: 35 44 [weight=4, ];
E: 35 111 [weight=2, ];
E: 35 128 [weight=2, ];
E: 36 37 [weight=6, ];
E: 36 44 [weight=10, ];
E: 36 86 [weight=1, ];
E: 36 94 [weight=1, ];
E: 36 128 [weight=2, ];
E: 37 44 [weight=4, ];
E: 37 112 [weight=1, ];
E: 37 128 [weight=2, ];
E: 38 44 [weight=2, ];
E: 39 43 [weight=2, ];
E: 39 44 [weight=4, ];
E: 40 42 [weight=1, ];
E: 40 43 [weight=1, ];
E: 40 44 [weight=3, ];
E: 41 43 [weight=2, ];
E: 41 44 [weight=4, ];
E: 42 43 [weight=2, ];
E: 42 44 [weight=4, ];
E: 45 46 [weight=1, ];
E: 45 47 [weight=2, ];
E: 45 112 [weight=1, ];
E: 45 128 [weight=2, ];
E: 46 47 [weight=2, ];
E: 46 48 [weight=1, ];
E: 46 112 [weight=1, ];
E: 46 128 [weight=2, ];
E: 47 48 [weight=1, ];
E: 47 112 [weight=1, ];
E: 47 128 [weight=2, ];
E: 48 93 [weight=1, ];
E: 48 112 [weight=2, ];
E: 48 128 [weight=2, ];
E: 49 50 [weight=1, ];
E: 49 54 [weight=3, ];
E: 49 55 [weight=1, ];
E: 49 103 [weight=7, ];
E: 49 106 [weight=1, ];
E: 49 111 [weight=6, ];
E: 49 112 [weight=2, ];
E: 49 128 [weight=4, ];
E: 50 54 [weight=3, ];
E: 50 55 [weight=2, ];
E: 50 96 [weight=1, ];
E: 50 99 [weight=2, ];
E: 50 100 [weight=2, ];
E: 50 103 [weight=40, ];
E: 50 104 [weight=1, ];
E: 50 106 [weight=1, ];
E: 50 107 [weight=1, ];
E: 50 111 [weight=69, ];
E: 50 112 [weight=2, ];
E: 50 128 [weight=4, ];
E: 51 52 [weight=1, ];
E: 51 54 [weight=14, ];
E: 51 55 [weight=4, ];
E: 51 85 [weight=1, ];
E: 51 86 [weight=6, ];
E: 51 106 [weight=2, ];
E: 51 107 [weight=2, ];
E: 51 111 [weight=22, ];
E: 51 112 [weight=4, ];
E: 51 128 [weight=4, ];
E: 52 54 [weight=1, ];
E: 52 55 [weight=2, ];
E: 52 85 [weight=1, ];
E: 52 86 [weight=8, ];
E: 52 106 [weight=1, ];
E: 52 107 [weight=1, ];
E: 52 111 [weight=19, ];
E: 52 112 [weight=4, ];
E: 52 128 [weight=4, ];
E: 53 54 [weight=1, ];
E: 53 55 [weight=2, ];
E: 53 83 [weight=2, ];
E: 53 94 [weight=13, ];
E: 53 106 [weight=1, ];
E: 53 107 [weight=1, ];
E: 53 111 [weight=12, ];
E: 53 128 [weight=4, ];
E: 54 55 [weight=1, ];
E: 54 107 [weight=1, ];
E: 54 111 [weight=1, ];
E: 54 112 [weight=3, ];
E: 54 128 [weight=4, ];
E: 55 99 [weight=1, ];
E: 55 100 [weight=1, ];
E: 55 103 [weight=15, ];
E: 55 105 [weight=1, ];
E: 55 110 [weight=1, ];
E: 55 111 [weight=31, ];
E: 55 112 [weight=2, ];
E: 55 128 [weight=4, ];
E: 56 61 [weight=1, ];
E: 56 100 [weight=1, ];
E: 56 103 [weight=4, ];
E: 56 111 [weight=5, ];
E: 56 112 [weight=2, ];
E: 56 128 [weight=2, ];
E: 57 58 [weight=1, ];
E: 57 86 [weight=2, ];
E: 57 88 [weight=2, ];
E: 57 103 [weight=14, ];
E: 57 106 [weight=1, ];
E: 57 107 [weight=1, ];
E: 57 111 [weight=11, ];
E: 57 112 [weight=4, ];
E: 57 128 [weight=2, ];
E: 58 85 [weight=1, ];
E: 58 86 [weight=5, ];
E: 58 89 [weight=1, ];
E: 58 90 [weight=1, ];
E: 58 96 [weight=1, ];
E: 58 103 [weight=16, ];
E: 58 111 [weight=13, ];
E: 58 112 [weight=4, ];
E: 58 128 [weight=2, ];
E: 59 63 [weight=1, ];
E: 59 99 [weight=1, ];
E: 59 103 [weight=6, ];
E: 59 111 [weight=16, ];
E: 59 112 [weight=4, ];
E: 59 128 [weight=2, ];
E: 60 61 [weight=1, ];
E: 60 102 [weight=1, ];
E: 60 103 [weight=1, ];
E: 60 111 [weight=3, ];
E: 60 112 [weight=2, ];
E: 60 128 [weight=2, ];
E: 61 73 [weight=1, ];
E: 61 99 [weight=1, ];
E: 61 103 [weight=3, ];
E: 61 111 [weight=7, ];
E: 61 112 [weight=2, ];
E: 61 128 [weight=2, ];
E: 62 63 [weight=1, ];
E: 62 102 [weight=1, ];
E: 62 103 [weight=1, ];
E: 62 111 [weight=3, ];
E: 62 112 [weight=2, ];
E: 62 128 [weight=2, ];
E: 63 73 [weight=1, ];
E: 63 99 [weight=1, ];
E: 63 103 [weight=4, ];
E: 63 111 [weight=9, ];
E: 63 112 [weight=2, ];
E: 63 128 [weight=2, ];
E: 64 66 [weight=1, ];
E: 64 102 [weight=1, ];
E: 64 103 [weight=1, ];
E: 64 111 [weight=3, ];
E: 64 112 [weight=2, ];
E: 64 128 [weight=2, ];
E: 65 67 [weight=1, ];
E: 65 102 [weight=1, ];
E: 65 103 [weight=1, ];
E: 65 111 [weight=3, ];
E: 65 112 [weight=2, ];
E: 65 128 [weight=2, ];
E: 66 72 [weight=1, ];
E: 66 74 [weight=1, ];
E: 66 103 [weight=3, ];
E: 66 111 [weight=7, ];
E: 66 112 [weight=2, ];
E: 66 128 [weight=2, ];
E: 67 72 [weight=1, ];
E: 67 74 [weight=1, ];
E: 67 103 [weight=4, ];
E: 67 111 [weight=9, ];
E: 67 112 [weight=2, ];
E: 67 128 [weight=2, ];
E: 68 70 [weight=1, ];
E: 68 102 [weight=1, ];
E: 68 103 [weight=2, ];
E: 68 111 [weight=3, ];
E: 68 112 [weight=2, ];
E: 68 128 [weight=2, ];
E: 69 71 [weight=1, ];
E: 69 102 [weight=1, ];
E: 69 103 [weight=2, ];
E: 69 111 [weight=3, ];
E: 69 112 [weight=2, ];
E: 69 128 [weight=2, ];
E: 70 72 [weight=1, ];
E: 70 75 [weight=1, ];
E: 70 103 [weight=5, ];
E: 70 111 [weight=7, ];
E: 70 112 [weight=2, ];
E: 70 128 [weight=2, ];
E: 71 72 [weight=1, ];
E: 71 75 [weight=1, ];
E: 71 103 [weight=6, ];
E: 71 111 [weight=9, ];
E: 71 112 [weight=2, ];
E: 71 128 [weight=2, ];
E: 72 73 [weight=1, ];
E: 72 102 [weight=1, ];
E: 72 111 [weight=1, ];
E: 72 112 [weight=2, ];
E: 72 128 [weight=2, ];
E: 73 77 [weight=2, ];
E: 73 103 [weight=5, ];
E: 73 111 [weight=15, ];
E: 73 112 [weight=2, ];
E: 73 128 [weight=2, ];
E: 74 100 [weight=1, ];
E: 74 103 [weight=6, ];
E: 74 111 [weight=12, ];
E: 74 112 [weight=2, ];
E: 74 128 [weight=2, ];
E: 75 99 [weight=1, ];
E: 75 103 [weight=6, ];
E: 75 111 [weight=12, ];
E: 75 112 [weight=2, ];
E: 75 128 [weight=2, ];
E: 76 99 [weight=1, ];
E: 76 103 [weight=6, ];
E: 76 111 [weight=12, ];
E: 76 112 [weight=2, ];
E: 76 128 [weight=2, ];
E: 77 100 [weight=1, ];
E: 77 103 [weight=6, ];
E: 77 111 [weight=12, ];
E: 77 112 [weight=2, ];
E: 77 128 [weight=2, ];
E: 78 86 [weight=1, ];
E: 78 112 [weight=3, ];
E: 78 128 [weight=2, ];
E: 79 80 [weight=1, ];
E: 79 86 [weight=1, ];
E: 79 94 [weight=1, ];
E: 79 102 [weight=1, ];
E: 79 111 [weight=2, ];
E: 79 112 [weight=2, ];
E: 79 128 [weight=2, ];
E: 80 85 [weight=1, ];
E: 80 86 [weight=3, ];
E: 80 94 [weight=5, ];
E: 80 95 [weight=2, ];
E: 80 106 [weight=1, ];
E: 80 107 [weight=1, ];
E: 80 111 [weight=12, ];
E: 80 112 [weight=2, ];
E: 80 128 [weight=2, ];
E: 81 82 [weight=1, ];
E: 81 86 [weight=4, ];
E: 81 102 [weight=1, ];
E: 81 111 [weight=2, ];
E: 81 112 [weight=6, ];
E: 81 128 [weight=2, ];
E: 82 84 [weight=2, ];
E: 82 85 [weight=2, ];
E: 82 86 [weight=21, ];
E: 82 111 [weight=36, ];
E: 82 112 [weight=6, ];
E: 82 128 [weight=2, ];
E: 83 94 [weight=1, ];
E: 83 95 [weight=1, ];
E: 83 106 [weight=1, ];
E: 83 111 [weight=1, ];
E: 83 128 [weight=2, ];
E: 84 86 [weight=2, ];
E: 84 88 [weight=1, ];
E: 84 106 [weight=1, ];
E: 84 111 [weight=8, ];
E: 84 112 [weight=4, ];
E: 84 128 [weight=2, ];
E: 85 86 [weight=1, ];
E: 85 88 [weight=1, ];
E: 85 106 [weight=1, ];
E: 85 111 [weight=5, ];
E: 85 112 [weight=4, ];
E: 85 128 [weight=2, ];
E: 86 88 [weight=1, ];
E: 86 107 [weight=1, ];
E: 86 111 [weight=2, ];
E: 86 112 [weight=5, ];
E: 86 128 [weight=2, ];
E: 87 88 [weight=1, ];
E: 87 91 [weight=1, ];
E: 87 106 [weight=2, ];
E: 87 107 [weight=6, ];
E: 87 110 [weight=5, ];
E: 87 111 [weight=4, ];
E: 87 128 [weight=2, ];
E: 88 89 [weight=1, ];
E: 88 90 [weight=1, ];
E: 88 103 [weight=2, ];
E: 88 105 [weight=1, ];
E: 88 110 [weight=1, ];
E: 88 111 [weight=6, ];
E: 88 112 [weight=4, ];
E: 88 128 [weight=2, ];
E: 89 90 [weight=1, ];
E: 89 102 [weight=1, ];
E: 89 103 [weight=2, ];
E: 89 111 [weight=4, ];
E: 89 112 [weight=4, ];
E: 89 128 [weight=2, ];
E: 90 99 [weight=2, ];
E: 90 103 [weight=31, ];
E: 90 111 [weight=56, ];
E: 90 112 [weight=4, ];
E: 90 128 [weight=2, ];
E: 91 99 [weight=1, ];
E: 91 100 [weight=1, ];
E: 91 103 [weight=13, ];
E: 91 105 [weight=1, ];
E: 91 106 [weight=2, ];
E: 91 107 [weight=21, ];
E: 91 110 [weight=3, ];
E: 91 111 [weight=19, ];
E: 91 128 [weight=2, ];
E: 92 103 [weight=1, ];
E: 92 112 [weight=2, ];
E: 92 128 [weight=2, ];
E: 93 94 [weight=1, ];
E: 93 112 [weight=1, ];
E: 93 128 [weight=2, ];
E: 94 95 [weight=1, ];
E: 94 107 [weight=1, ];
E: 94 112 [weight=1, ];
E: 94 128 [weight=2, ];
E: 95 105 [weight=1, ];
E: 95 110 [weight=1, ];
E: 95 128 [weight=2, ];
E: 96 98 [weight=1, ];
E: 96 103 [weight=1, ];
E: 96 104 [weight=2, ];
E: 96 105 [weight=3, ];
E: 96 106 [weight=1, ];
E: 96 107 [weight=2, ];
E: 96 111 [weight=3, ];
E: 96 128 [weight=2, ];
E: 97 98 [weight=1, ];
E: 97 102 [weight=1, ];
E: 97 103 [weight=1, ];
E: 97 111 [weight=3, ];
E: 97 112 [weight=2, ];
E: 97 128 [weight=2, ];
E: 98 100 [weight=1, ];
E: 98 103 [weight=14, ];
E: 98 111 [weight=24, ];
E: 98 112 [weight=2, ];
E: 98 128 [weight=2, ];
E: 99 100 [weight=1, ];
E: 99 102 [weight=1, ];
E: 99 103 [weight=1, ];
E: 99 111 [weight=2, ];
E: 99 112 [weight=2, ];
E: 99 128 [weight=2, ];
E: 100 103 [weight=3, ];
E: 100 105 [weight=1, ];
E: 100 111 [weight=7, ];
E: 100 112 [weight=2, ];
E: 100 128 [weight=2, ];
E: 101 102 [weight=1, ];
E: 101 110 [weight=3, ];
E: 101 128 [weight=2, ];
E: 102 105 [weight=1, ];
E: 102 110 [weight=6, ];
E: 102 112 [weight=14, ];
E: 102 127 [weight=1, ];
E: 102 128 [weight=3, ];
E: 103 104 [weight=1, ];
E: 103 111 [weight=1, ];
E: 103 112 [weight=3, ];
E: 103 128 [weight=2, ];
E: 104 105 [weight=1, ];
E: 104 107 [weight=1, ];
E: 104 112 [weight=1, ];
E: 104 128 [weight=2, ];
E: 105 110 [weight=1, ];
E: 105 128 [weight=2, ];
E: 106 107 [weight=1, ];
E: 106 110 [weight=2, ];
E: 106 111 [weight=1, ];
E: 106 128 [weight=2, ];
E: 107 110 [weight=2, ];
E: 107 112 [weight=1, ];
E: 107 128 [weight=2, ];
E: 108 110 [weight=1, ];
E: 108 111 [weight=1, ];
E: 108 112 [weight=2, ];
E: 108 128 [weight=2, ];
E: 109 110 [weight=2, ];
E: 109 128 [weight=2, ];
E: 110 128 [weight=2, ];
E: 111 112 [weight=2, ];
E: 111 128 [weight=2, ];
E: 112 128 [weight=2, ];
E: 113 128 [weight=2, ];
E: 114 128 [weight=2, ];
E: 115 128 [weight=2, ];
E: 116 128 [weight=2, ];
E: 117 128 [weight=2, ];
E: 118 128 [weight=2, ];
E: 119 128 [weight=2, ];
E: 120 128 [weight=2, ];
E: 121 128 [weight=2, ];
E: 122 128 [weight=2, ];
E: 123 127 [weight=2, ];
E: 123 128 [weight=4, ];
E: 124 126 [weight=1, ];
E: 124 127 [weight=1, ];
E: 124 128 [weight=3, ];
E: 125 127 [weight=2, ];
E: 125 128 [weight=4, ];
E: 126 127 [weight=2, ];
E: 126 128 [weight=4, ];
