N: 49 "AbGroup_ind" [body=yes, kind=cnst, prop=yes, path="AbelianGroup", ];
N: 48 "AbGroup_rec" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 50 "AbGroup_rect" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 47 "AbGroup_sind" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 40 "Build_AbGroup'" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 31 "QuotientAbGroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 3 "ab_cokernel" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 2 "ab_cokernel_embedding" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 1 "ab_cokernel_embedding_rec" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 8 "ab_homo_negation" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 5 "ab_image_embedding" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 4 "ab_image_in_embedding" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 13 "ab_kernel" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 7 "ab_mul" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 6 "ab_mul_natural" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 38 "ab_neg_op" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 45 "abgroup_commutative" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 14 "abgroup_first_iso" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 46 "abgroup_group" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 15 "abgroup_image" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 34 "abgroup_subgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 19 "abgroup_trivial" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 37 "equiv_path_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 36 "equiv_path_abgroup_group" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 29 "equiv_quotient_abgroup_ump" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 20 "hasequivs_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 21 "hasmorext_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 27 "is01cat_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 24 "is01cat_abgrouphomomorphism" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 17 "is0functor_abgroup_group" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 23 "is0gpd_abgrouphomomorphism" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 22 "is1cat_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 16 "is1functor_abgroup_group" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 26 "is2graph_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 41 "isabgroup_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 32 "isabgroup_quotient" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 35 "isabgroup_subgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 28 "isgraph_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 25 "isgraph_abgrouphomomorphism" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 33 "isnormal_ab_subgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 18 "ispointedcat_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 39 "issig_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 43 "negate_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 42 "plus_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 30 "quotient_abgroup_rec" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 12 "transport_abgrouphomomorphism_from_const" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 10 "transport_abgrouphomomorphism_to_const" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 11 "transport_iso_abgrouphomomorphism_from_const" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 9 "transport_iso_abgrouphomomorphism_to_const" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 44 "zero_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 52 "AbGroup" [kind=inductive, prop=no, path="AbelianGroup", ];
N: 51 "Build_AbGroup" [kind=construct, prop=no, path="AbelianGroup", ];
E: 1 2 [weight=1, ];
E: 1 28 [weight=3, ];
E: 1 33 [weight=2, ];
E: 1 46 [weight=20, ];
E: 1 52 [weight=4, ];
E: 2 31 [weight=1, ];
E: 2 52 [weight=3, ];
E: 3 31 [weight=1, ];
E: 3 52 [weight=3, ];
E: 4 5 [weight=1, ];
E: 4 28 [weight=2, ];
E: 4 46 [weight=6, ];
E: 4 52 [weight=4, ];
E: 5 28 [weight=2, ];
E: 5 33 [weight=1, ];
E: 5 46 [weight=9, ];
E: 5 52 [weight=4, ];
E: 6 7 [weight=2, ];
E: 6 52 [weight=4, ];
E: 7 52 [weight=2, ];
E: 8 52 [weight=2, ];
E: 9 10 [weight=1, ];
E: 9 28 [weight=6, ];
E: 9 37 [weight=9, ];
E: 9 52 [weight=13, ];
E: 10 28 [weight=6, ];
E: 10 37 [weight=3, ];
E: 10 46 [weight=9, ];
E: 10 52 [weight=19, ];
E: 11 12 [weight=1, ];
E: 11 28 [weight=6, ];
E: 11 37 [weight=9, ];
E: 11 52 [weight=11, ];
E: 12 28 [weight=7, ];
E: 12 37 [weight=6, ];
E: 12 46 [weight=9, ];
E: 12 52 [weight=23, ];
E: 13 28 [weight=2, ];
E: 13 35 [weight=1, ];
E: 13 46 [weight=5, ];
E: 13 51 [weight=1, ];
E: 13 52 [weight=5, ];
E: 14 15 [weight=2, ];
E: 14 28 [weight=2, ];
E: 14 31 [weight=2, ];
E: 14 33 [weight=1, ];
E: 14 46 [weight=19, ];
E: 14 52 [weight=4, ];
E: 15 28 [weight=2, ];
E: 15 35 [weight=1, ];
E: 15 46 [weight=5, ];
E: 15 51 [weight=1, ];
E: 15 52 [weight=5, ];
E: 16 17 [weight=1, ];
E: 16 22 [weight=1, ];
E: 16 26 [weight=1, ];
E: 16 27 [weight=1, ];
E: 16 28 [weight=1, ];
E: 16 46 [weight=2, ];
E: 16 52 [weight=2, ];
E: 17 28 [weight=1, ];
E: 17 46 [weight=2, ];
E: 17 52 [weight=2, ];
E: 18 19 [weight=3, ];
E: 18 22 [weight=4, ];
E: 18 26 [weight=4, ];
E: 18 27 [weight=4, ];
E: 18 28 [weight=4, ];
E: 18 46 [weight=2, ];
E: 18 52 [weight=6, ];
E: 19 51 [weight=1, ];
E: 19 52 [weight=1, ];
E: 20 22 [weight=1, ];
E: 20 26 [weight=1, ];
E: 20 27 [weight=1, ];
E: 20 28 [weight=1, ];
E: 20 46 [weight=1, ];
E: 20 52 [weight=2, ];
E: 21 22 [weight=1, ];
E: 21 26 [weight=1, ];
E: 21 27 [weight=1, ];
E: 21 28 [weight=1, ];
E: 21 46 [weight=1, ];
E: 21 52 [weight=2, ];
E: 22 26 [weight=1, ];
E: 22 27 [weight=1, ];
E: 22 28 [weight=1, ];
E: 22 46 [weight=1, ];
E: 22 52 [weight=2, ];
E: 23 24 [weight=1, ];
E: 23 25 [weight=1, ];
E: 23 28 [weight=1, ];
E: 23 46 [weight=6, ];
E: 23 52 [weight=4, ];
E: 24 25 [weight=1, ];
E: 24 28 [weight=1, ];
E: 24 46 [weight=4, ];
E: 24 52 [weight=4, ];
E: 25 28 [weight=1, ];
E: 25 46 [weight=1, ];
E: 25 52 [weight=5, ];
E: 26 28 [weight=1, ];
E: 26 46 [weight=1, ];
E: 26 52 [weight=2, ];
E: 27 28 [weight=1, ];
E: 27 46 [weight=1, ];
E: 27 52 [weight=2, ];
E: 28 46 [weight=1, ];
E: 28 52 [weight=2, ];
E: 29 31 [weight=1, ];
E: 29 33 [weight=1, ];
E: 29 52 [weight=2, ];
E: 30 31 [weight=1, ];
E: 30 33 [weight=1, ];
E: 30 52 [weight=4, ];
E: 31 32 [weight=1, ];
E: 31 33 [weight=1, ];
E: 31 51 [weight=1, ];
E: 31 52 [weight=3, ];
E: 32 33 [weight=25, ];
E: 32 52 [weight=2, ];
E: 33 52 [weight=2, ];
E: 34 35 [weight=1, ];
E: 34 51 [weight=1, ];
E: 34 52 [weight=3, ];
E: 35 52 [weight=2, ];
E: 36 37 [weight=1, ];
E: 36 52 [weight=7, ];
E: 37 39 [weight=10, ];
E: 37 52 [weight=7, ];
E: 38 52 [weight=2, ];
E: 39 51 [weight=8, ];
E: 39 52 [weight=12, ];
E: 40 51 [weight=1, ];
E: 40 52 [weight=1, ];
E: 41 52 [weight=2, ];
E: 42 52 [weight=2, ];
E: 43 52 [weight=2, ];
E: 44 52 [weight=2, ];
E: 45 52 [weight=2, ];
E: 46 52 [weight=2, ];
E: 47 51 [weight=2, ];
E: 47 52 [weight=4, ];
E: 48 50 [weight=1, ];
E: 48 51 [weight=1, ];
E: 48 52 [weight=3, ];
E: 49 51 [weight=2, ];
E: 49 52 [weight=4, ];
E: 50 51 [weight=2, ];
E: 50 52 [weight=4, ];
