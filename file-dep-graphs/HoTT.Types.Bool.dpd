N: 27 "Bool_ind" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 26 "Bool_rec" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 25 "Bool_rect" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 1 "abelian_aut_bool" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 24 "andb" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 5 "aut_bool_canonical" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 3 "aut_bool_idmap_or_negb" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 15 "decidable_paths_bool" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 4 "equiv_bool_aut_bool" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 10 "equiv_bool_forall_prod" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 9 "equiv_bool_rec_uncurried" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 7 "equiv_negb" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 6 "eval_bool_isequiv" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 17 "false_ne_true" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 14 "hset_bool" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 2 "idmap_bool_ne_negb" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 21 "implb" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 19 "implb_impl" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 20 "implb_true" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 8 "isequiv_negb" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 22 "negb" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 12 "negb_ne" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 11 "negb_ne'" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 13 "not_fixed_negb" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 23 "orb" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 16 "true_ne_false" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 18 "trunc_if" [body=yes, kind=cnst, prop=no, path="Bool", ];
N: 30 "Bool" [kind=inductive, prop=no, path="Bool", ];
N: 29 "true" [kind=construct, prop=no, path="Bool", ];
N: 28 "false" [kind=construct, prop=no, path="Bool", ];
E: 1 5 [weight=4, ];
E: 1 7 [weight=27, ];
E: 1 28 [weight=4, ];
E: 1 29 [weight=10, ];
E: 1 30 [weight=134, ];
E: 2 7 [weight=4, ];
E: 2 16 [weight=1, ];
E: 2 29 [weight=1, ];
E: 2 30 [weight=12, ];
E: 3 4 [weight=8, ];
E: 3 7 [weight=12, ];
E: 3 28 [weight=2, ];
E: 3 29 [weight=3, ];
E: 3 30 [weight=73, ];
E: 4 5 [weight=1, ];
E: 4 7 [weight=1, ];
E: 4 28 [weight=1, ];
E: 4 29 [weight=2, ];
E: 4 30 [weight=51, ];
E: 5 6 [weight=1, ];
E: 5 7 [weight=11, ];
E: 5 22 [weight=2, ];
E: 5 28 [weight=7, ];
E: 5 29 [weight=15, ];
E: 5 30 [weight=79, ];
E: 6 22 [weight=9, ];
E: 6 28 [weight=27, ];
E: 6 29 [weight=22, ];
E: 6 30 [weight=52, ];
E: 7 8 [weight=1, ];
E: 7 22 [weight=1, ];
E: 7 30 [weight=4, ];
E: 8 22 [weight=67, ];
E: 8 28 [weight=15, ];
E: 8 29 [weight=15, ];
E: 8 30 [weight=47, ];
E: 9 10 [weight=1, ];
E: 9 28 [weight=1, ];
E: 9 29 [weight=1, ];
E: 9 30 [weight=6, ];
E: 10 28 [weight=11, ];
E: 10 29 [weight=11, ];
E: 10 30 [weight=19, ];
E: 11 12 [weight=1, ];
E: 11 22 [weight=2, ];
E: 11 30 [weight=9, ];
E: 12 22 [weight=8, ];
E: 12 28 [weight=10, ];
E: 12 29 [weight=10, ];
E: 12 30 [weight=25, ];
E: 13 16 [weight=1, ];
E: 13 17 [weight=1, ];
E: 13 22 [weight=2, ];
E: 13 30 [weight=5, ];
E: 14 15 [weight=1, ];
E: 14 30 [weight=3, ];
E: 15 16 [weight=1, ];
E: 15 17 [weight=1, ];
E: 15 28 [weight=11, ];
E: 15 29 [weight=11, ];
E: 15 30 [weight=22, ];
E: 16 17 [weight=1, ];
E: 16 28 [weight=3, ];
E: 16 29 [weight=3, ];
E: 16 30 [weight=5, ];
E: 17 28 [weight=3, ];
E: 17 29 [weight=3, ];
E: 17 30 [weight=5, ];
E: 18 30 [weight=5, ];
E: 19 21 [weight=4, ];
E: 19 28 [weight=14, ];
E: 19 29 [weight=78, ];
E: 19 30 [weight=64, ];
E: 20 21 [weight=4, ];
E: 20 28 [weight=1, ];
E: 20 29 [weight=7, ];
E: 20 30 [weight=7, ];
E: 21 29 [weight=1, ];
E: 21 30 [weight=7, ];
E: 22 28 [weight=1, ];
E: 22 29 [weight=1, ];
E: 22 30 [weight=5, ];
E: 23 29 [weight=1, ];
E: 23 30 [weight=7, ];
E: 24 28 [weight=1, ];
E: 24 30 [weight=7, ];
E: 25 27 [weight=1, ];
E: 25 28 [weight=1, ];
E: 25 29 [weight=1, ];
E: 25 30 [weight=2, ];
E: 26 30 [weight=3, ];
E: 27 28 [weight=2, ];
E: 27 29 [weight=2, ];
E: 27 30 [weight=5, ];
