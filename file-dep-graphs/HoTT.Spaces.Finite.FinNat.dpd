N: 21 "FinNat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 1 "equiv_fin_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 11 "fin_to_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 15 "finnat_ind" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 13 "finnat_ind_beta_succ" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 14 "finnat_ind_beta_zero" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 9 "finnat_to_fin" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 16 "incl_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 12 "is_bounded_fin_to_nat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 17 "last_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 10 "path_fin_to_finnat_fin_incl_incl_finnat_fin_to_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 7 "path_fin_to_finnat_fin_zero" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 8 "path_fin_to_finnat_fsucc" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 2 "path_fin_to_finnat_to_fin" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 5 "path_finnat_to_fin_incl" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 4 "path_finnat_to_fin_last" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 6 "path_finnat_to_fin_succ" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 3 "path_finnat_to_fin_to_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 18 "path_succ_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 19 "succ_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 20 "zero_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
E: 1 2 [weight=1, ];
E: 1 3 [weight=1, ];
E: 1 9 [weight=1, ];
E: 1 11 [weight=1, ];
E: 1 21 [weight=2, ];
E: 2 4 [weight=1, ];
E: 2 5 [weight=1, ];
E: 2 9 [weight=10, ];
E: 2 11 [weight=11, ];
E: 2 16 [weight=1, ];
E: 3 7 [weight=1, ];
E: 3 8 [weight=1, ];
E: 3 9 [weight=8, ];
E: 3 11 [weight=13, ];
E: 3 19 [weight=2, ];
E: 3 20 [weight=1, ];
E: 3 21 [weight=30, ];
E: 4 9 [weight=4, ];
E: 4 17 [weight=4, ];
E: 5 6 [weight=2, ];
E: 5 9 [weight=23, ];
E: 5 15 [weight=1, ];
E: 5 16 [weight=10, ];
E: 5 19 [weight=6, ];
E: 5 20 [weight=1, ];
E: 5 21 [weight=6, ];
E: 6 9 [weight=9, ];
E: 6 19 [weight=2, ];
E: 6 21 [weight=4, ];
E: 7 11 [weight=2, ];
E: 7 20 [weight=2, ];
E: 7 21 [weight=1, ];
E: 8 11 [weight=4, ];
E: 8 19 [weight=2, ];
E: 8 21 [weight=1, ];
E: 9 21 [weight=5, ];
E: 10 11 [weight=3, ];
E: 10 16 [weight=1, ];
E: 10 21 [weight=2, ];
E: 11 12 [weight=1, ];
E: 11 21 [weight=1, ];
E: 13 15 [weight=9, ];
E: 13 18 [weight=1, ];
E: 13 19 [weight=21, ];
E: 13 20 [weight=2, ];
E: 13 21 [weight=13, ];
E: 14 15 [weight=1, ];
E: 14 19 [weight=2, ];
E: 14 20 [weight=18, ];
E: 14 21 [weight=9, ];
E: 15 18 [weight=1, ];
E: 15 19 [weight=3, ];
E: 15 20 [weight=4, ];
E: 15 21 [weight=13, ];
E: 16 21 [weight=3, ];
E: 17 21 [weight=1, ];
E: 18 19 [weight=2, ];
E: 18 21 [weight=1, ];
E: 19 21 [weight=3, ];
E: 20 21 [weight=1, ];
