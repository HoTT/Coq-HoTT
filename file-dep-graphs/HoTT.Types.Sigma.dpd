N: 57 "ap_exist" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 45 "ap_functor_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 54 "ap_path_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 53 "ap_path_sigma_1p" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 71 "ap_pr1_path_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 6 "ap_pr1_path_sigma_hprop" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 52 "ap_sig_rec_path_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 80 "dpath_forall'" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 36 "equiv_contr_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 43 "equiv_functor_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 42 "equiv_functor_sigma'" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 41 "equiv_functor_sigma_id" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 40 "equiv_functor_sigma_pb" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 66 "equiv_path_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 64 "equiv_path_sigma_contra" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 14 "equiv_path_sigma_hprop" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 19 "equiv_sig_coind" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 24 "equiv_sig_ind" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 23 "equiv_sig_ind'" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 35 "equiv_sigma_assoc" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 34 "equiv_sigma_assoc'" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 37 "equiv_sigma_contr" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 33 "equiv_sigma_prod" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 32 "equiv_sigma_prod'" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 31 "equiv_sigma_prod0" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 30 "equiv_sigma_prod1" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 29 "equiv_sigma_prod_prod" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 28 "equiv_sigma_symm" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 27 "equiv_sigma_symm'" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 26 "equiv_sigma_symm0" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 85 "eta2_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 84 "eta3_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 69 "eta_path_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 74 "eta_path_sigma_uncurried" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 86 "eta_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 46 "functor_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 4 "hfiber_functor_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 2 "hfiber_functor_sigma_idmap" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 39 "iff_functor_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 12 "isequiv_ap_pr1_hprop" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 44 "isequiv_functor_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 67 "isequiv_path_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 65 "isequiv_path_sigma_contra" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 15 "isequiv_path_sigma_hprop" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 38 "isequiv_pr1_contr" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 13 "isequiv_pr1_path_hprop" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 20 "isequiv_sig_coind" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 25 "isequiv_sig_ind" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 17 "ishprop_sigma_disjoint" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 18 "istrunc_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 1 "istruncmap_from_functor_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 3 "istruncmap_functor_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 50 "path_path_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 51 "path_path_sigma_uncurried" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 82 "path_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 79 "path_sigma'" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 16 "path_sigma_hprop" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 11 "path_sigma_hprop_1" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 10 "path_sigma_hprop_V" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 8 "path_sigma_hprop_ap_pr1" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 9 "path_sigma_hprop_pp" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 7 "path_sigma_hprop_pr1_path" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 61 "path_sigma_p1_1p'" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 63 "path_sigma_pp_pp" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 62 "path_sigma_pp_pp'" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 83 "path_sigma_uncurried" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 81 "path_sigma_uncurried_contra" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 78 "pr1_path" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 60 "pr1_path_1" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 58 "pr1_path_V" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 5 "pr1_path_path_sigma_hprop" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 59 "pr1_path_pp" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 72 "pr1_path_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 76 "pr1_path_sigma_uncurried" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 77 "pr2_path" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 70 "pr2_path_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 75 "pr2_path_sigma_uncurried" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 21 "sig_coind" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 22 "sig_coind_uncurried" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 55 "transportDD_is_transport" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 56 "transportD_is_transport" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 68 "transport_pr1_path_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 73 "transport_pr1_path_sigma_uncurried" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 49 "transport_sigma" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 48 "transport_sigma'" [body=yes, kind=cnst, prop=no, path="Sigma", ];
N: 47 "transport_sigma_'" [body=yes, kind=cnst, prop=no, path="Sigma", ];
E: 1 2 [weight=1, ];
E: 1 46 [weight=4, ];
E: 2 4 [weight=1, ];
E: 2 36 [weight=1, ];
E: 2 46 [weight=2, ];
E: 3 4 [weight=1, ];
E: 3 18 [weight=1, ];
E: 3 46 [weight=4, ];
E: 4 41 [weight=3, ];
E: 4 46 [weight=2, ];
E: 4 66 [weight=1, ];
E: 5 15 [weight=1, ];
E: 5 16 [weight=1, ];
E: 5 78 [weight=1, ];
E: 6 15 [weight=1, ];
E: 6 16 [weight=1, ];
E: 7 15 [weight=1, ];
E: 7 16 [weight=1, ];
E: 7 78 [weight=1, ];
E: 8 15 [weight=1, ];
E: 8 16 [weight=1, ];
E: 9 11 [weight=1, ];
E: 9 16 [weight=27, ];
E: 10 11 [weight=2, ];
E: 10 16 [weight=12, ];
E: 11 16 [weight=2, ];
E: 11 83 [weight=2, ];
E: 12 13 [weight=1, ];
E: 13 15 [weight=2, ];
E: 13 16 [weight=1, ];
E: 13 78 [weight=1, ];
E: 14 15 [weight=1, ];
E: 14 16 [weight=1, ];
E: 15 16 [weight=1, ];
E: 15 67 [weight=1, ];
E: 15 83 [weight=1, ];
E: 16 83 [weight=1, ];
E: 17 79 [weight=1, ];
E: 18 67 [weight=1, ];
E: 18 79 [weight=1, ];
E: 18 83 [weight=1, ];
E: 19 20 [weight=1, ];
E: 19 22 [weight=1, ];
E: 20 22 [weight=11, ];
E: 21 22 [weight=1, ];
E: 23 24 [weight=1, ];
E: 24 25 [weight=1, ];
E: 36 79 [weight=1, ];
E: 38 79 [weight=1, ];
E: 39 46 [weight=2, ];
E: 40 43 [weight=1, ];
E: 41 42 [weight=1, ];
E: 42 43 [weight=1, ];
E: 43 44 [weight=1, ];
E: 43 46 [weight=1, ];
E: 44 46 [weight=25, ];
E: 44 79 [weight=2, ];
E: 45 46 [weight=19, ];
E: 45 82 [weight=7, ];
E: 50 51 [weight=1, ];
E: 50 77 [weight=6, ];
E: 50 78 [weight=17, ];
E: 51 69 [weight=1, ];
E: 51 77 [weight=18, ];
E: 51 78 [weight=52, ];
E: 51 82 [weight=4, ];
E: 52 79 [weight=3, ];
E: 53 79 [weight=2, ];
E: 54 79 [weight=3, ];
E: 55 79 [weight=4, ];
E: 56 79 [weight=3, ];
E: 57 79 [weight=3, ];
E: 58 78 [weight=2, ];
E: 59 78 [weight=3, ];
E: 60 78 [weight=2, ];
E: 61 79 [weight=11, ];
E: 62 63 [weight=1, ];
E: 62 79 [weight=3, ];
E: 63 82 [weight=20, ];
E: 64 65 [weight=1, ];
E: 64 81 [weight=1, ];
E: 65 81 [weight=8, ];
E: 66 67 [weight=1, ];
E: 66 83 [weight=1, ];
E: 67 69 [weight=5, ];
E: 67 77 [weight=25, ];
E: 67 78 [weight=27, ];
E: 67 83 [weight=20, ];
E: 68 73 [weight=1, ];
E: 68 82 [weight=1, ];
E: 69 74 [weight=1, ];
E: 69 77 [weight=1, ];
E: 69 78 [weight=1, ];
E: 69 82 [weight=1, ];
E: 70 72 [weight=1, ];
E: 70 75 [weight=1, ];
E: 70 77 [weight=1, ];
E: 70 78 [weight=3, ];
E: 70 82 [weight=4, ];
E: 71 72 [weight=1, ];
E: 71 82 [weight=1, ];
E: 72 76 [weight=1, ];
E: 72 78 [weight=1, ];
E: 72 82 [weight=1, ];
E: 73 83 [weight=2, ];
E: 74 77 [weight=2, ];
E: 74 78 [weight=2, ];
E: 74 83 [weight=2, ];
E: 75 76 [weight=5, ];
E: 75 77 [weight=4, ];
E: 75 78 [weight=15, ];
E: 75 83 [weight=19, ];
E: 76 78 [weight=4, ];
E: 76 83 [weight=4, ];
E: 77 78 [weight=1, ];
E: 79 82 [weight=1, ];
E: 80 82 [weight=3, ];
E: 81 83 [weight=1, ];
E: 82 83 [weight=1, ];
