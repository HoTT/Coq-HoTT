N: 11 "Build_IsIdempotent" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 7 "Idempotent" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 13 "IsIdempotent" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 68 "IsPreIdempotent" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 55 "IsQuasiIdempotent" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 74 "PathRetractOf" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 65 "PreIdempotent" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 52 "QuasiIdempotent" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 90 "RetractOf_ind" [body=yes, kind=cnst, prop=yes, path="Idempotents", ];
N: 89 "RetractOf_rec" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 91 "RetractOf_rect" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 88 "RetractOf_sind" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 70 "Splitting" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 15 "Splitting_PreIdempotent" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 76 "contr_retracttype" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 1 "contr_splitting_preidem_idmap" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 4 "equiv_idempotent_retractof" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 73 "equiv_path_retractof" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 80 "equiv_retractof" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 79 "equiv_retractof'" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 22 "equiv_split_idem_retract" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 23 "equiv_split_idem_retract_isadj" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 19 "equiv_split_idem_retract_issect" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 21 "equiv_split_idem_retract_retr" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 20 "equiv_split_idem_retract_sect" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 18 "equiv_split_idem_retract_splits" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 2 "idem_idmap" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 6 "idempotent_pr1" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 83 "idmap_retractof" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 12 "is_coherent_idem" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 57 "isemb_split_preidem_splitsupp" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 67 "isidem" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 54 "isidem2" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 5 "isidem_idem" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 3 "isidem_idmap" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 10 "isidem_isqidem" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 66 "ispreidem_homotopic" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 62 "ispreidem_idmap" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 9 "ispreidem_isidem" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 63 "ispreidem_preidem" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 47 "ispreidem_retract" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 43 "ispreidem_split" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 53 "isqidem_homotopic" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 49 "isqidem_idmap" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 8 "isqidem_isidem" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 50 "isqidem_qidem" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 45 "isqidem_retract" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 42 "isqidem_split" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 75 "issig_retractof" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 33 "nudge" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 32 "nudge_eq" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 72 "path_retractof" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 35 "path_split_idem" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 36 "path_split_idem_subproof" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 61 "preidem_idmap" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 46 "preidem_retract" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 64 "preidempotent_pr1" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 48 "qidem_idmap" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 44 "qidem_retract" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 51 "quasiidempotent_pr1" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 71 "retract_idem" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 84 "retract_issect" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 86 "retract_retr" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 17 "retract_retractof_qidem" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 85 "retract_sect" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 87 "retract_type" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 82 "retractof_equiv" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 81 "retractof_equiv'" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 77 "retractof_hfiber" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 78 "retractof_hfiber_subproof" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 34 "sect_path_split_idem" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 41 "split_idem" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 29 "split_idem_issect" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 31 "split_idem_issect_part1" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 30 "split_idem_issect_part2" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 40 "split_idem_pr1" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 26 "split_idem_preidem" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 38 "split_idem_retr" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 28 "split_idem_retract" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 25 "split_idem_retract'" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 39 "split_idem_sect" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 27 "split_idem_split" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 24 "split_idem_split'" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 37 "split_idem_splits" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 60 "split_preidem_set" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 58 "split_preidem_splitsupp" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 59 "split_preidem_wconst" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 56 "splitsupp_split_isemb" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 69 "splitting_idmap" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 14 "splitting_preidem_retractof_qidem" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 16 "splitting_retractof_isqidem" [body=yes, kind=cnst, prop=no, path="Idempotents", ];
N: 93 "RetractOf" [kind=inductive, prop=no, path="Idempotents", ];
N: 92 "Build_RetractOf" [kind=construct, prop=no, path="Idempotents", ];
E: 1 15 [weight=3, ];
E: 1 61 [weight=138, ];
E: 1 62 [weight=2, ];
E: 1 63 [weight=2, ];
E: 1 64 [weight=133, ];
E: 1 67 [weight=2, ];
E: 1 70 [weight=93, ];
E: 1 71 [weight=160, ];
E: 1 92 [weight=173, ];
E: 1 93 [weight=333, ];
E: 2 3 [weight=1, ];
E: 2 7 [weight=1, ];
E: 2 13 [weight=1, ];
E: 3 11 [weight=1, ];
E: 3 13 [weight=1, ];
E: 3 69 [weight=1, ];
E: 4 7 [weight=3, ];
E: 4 13 [weight=2, ];
E: 4 16 [weight=1, ];
E: 4 22 [weight=1, ];
E: 4 55 [weight=1, ];
E: 4 68 [weight=2, ];
E: 4 70 [weight=5, ];
E: 4 71 [weight=5, ];
E: 4 93 [weight=15, ];
E: 5 6 [weight=1, ];
E: 5 7 [weight=2, ];
E: 5 13 [weight=1, ];
E: 6 7 [weight=1, ];
E: 6 13 [weight=1, ];
E: 7 13 [weight=1, ];
E: 8 9 [weight=1, ];
E: 8 13 [weight=2, ];
E: 8 16 [weight=1, ];
E: 8 39 [weight=1, ];
E: 8 55 [weight=3, ];
E: 8 68 [weight=4, ];
E: 8 71 [weight=1, ];
E: 9 13 [weight=2, ];
E: 9 16 [weight=1, ];
E: 9 39 [weight=1, ];
E: 9 55 [weight=2, ];
E: 9 68 [weight=5, ];
E: 9 71 [weight=1, ];
E: 10 11 [weight=1, ];
E: 10 13 [weight=1, ];
E: 10 27 [weight=1, ];
E: 10 55 [weight=2, ];
E: 10 68 [weight=2, ];
E: 11 13 [weight=1, ];
E: 11 16 [weight=1, ];
E: 11 22 [weight=1, ];
E: 11 55 [weight=1, ];
E: 11 68 [weight=2, ];
E: 11 70 [weight=1, ];
E: 12 13 [weight=2, ];
E: 12 16 [weight=1, ];
E: 12 41 [weight=1, ];
E: 12 55 [weight=2, ];
E: 12 68 [weight=4, ];
E: 12 71 [weight=1, ];
E: 13 16 [weight=1, ];
E: 13 41 [weight=1, ];
E: 13 55 [weight=2, ];
E: 13 68 [weight=4, ];
E: 13 71 [weight=1, ];
E: 14 15 [weight=3, ];
E: 14 17 [weight=10, ];
E: 14 26 [weight=2, ];
E: 14 29 [weight=8, ];
E: 14 38 [weight=24, ];
E: 14 39 [weight=8, ];
E: 14 41 [weight=8, ];
E: 14 46 [weight=6, ];
E: 14 51 [weight=84, ];
E: 14 52 [weight=12, ];
E: 14 55 [weight=112, ];
E: 14 63 [weight=112, ];
E: 14 64 [weight=331, ];
E: 14 65 [weight=206, ];
E: 14 67 [weight=17, ];
E: 14 68 [weight=187, ];
E: 14 70 [weight=3, ];
E: 14 71 [weight=116, ];
E: 14 77 [weight=2, ];
E: 14 79 [weight=1, ];
E: 14 81 [weight=2, ];
E: 14 93 [weight=125, ];
E: 15 63 [weight=1, ];
E: 15 64 [weight=18, ];
E: 15 65 [weight=2, ];
E: 15 67 [weight=1, ];
E: 15 70 [weight=2, ];
E: 15 71 [weight=11, ];
E: 16 17 [weight=4, ];
E: 16 51 [weight=14, ];
E: 16 52 [weight=12, ];
E: 16 55 [weight=54, ];
E: 16 63 [weight=26, ];
E: 16 64 [weight=28, ];
E: 16 65 [weight=24, ];
E: 16 68 [weight=104, ];
E: 16 70 [weight=3, ];
E: 16 71 [weight=9, ];
E: 16 77 [weight=2, ];
E: 16 79 [weight=1, ];
E: 16 81 [weight=2, ];
E: 16 93 [weight=6, ];
E: 17 19 [weight=1, ];
E: 17 20 [weight=1, ];
E: 17 21 [weight=1, ];
E: 17 22 [weight=1, ];
E: 17 25 [weight=3, ];
E: 17 44 [weight=3, ];
E: 17 52 [weight=2, ];
E: 17 72 [weight=1, ];
E: 17 92 [weight=1, ];
E: 17 93 [weight=8, ];
E: 18 20 [weight=3, ];
E: 18 21 [weight=3, ];
E: 18 22 [weight=22, ];
E: 18 29 [weight=28, ];
E: 18 30 [weight=36, ];
E: 18 31 [weight=43, ];
E: 18 33 [weight=323, ];
E: 18 34 [weight=3, ];
E: 18 35 [weight=111, ];
E: 18 37 [weight=3, ];
E: 18 38 [weight=7773, ];
E: 18 39 [weight=963, ];
E: 18 40 [weight=243, ];
E: 18 41 [weight=389, ];
E: 18 45 [weight=102, ];
E: 18 47 [weight=28, ];
E: 18 54 [weight=38, ];
E: 18 67 [weight=657, ];
E: 18 93 [weight=2, ];
E: 19 20 [weight=3, ];
E: 19 21 [weight=3, ];
E: 19 22 [weight=36, ];
E: 19 29 [weight=7, ];
E: 19 30 [weight=16, ];
E: 19 31 [weight=20, ];
E: 19 33 [weight=140, ];
E: 19 34 [weight=3, ];
E: 19 35 [weight=48, ];
E: 19 38 [weight=3208, ];
E: 19 39 [weight=325, ];
E: 19 40 [weight=108, ];
E: 19 41 [weight=64, ];
E: 19 45 [weight=40, ];
E: 19 47 [weight=12, ];
E: 19 54 [weight=17, ];
E: 19 67 [weight=295, ];
E: 19 93 [weight=2, ];
E: 20 22 [weight=1, ];
E: 20 39 [weight=1, ];
E: 20 93 [weight=2, ];
E: 21 22 [weight=1, ];
E: 21 38 [weight=1, ];
E: 21 47 [weight=1, ];
E: 21 93 [weight=2, ];
E: 22 23 [weight=1, ];
E: 22 29 [weight=4, ];
E: 22 37 [weight=2, ];
E: 22 38 [weight=23, ];
E: 22 39 [weight=45, ];
E: 22 41 [weight=56, ];
E: 22 45 [weight=4, ];
E: 22 47 [weight=27, ];
E: 22 93 [weight=2, ];
E: 23 29 [weight=32, ];
E: 23 30 [weight=30, ];
E: 23 31 [weight=37, ];
E: 23 33 [weight=281, ];
E: 23 34 [weight=3, ];
E: 23 35 [weight=93, ];
E: 23 38 [weight=287, ];
E: 23 39 [weight=1436, ];
E: 23 40 [weight=818, ];
E: 23 41 [weight=169, ];
E: 23 45 [weight=94, ];
E: 23 47 [weight=103, ];
E: 23 54 [weight=32, ];
E: 23 67 [weight=551, ];
E: 23 93 [weight=2, ];
E: 24 27 [weight=1, ];
E: 24 50 [weight=1, ];
E: 24 51 [weight=2, ];
E: 24 52 [weight=2, ];
E: 24 55 [weight=1, ];
E: 24 63 [weight=2, ];
E: 24 64 [weight=1, ];
E: 24 65 [weight=2, ];
E: 24 70 [weight=1, ];
E: 25 28 [weight=1, ];
E: 25 50 [weight=1, ];
E: 25 51 [weight=1, ];
E: 25 52 [weight=2, ];
E: 25 55 [weight=1, ];
E: 25 63 [weight=2, ];
E: 25 64 [weight=1, ];
E: 25 65 [weight=2, ];
E: 25 93 [weight=1, ];
E: 26 29 [weight=2, ];
E: 26 30 [weight=9, ];
E: 26 31 [weight=13, ];
E: 26 33 [weight=69, ];
E: 26 34 [weight=3, ];
E: 26 35 [weight=27, ];
E: 26 38 [weight=1848, ];
E: 26 39 [weight=165, ];
E: 26 40 [weight=58, ];
E: 26 41 [weight=32, ];
E: 26 54 [weight=1, ];
E: 26 55 [weight=2, ];
E: 26 67 [weight=2, ];
E: 26 68 [weight=2, ];
E: 27 28 [weight=1, ];
E: 27 37 [weight=1, ];
E: 27 54 [weight=1, ];
E: 27 55 [weight=2, ];
E: 27 67 [weight=1, ];
E: 27 68 [weight=2, ];
E: 27 70 [weight=1, ];
E: 27 71 [weight=1, ];
E: 27 93 [weight=2, ];
E: 28 29 [weight=1, ];
E: 28 38 [weight=1, ];
E: 28 39 [weight=1, ];
E: 28 41 [weight=1, ];
E: 28 54 [weight=1, ];
E: 28 55 [weight=2, ];
E: 28 67 [weight=1, ];
E: 28 68 [weight=2, ];
E: 28 92 [weight=1, ];
E: 28 93 [weight=1, ];
E: 29 30 [weight=1, ];
E: 29 31 [weight=1, ];
E: 29 32 [weight=1, ];
E: 29 33 [weight=3, ];
E: 29 35 [weight=1, ];
E: 29 38 [weight=4, ];
E: 29 39 [weight=4, ];
E: 29 41 [weight=5, ];
E: 29 54 [weight=1, ];
E: 29 55 [weight=2, ];
E: 29 67 [weight=1, ];
E: 29 68 [weight=2, ];
E: 30 31 [weight=46, ];
E: 30 40 [weight=77, ];
E: 30 41 [weight=2, ];
E: 30 54 [weight=1, ];
E: 30 55 [weight=2, ];
E: 30 67 [weight=3, ];
E: 30 68 [weight=2, ];
E: 31 40 [weight=12, ];
E: 31 41 [weight=2, ];
E: 31 67 [weight=1, ];
E: 31 68 [weight=2, ];
E: 32 33 [weight=15, ];
E: 32 35 [weight=2, ];
E: 32 40 [weight=4, ];
E: 32 41 [weight=5, ];
E: 32 54 [weight=1, ];
E: 32 55 [weight=2, ];
E: 32 67 [weight=1, ];
E: 32 68 [weight=2, ];
E: 33 40 [weight=1, ];
E: 33 41 [weight=3, ];
E: 34 35 [weight=4, ];
E: 34 36 [weight=3, ];
E: 34 39 [weight=3, ];
E: 34 41 [weight=5, ];
E: 35 36 [weight=1, ];
E: 35 41 [weight=5, ];
E: 36 41 [weight=4, ];
E: 37 38 [weight=2, ];
E: 37 39 [weight=2, ];
E: 37 67 [weight=1, ];
E: 37 68 [weight=2, ];
E: 38 41 [weight=1, ];
E: 38 67 [weight=1, ];
E: 38 68 [weight=2, ];
E: 39 40 [weight=1, ];
E: 39 41 [weight=2, ];
E: 40 41 [weight=1, ];
E: 42 43 [weight=1, ];
E: 42 45 [weight=1, ];
E: 42 47 [weight=1, ];
E: 42 53 [weight=1, ];
E: 42 55 [weight=1, ];
E: 42 70 [weight=2, ];
E: 42 71 [weight=3, ];
E: 42 93 [weight=3, ];
E: 43 47 [weight=1, ];
E: 43 66 [weight=1, ];
E: 43 68 [weight=1, ];
E: 43 70 [weight=2, ];
E: 43 71 [weight=2, ];
E: 43 93 [weight=1, ];
E: 44 45 [weight=1, ];
E: 44 46 [weight=1, ];
E: 44 52 [weight=1, ];
E: 44 55 [weight=1, ];
E: 44 63 [weight=1, ];
E: 44 64 [weight=1, ];
E: 44 65 [weight=2, ];
E: 44 93 [weight=2, ];
E: 45 47 [weight=6, ];
E: 45 55 [weight=2, ];
E: 45 67 [weight=2, ];
E: 45 71 [weight=24, ];
E: 45 92 [weight=28, ];
E: 45 93 [weight=2, ];
E: 46 47 [weight=1, ];
E: 46 65 [weight=1, ];
E: 46 68 [weight=1, ];
E: 46 71 [weight=1, ];
E: 46 93 [weight=2, ];
E: 47 68 [weight=1, ];
E: 47 71 [weight=1, ];
E: 47 93 [weight=2, ];
E: 48 49 [weight=1, ];
E: 48 52 [weight=1, ];
E: 48 55 [weight=1, ];
E: 48 61 [weight=1, ];
E: 48 63 [weight=1, ];
E: 48 64 [weight=1, ];
E: 48 65 [weight=2, ];
E: 49 55 [weight=1, ];
E: 49 62 [weight=2, ];
E: 49 67 [weight=1, ];
E: 50 51 [weight=1, ];
E: 50 52 [weight=2, ];
E: 50 55 [weight=2, ];
E: 50 63 [weight=2, ];
E: 50 64 [weight=1, ];
E: 50 65 [weight=2, ];
E: 51 52 [weight=2, ];
E: 51 55 [weight=1, ];
E: 51 63 [weight=1, ];
E: 51 64 [weight=2, ];
E: 51 65 [weight=2, ];
E: 52 55 [weight=1, ];
E: 52 63 [weight=1, ];
E: 52 64 [weight=1, ];
E: 52 65 [weight=2, ];
E: 53 54 [weight=1, ];
E: 53 55 [weight=4, ];
E: 53 66 [weight=6, ];
E: 53 67 [weight=76, ];
E: 53 68 [weight=2, ];
E: 54 55 [weight=2, ];
E: 54 67 [weight=2, ];
E: 54 68 [weight=2, ];
E: 55 67 [weight=2, ];
E: 55 68 [weight=2, ];
E: 56 70 [weight=2, ];
E: 56 71 [weight=3, ];
E: 56 92 [weight=3, ];
E: 56 93 [weight=5, ];
E: 57 58 [weight=4, ];
E: 57 64 [weight=5, ];
E: 57 65 [weight=2, ];
E: 58 63 [weight=36, ];
E: 58 64 [weight=696, ];
E: 58 65 [weight=2, ];
E: 58 67 [weight=36, ];
E: 58 70 [weight=1, ];
E: 58 71 [weight=2, ];
E: 58 92 [weight=2, ];
E: 58 93 [weight=3, ];
E: 59 63 [weight=6, ];
E: 59 64 [weight=56, ];
E: 59 65 [weight=2, ];
E: 59 67 [weight=6, ];
E: 59 70 [weight=1, ];
E: 59 71 [weight=2, ];
E: 59 92 [weight=2, ];
E: 59 93 [weight=3, ];
E: 60 63 [weight=14, ];
E: 60 64 [weight=104, ];
E: 60 65 [weight=2, ];
E: 60 67 [weight=14, ];
E: 60 70 [weight=1, ];
E: 60 71 [weight=2, ];
E: 60 92 [weight=2, ];
E: 60 93 [weight=3, ];
E: 61 62 [weight=1, ];
E: 61 65 [weight=1, ];
E: 61 68 [weight=1, ];
E: 62 68 [weight=1, ];
E: 63 64 [weight=1, ];
E: 63 65 [weight=2, ];
E: 63 68 [weight=1, ];
E: 64 65 [weight=1, ];
E: 64 68 [weight=1, ];
E: 65 68 [weight=1, ];
E: 66 67 [weight=1, ];
E: 66 68 [weight=4, ];
E: 67 68 [weight=2, ];
E: 69 70 [weight=1, ];
E: 69 71 [weight=2, ];
E: 69 83 [weight=2, ];
E: 69 93 [weight=2, ];
E: 70 71 [weight=1, ];
E: 70 93 [weight=2, ];
E: 71 93 [weight=2, ];
E: 72 73 [weight=1, ];
E: 72 87 [weight=16, ];
E: 72 93 [weight=5, ];
E: 73 74 [weight=5, ];
E: 73 75 [weight=5, ];
E: 73 87 [weight=23, ];
E: 73 92 [weight=345, ];
E: 73 93 [weight=6, ];
E: 74 87 [weight=4, ];
E: 74 93 [weight=4, ];
E: 75 92 [weight=8, ];
E: 75 93 [weight=12, ];
E: 76 93 [weight=2, ];
E: 77 78 [weight=1, ];
E: 77 92 [weight=3, ];
E: 77 93 [weight=4, ];
E: 79 80 [weight=1, ];
E: 79 93 [weight=3, ];
E: 80 92 [weight=6, ];
E: 80 93 [weight=3, ];
E: 81 82 [weight=1, ];
E: 81 93 [weight=2, ];
E: 82 92 [weight=1, ];
E: 82 93 [weight=3, ];
E: 83 92 [weight=1, ];
E: 83 93 [weight=1, ];
E: 84 93 [weight=2, ];
E: 85 93 [weight=2, ];
E: 86 93 [weight=2, ];
E: 87 93 [weight=2, ];
E: 88 92 [weight=2, ];
E: 88 93 [weight=4, ];
E: 89 91 [weight=1, ];
E: 89 92 [weight=1, ];
E: 89 93 [weight=3, ];
E: 90 92 [weight=2, ];
E: 90 93 [weight=4, ];
E: 91 92 [weight=2, ];
E: 91 93 [weight=4, ];
