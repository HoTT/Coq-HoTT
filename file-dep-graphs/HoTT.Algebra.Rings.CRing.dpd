N: 23 "Build_CRing'" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 32 "CRing_ind" [body=yes, kind=cnst, prop=yes, path="CRing", ];
N: 31 "CRing_rec" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 33 "CRing_rect" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 30 "CRing_sind" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 3 "commutative_quotientring_mult" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 28 "cring_commutative" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 24 "cring_negate" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 26 "cring_plus" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 2 "cring_quotient" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 1 "cring_quotient_map" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 29 "cring_ring" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 25 "cring_zero" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 4 "hasequiv_CRing" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 12 "ideal_intersection_is_product" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 13 "ideal_intersection_subset_product" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 15 "ideal_product_comm" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 14 "ideal_product_intersection_sum_subset'" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 16 "ideal_product_subset_product_commutative" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 11 "ideal_quotient_product" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 9 "ideal_quotient_product_left" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 10 "ideal_quotient_subset_prod" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 7 "is01cat_CRing" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 5 "is1cat_CRing" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 6 "is2graph_CRing" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 8 "isgraph_CRing" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 17 "isinvertible_cring" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 27 "issig_CRing" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 22 "rng_mult_comm" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 19 "rng_mult_move_left_assoc" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 18 "rng_mult_move_right_assoc" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 20 "rng_mult_permute_2_3" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 21 "rng_power_mult" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 35 "CRing" [kind=inductive, prop=no, path="CRing", ];
N: 34 "Build_CRing" [kind=construct, prop=no, path="CRing", ];
E: 1 2 [weight=1, ];
E: 1 8 [weight=1, ];
E: 1 35 [weight=2, ];
E: 2 3 [weight=1, ];
E: 2 34 [weight=1, ];
E: 2 35 [weight=3, ];
E: 3 35 [weight=2, ];
E: 4 5 [weight=1, ];
E: 4 6 [weight=1, ];
E: 4 7 [weight=1, ];
E: 4 8 [weight=1, ];
E: 4 29 [weight=1, ];
E: 4 35 [weight=2, ];
E: 5 6 [weight=1, ];
E: 5 7 [weight=1, ];
E: 5 8 [weight=1, ];
E: 5 29 [weight=1, ];
E: 5 35 [weight=2, ];
E: 6 8 [weight=1, ];
E: 6 29 [weight=1, ];
E: 6 35 [weight=2, ];
E: 7 8 [weight=1, ];
E: 7 29 [weight=1, ];
E: 7 35 [weight=2, ];
E: 8 29 [weight=1, ];
E: 8 35 [weight=2, ];
E: 9 10 [weight=1, ];
E: 9 35 [weight=2, ];
E: 10 22 [weight=1, ];
E: 10 35 [weight=2, ];
E: 11 22 [weight=6, ];
E: 11 24 [weight=6, ];
E: 11 35 [weight=2, ];
E: 12 13 [weight=1, ];
E: 12 35 [weight=2, ];
E: 13 14 [weight=1, ];
E: 13 35 [weight=2, ];
E: 14 15 [weight=1, ];
E: 14 35 [weight=2, ];
E: 15 16 [weight=2, ];
E: 15 35 [weight=2, ];
E: 16 22 [weight=1, ];
E: 16 35 [weight=2, ];
E: 17 22 [weight=1, ];
E: 17 35 [weight=2, ];
E: 18 19 [weight=1, ];
E: 18 35 [weight=2, ];
E: 19 22 [weight=1, ];
E: 19 35 [weight=2, ];
E: 20 22 [weight=1, ];
E: 20 35 [weight=2, ];
E: 21 22 [weight=1, ];
E: 21 35 [weight=2, ];
E: 22 35 [weight=2, ];
E: 23 34 [weight=1, ];
E: 23 35 [weight=1, ];
E: 24 35 [weight=2, ];
E: 25 35 [weight=2, ];
E: 26 35 [weight=2, ];
E: 27 34 [weight=8, ];
E: 27 35 [weight=12, ];
E: 28 35 [weight=2, ];
E: 29 35 [weight=2, ];
E: 30 34 [weight=2, ];
E: 30 35 [weight=4, ];
E: 31 33 [weight=1, ];
E: 31 34 [weight=1, ];
E: 31 35 [weight=3, ];
E: 32 34 [weight=2, ];
E: 32 35 [weight=4, ];
E: 33 34 [weight=2, ];
E: 33 35 [weight=4, ];
