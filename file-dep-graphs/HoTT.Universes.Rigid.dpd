N: 8 "IsRigid" [body=yes, kind=cnst, prop=no, path="Rigid", ];
N: 2 "aut_homomorphism_end" [body=yes, kind=cnst, prop=no, path="Rigid", ];
N: 1 "baut_prod_rigid_equiv" [body=yes, kind=cnst, prop=no, path="Rigid", ];
N: 6 "contr_aut_rigid" [body=yes, kind=cnst, prop=no, path="Rigid", ];
N: 5 "contr_baut_rigid" [body=yes, kind=cnst, prop=no, path="Rigid", ];
N: 7 "path_aut_rigid" [body=yes, kind=cnst, prop=no, path="Rigid", ];
N: 4 "rigid_contr_Baut" [body=yes, kind=cnst, prop=no, path="Rigid", ];
N: 3 "rigid_ishprop" [body=yes, kind=cnst, prop=no, path="Rigid", ];
E: 1 2 [weight=2, ];
E: 1 7 [weight=1, ];
E: 1 8 [weight=2, ];
E: 3 8 [weight=2, ];
E: 4 8 [weight=2, ];
E: 5 6 [weight=1, ];
E: 5 8 [weight=2, ];
E: 6 7 [weight=1, ];
E: 6 8 [weight=2, ];
E: 7 8 [weight=2, ];
