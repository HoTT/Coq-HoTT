N: 93 "BinInt_ind" [body=yes, kind=cnst, prop=yes, path="Core", ];
N: 92 "BinInt_rec" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 94 "BinInt_rect" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 91 "BinInt_sind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 51 "ap_loopexp" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 52 "ap_loopexp_pos" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 70 "binint_add" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 42 "binint_add_0_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 41 "binint_add_0_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 11 "binint_add_assoc" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 12 "binint_add_assoc_pos" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 43 "binint_add_comm" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 35 "binint_add_negation_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 34 "binint_add_negation_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 8 "binint_add_pred_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 7 "binint_add_pred_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 10 "binint_add_succ_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 9 "binint_add_succ_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 76 "binint_double" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 60 "binint_iter" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 59 "binint_iter_succ_l" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 58 "binint_iter_succ_r" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 66 "binint_mul" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 40 "binint_mul_0_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 39 "binint_mul_0_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 38 "binint_mul_1_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 37 "binint_mul_1_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 2 "binint_mul_add_distr_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 3 "binint_mul_add_distr_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 1 "binint_mul_assoc" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 6 "binint_mul_comm" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 33 "binint_neg_pos_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 72 "binint_negation" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 23 "binint_negation_add_distr" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 31 "binint_negation_double" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 22 "binint_negation_inj" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 30 "binint_negation_pred_double" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 15 "binint_negation_pred_negation_red" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 29 "binint_negation_succ_double" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 78 "binint_of_decimal_binint" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 79 "binint_of_decimal_uint" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 77 "binint_of_number_binint" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 32 "binint_pos_pos_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 73 "binint_pos_sub" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 13 "binint_pos_sub_add" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 36 "binint_pos_sub_diag" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 4 "binint_pos_sub_mul_neg" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 5 "binint_pos_sub_mul_pos" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 28 "binint_pos_sub_negation" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 21 "binint_pos_sub_succ_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 20 "binint_pos_sub_succ_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 17 "binint_pos_sub_succ_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 65 "binint_pow" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 68 "binint_pred" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 14 "binint_pred_add_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 74 "binint_pred_double" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 18 "binint_pred_double_binint_pos_sub" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 16 "binint_pred_pos_sub_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 26 "binint_pred_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 63 "binint_sgn" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 64 "binint_square" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 67 "binint_sub" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 69 "binint_succ" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 75 "binint_succ_double" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 19 "binint_succ_double_binint_pos_sub" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 27 "binint_succ_pred" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 81 "binint_to_decimal_binint" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 80 "binint_to_number_binint" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 62 "decpaths_binint" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 24 "equiv_binint_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 45 "equiv_path_loopexp" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 61 "hset_binint" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 71 "ibnint_negation_negation" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 25 "isequiv_binint_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 90 "ispointed_BinInt" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 57 "iter_binint_pred_l" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 56 "iter_binint_pred_r" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 54 "loopexp" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 46 "loopexp_add" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 48 "loopexp_binint_pos_sub_l" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 47 "loopexp_binint_pos_sub_r" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 44 "loopexp_path_universe" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 55 "loopexp_pos" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 49 "loopexp_pos_add" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 50 "loopexp_pos_concat" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 53 "loopexp_pos_inv" [body=yes, kind=cnst, prop=no, path="LoopExp", ];
N: 89 "neg_inj" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 85 "neg_neq_pos" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 87 "neg_neq_zero" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 88 "pos_inj" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 82 "pos_neq_neg" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 86 "pos_neq_zero" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 84 "zero_neq_neg" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 83 "zero_neq_pos" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 98 "BinInt" [kind=inductive, prop=no, path="Core", ];
N: 97 "neg" [kind=construct, prop=no, path="Core", ];
N: 96 "zero" [kind=construct, prop=no, path="Core", ];
N: 95 "pos" [kind=construct, prop=no, path="Core", ];
E: 1 66 [weight=164, ];
E: 1 95 [weight=80, ];
E: 1 96 [weight=87, ];
E: 1 97 [weight=80, ];
E: 1 98 [weight=95, ];
E: 2 3 [weight=1, ];
E: 2 6 [weight=3, ];
E: 2 66 [weight=15, ];
E: 2 70 [weight=10, ];
E: 2 98 [weight=16, ];
E: 3 4 [weight=2, ];
E: 3 5 [weight=2, ];
E: 3 39 [weight=2, ];
E: 3 66 [weight=123, ];
E: 3 70 [weight=82, ];
E: 3 73 [weight=2, ];
E: 3 92 [weight=1, ];
E: 3 95 [weight=91, ];
E: 3 96 [weight=90, ];
E: 3 97 [weight=91, ];
E: 3 98 [weight=85, ];
E: 4 6 [weight=1, ];
E: 4 11 [weight=1, ];
E: 4 13 [weight=2, ];
E: 4 23 [weight=1, ];
E: 4 28 [weight=5, ];
E: 4 66 [weight=26, ];
E: 4 70 [weight=21, ];
E: 4 72 [weight=24, ];
E: 4 73 [weight=65, ];
E: 4 76 [weight=12, ];
E: 4 95 [weight=35, ];
E: 4 96 [weight=17, ];
E: 4 97 [weight=44, ];
E: 4 98 [weight=91, ];
E: 5 6 [weight=1, ];
E: 5 11 [weight=1, ];
E: 5 13 [weight=2, ];
E: 5 23 [weight=1, ];
E: 5 28 [weight=2, ];
E: 5 38 [weight=1, ];
E: 5 66 [weight=22, ];
E: 5 70 [weight=20, ];
E: 5 72 [weight=11, ];
E: 5 73 [weight=56, ];
E: 5 76 [weight=10, ];
E: 5 95 [weight=55, ];
E: 5 96 [weight=14, ];
E: 5 97 [weight=14, ];
E: 5 98 [weight=72, ];
E: 6 66 [weight=28, ];
E: 6 95 [weight=16, ];
E: 6 96 [weight=19, ];
E: 6 97 [weight=16, ];
E: 6 98 [weight=31, ];
E: 7 11 [weight=1, ];
E: 7 68 [weight=2, ];
E: 7 70 [weight=2, ];
E: 7 97 [weight=1, ];
E: 7 98 [weight=5, ];
E: 8 11 [weight=2, ];
E: 8 43 [weight=1, ];
E: 8 68 [weight=4, ];
E: 8 70 [weight=11, ];
E: 8 97 [weight=7, ];
E: 8 98 [weight=11, ];
E: 9 11 [weight=1, ];
E: 9 69 [weight=2, ];
E: 9 70 [weight=2, ];
E: 9 95 [weight=1, ];
E: 9 98 [weight=5, ];
E: 10 11 [weight=2, ];
E: 10 43 [weight=1, ];
E: 10 69 [weight=4, ];
E: 10 70 [weight=11, ];
E: 10 95 [weight=7, ];
E: 10 98 [weight=11, ];
E: 11 12 [weight=2, ];
E: 11 22 [weight=1, ];
E: 11 23 [weight=4, ];
E: 11 70 [weight=38, ];
E: 11 72 [weight=24, ];
E: 11 96 [weight=1, ];
E: 11 97 [weight=16, ];
E: 11 98 [weight=22, ];
E: 12 13 [weight=4, ];
E: 12 22 [weight=1, ];
E: 12 23 [weight=1, ];
E: 12 28 [weight=2, ];
E: 12 41 [weight=1, ];
E: 12 43 [weight=2, ];
E: 12 70 [weight=63, ];
E: 12 72 [weight=13, ];
E: 12 73 [weight=27, ];
E: 12 95 [weight=44, ];
E: 12 96 [weight=10, ];
E: 12 97 [weight=26, ];
E: 12 98 [weight=46, ];
E: 13 14 [weight=2, ];
E: 13 16 [weight=2, ];
E: 13 68 [weight=4, ];
E: 13 70 [weight=8, ];
E: 13 73 [weight=16, ];
E: 13 95 [weight=11, ];
E: 13 98 [weight=12, ];
E: 14 15 [weight=1, ];
E: 14 16 [weight=2, ];
E: 14 22 [weight=1, ];
E: 14 26 [weight=5, ];
E: 14 28 [weight=2, ];
E: 14 43 [weight=1, ];
E: 14 68 [weight=47, ];
E: 14 69 [weight=2, ];
E: 14 70 [weight=43, ];
E: 14 72 [weight=6, ];
E: 14 73 [weight=16, ];
E: 14 95 [weight=50, ];
E: 14 96 [weight=9, ];
E: 14 97 [weight=26, ];
E: 14 98 [weight=56, ];
E: 15 68 [weight=12, ];
E: 15 72 [weight=12, ];
E: 15 95 [weight=7, ];
E: 15 96 [weight=1, ];
E: 15 97 [weight=7, ];
E: 15 98 [weight=16, ];
E: 16 17 [weight=2, ];
E: 16 68 [weight=24, ];
E: 16 73 [weight=54, ];
E: 16 97 [weight=1, ];
E: 16 98 [weight=37, ];
E: 17 18 [weight=1, ];
E: 17 19 [weight=1, ];
E: 17 73 [weight=94, ];
E: 17 76 [weight=1, ];
E: 17 95 [weight=1, ];
E: 17 97 [weight=1, ];
E: 17 98 [weight=56, ];
E: 18 73 [weight=74, ];
E: 18 74 [weight=44, ];
E: 18 75 [weight=58, ];
E: 18 76 [weight=12, ];
E: 18 95 [weight=5, ];
E: 18 96 [weight=4, ];
E: 18 97 [weight=4, ];
E: 18 98 [weight=67, ];
E: 19 73 [weight=76, ];
E: 19 74 [weight=60, ];
E: 19 75 [weight=45, ];
E: 19 76 [weight=13, ];
E: 19 95 [weight=4, ];
E: 19 96 [weight=4, ];
E: 19 97 [weight=5, ];
E: 19 98 [weight=68, ];
E: 20 73 [weight=3, ];
E: 20 97 [weight=6, ];
E: 20 98 [weight=6, ];
E: 21 73 [weight=3, ];
E: 21 95 [weight=6, ];
E: 21 98 [weight=6, ];
E: 22 72 [weight=28, ];
E: 22 82 [weight=1, ];
E: 22 83 [weight=1, ];
E: 22 84 [weight=1, ];
E: 22 85 [weight=1, ];
E: 22 86 [weight=1, ];
E: 22 87 [weight=1, ];
E: 22 88 [weight=1, ];
E: 22 89 [weight=1, ];
E: 22 95 [weight=27, ];
E: 22 96 [weight=26, ];
E: 22 97 [weight=27, ];
E: 22 98 [weight=58, ];
E: 23 28 [weight=2, ];
E: 23 70 [weight=28, ];
E: 23 72 [weight=42, ];
E: 23 95 [weight=17, ];
E: 23 96 [weight=15, ];
E: 23 97 [weight=17, ];
E: 23 98 [weight=29, ];
E: 24 25 [weight=1, ];
E: 24 69 [weight=1, ];
E: 24 98 [weight=4, ];
E: 25 26 [weight=1, ];
E: 25 27 [weight=1, ];
E: 25 68 [weight=1, ];
E: 25 69 [weight=2, ];
E: 25 98 [weight=4, ];
E: 26 68 [weight=7, ];
E: 26 69 [weight=7, ];
E: 26 95 [weight=7, ];
E: 26 96 [weight=1, ];
E: 26 97 [weight=7, ];
E: 26 98 [weight=32, ];
E: 27 68 [weight=7, ];
E: 27 69 [weight=7, ];
E: 27 95 [weight=7, ];
E: 27 96 [weight=1, ];
E: 27 97 [weight=7, ];
E: 27 98 [weight=32, ];
E: 28 29 [weight=1, ];
E: 28 30 [weight=1, ];
E: 28 31 [weight=2, ];
E: 28 72 [weight=28, ];
E: 28 73 [weight=56, ];
E: 28 74 [weight=4, ];
E: 28 75 [weight=4, ];
E: 28 76 [weight=8, ];
E: 28 95 [weight=2, ];
E: 28 96 [weight=1, ];
E: 28 97 [weight=2, ];
E: 28 98 [weight=41, ];
E: 29 72 [weight=7, ];
E: 29 74 [weight=5, ];
E: 29 75 [weight=2, ];
E: 29 95 [weight=1, ];
E: 29 96 [weight=1, ];
E: 29 97 [weight=1, ];
E: 29 98 [weight=8, ];
E: 30 72 [weight=7, ];
E: 30 74 [weight=2, ];
E: 30 75 [weight=5, ];
E: 30 95 [weight=1, ];
E: 30 96 [weight=1, ];
E: 30 97 [weight=1, ];
E: 30 98 [weight=8, ];
E: 31 72 [weight=7, ];
E: 31 76 [weight=7, ];
E: 31 95 [weight=1, ];
E: 31 96 [weight=1, ];
E: 31 97 [weight=1, ];
E: 31 98 [weight=8, ];
E: 32 69 [weight=5, ];
E: 32 95 [weight=7, ];
E: 32 98 [weight=5, ];
E: 33 68 [weight=5, ];
E: 33 97 [weight=7, ];
E: 33 98 [weight=5, ];
E: 34 36 [weight=2, ];
E: 34 70 [weight=4, ];
E: 34 72 [weight=4, ];
E: 34 95 [weight=2, ];
E: 34 96 [weight=5, ];
E: 34 97 [weight=2, ];
E: 34 98 [weight=8, ];
E: 35 36 [weight=2, ];
E: 35 70 [weight=4, ];
E: 35 72 [weight=4, ];
E: 35 95 [weight=2, ];
E: 35 96 [weight=5, ];
E: 35 97 [weight=2, ];
E: 35 98 [weight=8, ];
E: 36 73 [weight=8, ];
E: 36 76 [weight=2, ];
E: 36 96 [weight=9, ];
E: 36 98 [weight=11, ];
E: 37 66 [weight=4, ];
E: 37 95 [weight=7, ];
E: 37 96 [weight=1, ];
E: 37 97 [weight=3, ];
E: 37 98 [weight=10, ];
E: 38 66 [weight=2, ];
E: 38 95 [weight=3, ];
E: 38 96 [weight=1, ];
E: 38 97 [weight=1, ];
E: 38 98 [weight=8, ];
E: 39 66 [weight=2, ];
E: 39 96 [weight=7, ];
E: 39 98 [weight=8, ];
E: 40 66 [weight=2, ];
E: 40 96 [weight=3, ];
E: 40 98 [weight=4, ];
E: 41 70 [weight=2, ];
E: 41 95 [weight=1, ];
E: 41 96 [weight=3, ];
E: 41 97 [weight=1, ];
E: 41 98 [weight=8, ];
E: 42 70 [weight=2, ];
E: 42 96 [weight=2, ];
E: 42 98 [weight=4, ];
E: 43 70 [weight=21, ];
E: 43 95 [weight=11, ];
E: 43 96 [weight=8, ];
E: 43 97 [weight=11, ];
E: 43 98 [weight=24, ];
E: 44 45 [weight=1, ];
E: 44 54 [weight=6, ];
E: 44 60 [weight=4, ];
E: 44 98 [weight=2, ];
E: 45 54 [weight=8, ];
E: 45 55 [weight=2, ];
E: 45 60 [weight=11, ];
E: 45 95 [weight=7, ];
E: 45 96 [weight=1, ];
E: 45 97 [weight=7, ];
E: 45 98 [weight=3, ];
E: 46 47 [weight=1, ];
E: 46 48 [weight=1, ];
E: 46 49 [weight=2, ];
E: 46 54 [weight=35, ];
E: 46 55 [weight=12, ];
E: 46 70 [weight=11, ];
E: 46 95 [weight=10, ];
E: 46 96 [weight=12, ];
E: 46 97 [weight=10, ];
E: 46 98 [weight=8, ];
E: 47 17 [weight=1, ];
E: 47 20 [weight=1, ];
E: 47 21 [weight=1, ];
E: 47 50 [weight=2, ];
E: 47 54 [weight=28, ];
E: 47 55 [weight=69, ];
E: 47 73 [weight=21, ];
E: 47 95 [weight=2, ];
E: 47 97 [weight=8, ];
E: 47 98 [weight=6, ];
E: 48 17 [weight=1, ];
E: 48 20 [weight=1, ];
E: 48 21 [weight=1, ];
E: 48 50 [weight=2, ];
E: 48 54 [weight=27, ];
E: 48 55 [weight=59, ];
E: 48 73 [weight=21, ];
E: 48 95 [weight=2, ];
E: 48 97 [weight=7, ];
E: 48 98 [weight=6, ];
E: 49 50 [weight=2, ];
E: 49 55 [weight=90, ];
E: 50 55 [weight=17, ];
E: 51 52 [weight=2, ];
E: 51 53 [weight=2, ];
E: 51 54 [weight=7, ];
E: 51 55 [weight=12, ];
E: 51 96 [weight=1, ];
E: 51 97 [weight=2, ];
E: 51 98 [weight=3, ];
E: 52 55 [weight=14, ];
E: 53 55 [weight=14, ];
E: 54 55 [weight=2, ];
E: 54 98 [weight=3, ];
E: 56 26 [weight=1, ];
E: 56 33 [weight=2, ];
E: 56 58 [weight=1, ];
E: 56 60 [weight=37, ];
E: 56 68 [weight=15, ];
E: 56 69 [weight=3, ];
E: 56 95 [weight=22, ];
E: 56 96 [weight=1, ];
E: 56 97 [weight=14, ];
E: 56 98 [weight=10, ];
E: 57 26 [weight=1, ];
E: 57 59 [weight=1, ];
E: 57 60 [weight=27, ];
E: 57 68 [weight=10, ];
E: 57 69 [weight=2, ];
E: 57 95 [weight=23, ];
E: 57 96 [weight=1, ];
E: 57 97 [weight=2, ];
E: 57 98 [weight=5, ];
E: 58 25 [weight=1, ];
E: 58 33 [weight=1, ];
E: 58 60 [weight=28, ];
E: 58 68 [weight=5, ];
E: 58 69 [weight=13, ];
E: 58 95 [weight=2, ];
E: 58 96 [weight=1, ];
E: 58 97 [weight=23, ];
E: 58 98 [weight=7, ];
E: 59 25 [weight=1, ];
E: 59 33 [weight=1, ];
E: 59 60 [weight=28, ];
E: 59 68 [weight=1, ];
E: 59 69 [weight=13, ];
E: 59 95 [weight=2, ];
E: 59 96 [weight=1, ];
E: 59 97 [weight=26, ];
E: 59 98 [weight=8, ];
E: 60 98 [weight=3, ];
E: 61 62 [weight=1, ];
E: 61 98 [weight=3, ];
E: 62 82 [weight=1, ];
E: 62 83 [weight=1, ];
E: 62 84 [weight=1, ];
E: 62 85 [weight=1, ];
E: 62 86 [weight=1, ];
E: 62 87 [weight=1, ];
E: 62 88 [weight=1, ];
E: 62 89 [weight=1, ];
E: 62 95 [weight=24, ];
E: 62 96 [weight=14, ];
E: 62 97 [weight=24, ];
E: 62 98 [weight=46, ];
E: 63 95 [weight=1, ];
E: 63 96 [weight=1, ];
E: 63 97 [weight=1, ];
E: 63 98 [weight=5, ];
E: 64 95 [weight=2, ];
E: 64 96 [weight=1, ];
E: 64 98 [weight=5, ];
E: 65 66 [weight=1, ];
E: 65 95 [weight=2, ];
E: 65 96 [weight=1, ];
E: 65 98 [weight=8, ];
E: 66 95 [weight=2, ];
E: 66 96 [weight=3, ];
E: 66 97 [weight=2, ];
E: 66 98 [weight=11, ];
E: 67 70 [weight=1, ];
E: 67 72 [weight=1, ];
E: 67 98 [weight=5, ];
E: 68 70 [weight=1, ];
E: 68 97 [weight=1, ];
E: 68 98 [weight=3, ];
E: 69 70 [weight=1, ];
E: 69 95 [weight=1, ];
E: 69 98 [weight=3, ];
E: 70 73 [weight=2, ];
E: 70 95 [weight=1, ];
E: 70 97 [weight=1, ];
E: 70 98 [weight=11, ];
E: 71 72 [weight=4, ];
E: 71 95 [weight=1, ];
E: 71 96 [weight=1, ];
E: 71 97 [weight=1, ];
E: 71 98 [weight=8, ];
E: 72 95 [weight=1, ];
E: 72 96 [weight=1, ];
E: 72 97 [weight=1, ];
E: 72 98 [weight=5, ];
E: 73 74 [weight=1, ];
E: 73 75 [weight=1, ];
E: 73 76 [weight=2, ];
E: 73 95 [weight=2, ];
E: 73 96 [weight=1, ];
E: 73 97 [weight=2, ];
E: 73 98 [weight=6, ];
E: 74 95 [weight=1, ];
E: 74 97 [weight=2, ];
E: 74 98 [weight=5, ];
E: 75 95 [weight=2, ];
E: 75 97 [weight=1, ];
E: 75 98 [weight=5, ];
E: 76 95 [weight=1, ];
E: 76 96 [weight=1, ];
E: 76 97 [weight=1, ];
E: 76 98 [weight=5, ];
E: 77 78 [weight=1, ];
E: 77 98 [weight=4, ];
E: 78 79 [weight=2, ];
E: 78 96 [weight=2, ];
E: 78 97 [weight=1, ];
E: 78 98 [weight=5, ];
E: 79 95 [weight=9, ];
E: 79 96 [weight=1, ];
E: 79 98 [weight=3, ];
E: 80 81 [weight=1, ];
E: 80 98 [weight=2, ];
E: 81 98 [weight=3, ];
E: 82 85 [weight=1, ];
E: 82 95 [weight=6, ];
E: 82 97 [weight=6, ];
E: 82 98 [weight=8, ];
E: 83 86 [weight=1, ];
E: 83 95 [weight=6, ];
E: 83 96 [weight=6, ];
E: 83 98 [weight=8, ];
E: 84 87 [weight=1, ];
E: 84 96 [weight=6, ];
E: 84 97 [weight=6, ];
E: 84 98 [weight=8, ];
E: 85 95 [weight=3, ];
E: 85 97 [weight=3, ];
E: 85 98 [weight=5, ];
E: 86 95 [weight=3, ];
E: 86 96 [weight=3, ];
E: 86 98 [weight=5, ];
E: 87 96 [weight=3, ];
E: 87 97 [weight=3, ];
E: 87 98 [weight=5, ];
E: 88 95 [weight=6, ];
E: 88 98 [weight=5, ];
E: 89 97 [weight=6, ];
E: 89 98 [weight=5, ];
E: 90 96 [weight=1, ];
E: 90 98 [weight=1, ];
E: 91 95 [weight=2, ];
E: 91 96 [weight=2, ];
E: 91 97 [weight=2, ];
E: 91 98 [weight=5, ];
E: 92 94 [weight=1, ];
E: 92 95 [weight=1, ];
E: 92 96 [weight=1, ];
E: 92 97 [weight=1, ];
E: 92 98 [weight=3, ];
E: 93 95 [weight=2, ];
E: 93 96 [weight=2, ];
E: 93 97 [weight=2, ];
E: 93 98 [weight=5, ];
E: 94 95 [weight=2, ];
E: 94 96 [weight=2, ];
E: 94 97 [weight=2, ];
E: 94 98 [weight=5, ];
