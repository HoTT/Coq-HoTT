N: 27 "IsLimit_ind" [body=yes, kind=cnst, prop=yes, path="Limit", ];
N: 26 "IsLimit_rec" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 28 "IsLimit_rect" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 25 "IsLimit_sind" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 18 "Limit_ind" [body=yes, kind=cnst, prop=yes, path="Limit", ];
N: 17 "Limit_rec" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 19 "Limit_rect" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 16 "Limit_sind" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 13 "cone_limit" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 22 "cone_precompose_inv" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 3 "equiv_functor_limit" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 8 "functor_limit" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 7 "functor_limit_commute" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 5 "functor_limit_eisretr" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 6 "functor_limit_eissect" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 4 "isequiv_functor_limit" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 24 "islimit_cone" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 11 "islimit_limit" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 9 "islimit_postcompose_equiv" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 10 "islimit_precompose_equiv" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 23 "islimit_unicone" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 15 "lim" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 1 "limit_adjoint" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 2 "limit_unicity" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 14 "limp" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 12 "unicone_limit" [body=yes, kind=cnst, prop=no, path="Limit", ];
N: 30 "IsLimit" [kind=inductive, prop=no, path="Limit", ];
N: 21 "Limit" [kind=inductive, prop=no, path="Limit", ];
N: 29 "Build_IsLimit" [kind=construct, prop=no, path="Limit", ];
N: 20 "Build_Limit" [kind=construct, prop=no, path="Limit", ];
E: 1 14 [weight=4, ];
E: 1 15 [weight=4, ];
E: 1 20 [weight=4, ];
E: 1 21 [weight=16, ];
E: 2 3 [weight=1, ];
E: 2 30 [weight=4, ];
E: 3 4 [weight=1, ];
E: 3 8 [weight=1, ];
E: 3 30 [weight=4, ];
E: 4 5 [weight=1, ];
E: 4 6 [weight=1, ];
E: 4 8 [weight=3, ];
E: 4 30 [weight=4, ];
E: 5 8 [weight=18, ];
E: 5 30 [weight=4, ];
E: 6 8 [weight=18, ];
E: 6 30 [weight=4, ];
E: 7 8 [weight=1, ];
E: 7 30 [weight=4, ];
E: 8 22 [weight=1, ];
E: 8 30 [weight=4, ];
E: 9 29 [weight=1, ];
E: 9 30 [weight=3, ];
E: 10 29 [weight=1, ];
E: 10 30 [weight=3, ];
E: 11 12 [weight=1, ];
E: 11 13 [weight=1, ];
E: 11 21 [weight=2, ];
E: 11 29 [weight=1, ];
E: 11 30 [weight=1, ];
E: 12 13 [weight=7, ];
E: 12 20 [weight=4, ];
E: 12 21 [weight=19, ];
E: 13 14 [weight=1, ];
E: 13 21 [weight=10, ];
E: 14 21 [weight=2, ];
E: 15 21 [weight=2, ];
E: 16 20 [weight=2, ];
E: 16 21 [weight=4, ];
E: 17 19 [weight=1, ];
E: 17 20 [weight=1, ];
E: 17 21 [weight=3, ];
E: 18 20 [weight=2, ];
E: 18 21 [weight=4, ];
E: 19 20 [weight=2, ];
E: 19 21 [weight=4, ];
E: 22 30 [weight=2, ];
E: 23 30 [weight=2, ];
E: 24 30 [weight=2, ];
E: 25 29 [weight=2, ];
E: 25 30 [weight=4, ];
E: 26 28 [weight=1, ];
E: 26 29 [weight=1, ];
E: 26 30 [weight=3, ];
E: 27 29 [weight=2, ];
E: 27 30 [weight=4, ];
E: 28 29 [weight=2, ];
E: 28 30 [weight=4, ];
