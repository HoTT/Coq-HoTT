N: 97 "Associator" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 85 "Braiding" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 94 "Build_Associator" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 74 "HexagonIdentity" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 11 "IsMonoidalFunctor_ind" [body=yes, kind=cnst, prop=yes, path="Monoidal", ];
N: 10 "IsMonoidalFunctor_rec" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 12 "IsMonoidalFunctor_rect" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 9 "IsMonoidalFunctor_sind" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 69 "IsMonoidal_ind" [body=yes, kind=cnst, prop=yes, path="Monoidal", ];
N: 68 "IsMonoidal_rec" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 70 "IsMonoidal_rect" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 67 "IsMonoidal_sind" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 56 "IsSymmetricMonoidal_ind" [body=yes, kind=cnst, prop=yes, path="Monoidal", ];
N: 55 "IsSymmetricMonoidal_rec" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 57 "IsSymmetricMonoidal_rect" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 54 "IsSymmetricMonoidal_sind" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 93 "LeftUnitor" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 87 "PentagonIdentity" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 91 "RightUnitor" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 79 "SymmetricBraiding_ind" [body=yes, kind=cnst, prop=yes, path="Monoidal", ];
N: 78 "SymmetricBraiding_rec" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 80 "SymmetricBraiding_rect" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 77 "SymmetricBraiding_sind" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 89 "TriangleIdentity" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 95 "associator" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 50 "associator_nat" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 49 "associator_nat_l" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 48 "associator_nat_m" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 47 "associator_nat_r" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 46 "associator_op" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 45 "associator_op'" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 96 "associator_uncurried" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 83 "braid" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 75 "braid_braid" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 26 "braid_nat" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 25 "braid_nat_l" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 24 "braid_nat_r" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 84 "braid_uncurried" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 39 "braide" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 42 "braiding_op" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 41 "braiding_op'" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 76 "braiding_symmetricbraiding" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 52 "cat_symm_tensor_braiding" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 51 "cat_symm_tensor_hexagon" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 64 "cat_tensor_associator" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 63 "cat_tensor_left_unitor" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 60 "cat_tensor_pentagon_identity" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 62 "cat_tensor_right_unitor" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 61 "cat_tensor_triangle_identity" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 40 "catie_braid" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 8 "fmap_tensor" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 6 "fmap_tensor_assoc" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 5 "fmap_tensor_left_unitor" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 3 "fmap_tensor_nat" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 2 "fmap_tensor_nat_l" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 1 "fmap_tensor_nat_r" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 4 "fmap_tensor_right_unitor" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 7 "fmap_unit" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 73 "hexagon_identity" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 66 "is0bifunctor_cat_tensor" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 65 "is1bifunctor_cat_tensor" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 21 "ismonoidal_op" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 20 "ismonoidal_op'" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 53 "issymmetricmonoidal_ismonoidal" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 19 "issymmetricmonoidal_op" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 18 "issymmetricmonoidal_op'" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 92 "left_unitor" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 17 "left_unitor_associator" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 44 "left_unitor_op" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 15 "left_unitor_unit_right_unitor_unit" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 38 "moveL_braidL" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 37 "moveL_braidR" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 34 "moveL_fmap01_braidL" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 33 "moveL_fmap01_braidR" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 30 "moveL_fmap01_fmap01_braidL" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 29 "moveL_fmap01_fmap01_braidR" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 36 "moveR_braidL" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 35 "moveR_braidR" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 32 "moveR_fmap01_braidL" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 31 "moveR_fmap01_braidR" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 28 "moveR_fmap01_fmap01_braidL" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 27 "moveR_fmap01_fmap01_braidR" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 86 "pentagon_identity" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 90 "right_unitor" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 16 "right_unitor_associator" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 43 "right_unitor_op" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 23 "symmetricbraiding_op" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 22 "symmetricbraiding_op'" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 88 "triangle_identity" [body=yes, kind=cnst, prop=no, path="Monoidal", ];
N: 72 "IsMonoidal" [kind=inductive, prop=no, path="Monoidal", ];
N: 14 "IsMonoidalFunctor" [kind=inductive, prop=no, path="Monoidal", ];
N: 59 "IsSymmetricMonoidal" [kind=inductive, prop=no, path="Monoidal", ];
N: 82 "SymmetricBraiding" [kind=inductive, prop=no, path="Monoidal", ];
N: 71 "Build_IsMonoidal" [kind=construct, prop=no, path="Monoidal", ];
N: 13 "Build_IsMonoidalFunctor" [kind=construct, prop=no, path="Monoidal", ];
N: 58 "Build_IsSymmetricMonoidal" [kind=construct, prop=no, path="Monoidal", ];
N: 81 "Build_SymmetricBraiding" [kind=construct, prop=no, path="Monoidal", ];
E: 1 3 [weight=1, ];
E: 1 14 [weight=2, ];
E: 1 72 [weight=4, ];
E: 2 3 [weight=1, ];
E: 2 14 [weight=2, ];
E: 2 72 [weight=4, ];
E: 3 14 [weight=2, ];
E: 3 72 [weight=4, ];
E: 4 14 [weight=2, ];
E: 4 72 [weight=4, ];
E: 4 90 [weight=2, ];
E: 5 14 [weight=2, ];
E: 5 72 [weight=4, ];
E: 5 92 [weight=2, ];
E: 6 14 [weight=2, ];
E: 6 72 [weight=4, ];
E: 6 95 [weight=2, ];
E: 7 14 [weight=2, ];
E: 7 72 [weight=4, ];
E: 8 14 [weight=2, ];
E: 8 72 [weight=4, ];
E: 9 13 [weight=2, ];
E: 9 14 [weight=4, ];
E: 9 72 [weight=4, ];
E: 9 90 [weight=4, ];
E: 9 92 [weight=4, ];
E: 9 95 [weight=4, ];
E: 10 12 [weight=1, ];
E: 10 13 [weight=1, ];
E: 10 14 [weight=3, ];
E: 10 72 [weight=4, ];
E: 10 90 [weight=2, ];
E: 10 92 [weight=2, ];
E: 10 95 [weight=2, ];
E: 11 13 [weight=2, ];
E: 11 14 [weight=4, ];
E: 11 72 [weight=4, ];
E: 11 90 [weight=4, ];
E: 11 92 [weight=4, ];
E: 11 95 [weight=4, ];
E: 12 13 [weight=2, ];
E: 12 14 [weight=4, ];
E: 12 72 [weight=4, ];
E: 12 90 [weight=4, ];
E: 12 92 [weight=4, ];
E: 12 95 [weight=4, ];
E: 13 72 [weight=2, ];
E: 13 90 [weight=2, ];
E: 13 92 [weight=2, ];
E: 13 95 [weight=2, ];
E: 14 72 [weight=2, ];
E: 14 90 [weight=2, ];
E: 14 92 [weight=2, ];
E: 14 95 [weight=2, ];
E: 15 17 [weight=1, ];
E: 15 72 [weight=2, ];
E: 15 88 [weight=1, ];
E: 15 90 [weight=31, ];
E: 15 92 [weight=48, ];
E: 15 95 [weight=16, ];
E: 16 47 [weight=1, ];
E: 16 48 [weight=1, ];
E: 16 72 [weight=2, ];
E: 16 86 [weight=1, ];
E: 16 88 [weight=2, ];
E: 16 90 [weight=63, ];
E: 16 92 [weight=36, ];
E: 16 95 [weight=164, ];
E: 17 48 [weight=1, ];
E: 17 49 [weight=1, ];
E: 17 72 [weight=2, ];
E: 17 86 [weight=1, ];
E: 17 88 [weight=2, ];
E: 17 90 [weight=29, ];
E: 17 92 [weight=72, ];
E: 17 95 [weight=120, ];
E: 18 19 [weight=1, ];
E: 18 59 [weight=3, ];
E: 19 21 [weight=21, ];
E: 19 23 [weight=5, ];
E: 19 39 [weight=254, ];
E: 19 40 [weight=4, ];
E: 19 42 [weight=24, ];
E: 19 46 [weight=33, ];
E: 19 58 [weight=1, ];
E: 19 59 [weight=3, ];
E: 19 74 [weight=1, ];
E: 19 83 [weight=50, ];
E: 19 95 [weight=52, ];
E: 20 21 [weight=1, ];
E: 20 72 [weight=3, ];
E: 21 43 [weight=3, ];
E: 21 44 [weight=3, ];
E: 21 46 [weight=25, ];
E: 21 71 [weight=1, ];
E: 21 72 [weight=3, ];
E: 21 87 [weight=1, ];
E: 21 89 [weight=1, ];
E: 21 90 [weight=49, ];
E: 21 92 [weight=35, ];
E: 21 95 [weight=22, ];
E: 22 23 [weight=1, ];
E: 22 82 [weight=3, ];
E: 23 42 [weight=1, ];
E: 23 81 [weight=1, ];
E: 23 82 [weight=3, ];
E: 24 82 [weight=2, ];
E: 24 83 [weight=10, ];
E: 24 84 [weight=1, ];
E: 25 82 [weight=2, ];
E: 25 83 [weight=10, ];
E: 25 84 [weight=1, ];
E: 26 82 [weight=2, ];
E: 26 83 [weight=2, ];
E: 26 84 [weight=1, ];
E: 27 29 [weight=1, ];
E: 27 82 [weight=2, ];
E: 27 83 [weight=5, ];
E: 28 30 [weight=1, ];
E: 28 82 [weight=2, ];
E: 28 83 [weight=5, ];
E: 29 39 [weight=56, ];
E: 29 40 [weight=2, ];
E: 29 82 [weight=2, ];
E: 29 83 [weight=45, ];
E: 30 39 [weight=52, ];
E: 30 40 [weight=2, ];
E: 30 82 [weight=2, ];
E: 30 83 [weight=39, ];
E: 31 33 [weight=1, ];
E: 31 82 [weight=2, ];
E: 31 83 [weight=5, ];
E: 32 34 [weight=1, ];
E: 32 82 [weight=2, ];
E: 32 83 [weight=5, ];
E: 33 39 [weight=36, ];
E: 33 40 [weight=2, ];
E: 33 82 [weight=2, ];
E: 33 83 [weight=33, ];
E: 34 39 [weight=32, ];
E: 34 40 [weight=2, ];
E: 34 82 [weight=2, ];
E: 34 83 [weight=29, ];
E: 35 37 [weight=1, ];
E: 35 82 [weight=2, ];
E: 35 83 [weight=5, ];
E: 36 38 [weight=1, ];
E: 36 82 [weight=2, ];
E: 36 83 [weight=5, ];
E: 37 39 [weight=11, ];
E: 37 40 [weight=7, ];
E: 37 82 [weight=2, ];
E: 37 83 [weight=26, ];
E: 38 39 [weight=8, ];
E: 38 40 [weight=8, ];
E: 38 82 [weight=2, ];
E: 38 83 [weight=26, ];
E: 39 40 [weight=1, ];
E: 39 82 [weight=2, ];
E: 39 83 [weight=1, ];
E: 40 82 [weight=2, ];
E: 40 83 [weight=3, ];
E: 41 42 [weight=1, ];
E: 41 85 [weight=3, ];
E: 42 85 [weight=3, ];
E: 43 90 [weight=1, ];
E: 43 91 [weight=3, ];
E: 44 92 [weight=1, ];
E: 44 93 [weight=3, ];
E: 45 46 [weight=1, ];
E: 45 97 [weight=3, ];
E: 46 97 [weight=3, ];
E: 47 50 [weight=1, ];
E: 47 95 [weight=10, ];
E: 47 97 [weight=2, ];
E: 48 50 [weight=1, ];
E: 48 95 [weight=10, ];
E: 48 97 [weight=2, ];
E: 49 50 [weight=1, ];
E: 49 95 [weight=10, ];
E: 49 97 [weight=2, ];
E: 50 95 [weight=2, ];
E: 50 97 [weight=3, ];
E: 51 59 [weight=2, ];
E: 51 74 [weight=1, ];
E: 52 59 [weight=2, ];
E: 52 82 [weight=1, ];
E: 53 59 [weight=2, ];
E: 53 72 [weight=1, ];
E: 54 58 [weight=2, ];
E: 54 59 [weight=4, ];
E: 54 72 [weight=2, ];
E: 54 74 [weight=2, ];
E: 54 82 [weight=2, ];
E: 55 57 [weight=1, ];
E: 55 58 [weight=1, ];
E: 55 59 [weight=3, ];
E: 55 72 [weight=1, ];
E: 55 74 [weight=1, ];
E: 55 82 [weight=1, ];
E: 56 58 [weight=2, ];
E: 56 59 [weight=4, ];
E: 56 72 [weight=2, ];
E: 56 74 [weight=2, ];
E: 56 82 [weight=2, ];
E: 57 58 [weight=2, ];
E: 57 59 [weight=4, ];
E: 57 72 [weight=2, ];
E: 57 74 [weight=2, ];
E: 57 82 [weight=2, ];
E: 58 72 [weight=1, ];
E: 58 74 [weight=1, ];
E: 58 82 [weight=1, ];
E: 59 72 [weight=1, ];
E: 59 74 [weight=1, ];
E: 59 82 [weight=1, ];
E: 60 72 [weight=2, ];
E: 60 87 [weight=1, ];
E: 61 72 [weight=2, ];
E: 61 89 [weight=1, ];
E: 62 72 [weight=2, ];
E: 62 91 [weight=1, ];
E: 63 72 [weight=2, ];
E: 63 93 [weight=1, ];
E: 64 72 [weight=2, ];
E: 64 97 [weight=1, ];
E: 65 72 [weight=2, ];
E: 66 72 [weight=2, ];
E: 67 71 [weight=2, ];
E: 67 72 [weight=4, ];
E: 67 87 [weight=2, ];
E: 67 89 [weight=2, ];
E: 67 91 [weight=2, ];
E: 67 93 [weight=2, ];
E: 67 97 [weight=2, ];
E: 68 70 [weight=1, ];
E: 68 71 [weight=1, ];
E: 68 72 [weight=3, ];
E: 68 87 [weight=1, ];
E: 68 89 [weight=1, ];
E: 68 91 [weight=1, ];
E: 68 93 [weight=1, ];
E: 68 97 [weight=1, ];
E: 69 71 [weight=2, ];
E: 69 72 [weight=4, ];
E: 69 87 [weight=2, ];
E: 69 89 [weight=2, ];
E: 69 91 [weight=2, ];
E: 69 93 [weight=2, ];
E: 69 97 [weight=2, ];
E: 70 71 [weight=2, ];
E: 70 72 [weight=4, ];
E: 70 87 [weight=2, ];
E: 70 89 [weight=2, ];
E: 70 91 [weight=2, ];
E: 70 93 [weight=2, ];
E: 70 97 [weight=2, ];
E: 71 87 [weight=1, ];
E: 71 89 [weight=1, ];
E: 71 91 [weight=1, ];
E: 71 93 [weight=1, ];
E: 71 97 [weight=1, ];
E: 72 87 [weight=1, ];
E: 72 89 [weight=1, ];
E: 72 91 [weight=1, ];
E: 72 93 [weight=1, ];
E: 72 97 [weight=1, ];
E: 73 74 [weight=2, ];
E: 73 83 [weight=3, ];
E: 73 85 [weight=2, ];
E: 73 95 [weight=3, ];
E: 73 97 [weight=2, ];
E: 74 83 [weight=3, ];
E: 74 85 [weight=2, ];
E: 74 95 [weight=3, ];
E: 74 97 [weight=2, ];
E: 75 82 [weight=2, ];
E: 75 83 [weight=2, ];
E: 76 82 [weight=2, ];
E: 76 85 [weight=1, ];
E: 77 81 [weight=2, ];
E: 77 82 [weight=4, ];
E: 77 83 [weight=4, ];
E: 77 85 [weight=2, ];
E: 78 80 [weight=1, ];
E: 78 81 [weight=1, ];
E: 78 82 [weight=3, ];
E: 78 83 [weight=2, ];
E: 78 85 [weight=1, ];
E: 79 81 [weight=2, ];
E: 79 82 [weight=4, ];
E: 79 83 [weight=4, ];
E: 79 85 [weight=2, ];
E: 80 81 [weight=2, ];
E: 80 82 [weight=4, ];
E: 80 83 [weight=4, ];
E: 80 85 [weight=2, ];
E: 81 83 [weight=2, ];
E: 81 85 [weight=1, ];
E: 82 83 [weight=2, ];
E: 82 85 [weight=1, ];
E: 83 84 [weight=1, ];
E: 83 85 [weight=2, ];
E: 84 85 [weight=2, ];
E: 86 87 [weight=2, ];
E: 86 95 [weight=5, ];
E: 86 97 [weight=2, ];
E: 87 95 [weight=5, ];
E: 87 97 [weight=2, ];
E: 88 89 [weight=2, ];
E: 88 90 [weight=1, ];
E: 88 91 [weight=2, ];
E: 88 92 [weight=1, ];
E: 88 93 [weight=2, ];
E: 88 95 [weight=1, ];
E: 88 97 [weight=2, ];
E: 89 90 [weight=1, ];
E: 89 91 [weight=2, ];
E: 89 92 [weight=1, ];
E: 89 93 [weight=2, ];
E: 89 95 [weight=1, ];
E: 89 97 [weight=2, ];
E: 90 91 [weight=2, ];
E: 92 93 [weight=2, ];
E: 94 97 [weight=1, ];
E: 95 96 [weight=1, ];
E: 95 97 [weight=2, ];
E: 96 97 [weight=2, ];
