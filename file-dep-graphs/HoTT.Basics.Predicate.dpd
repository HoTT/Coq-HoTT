N: 16 "pred_and" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 6 "pred_and_comm" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 7 "pred_and_comm'" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 8 "pred_and_is_meet" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 10 "pred_and_subset_l" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 9 "pred_and_subset_r" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 2 "pred_and_unit_l" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 1 "pred_and_unit_r" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 13 "pred_empty" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 12 "pred_empty_subset" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 25 "pred_eq" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 15 "pred_or" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 3 "pred_or_comm" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 4 "pred_or_comm'" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 5 "pred_or_is_join" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 24 "pred_subset" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 21 "pred_subset_antisymm" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 18 "pred_subset_moveL_equiv" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 17 "pred_subset_moveR_equiv" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 19 "pred_subset_postcomp" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 20 "pred_subset_precomp" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 23 "pred_subset_pred_eq" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 22 "pred_subset_pred_eq'" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 14 "pred_unit" [body=yes, kind=cnst, prop=no, path="Predicate", ];
N: 11 "pred_unit_subset" [body=yes, kind=cnst, prop=no, path="Predicate", ];
E: 1 8 [weight=1, ];
E: 1 10 [weight=1, ];
E: 1 11 [weight=1, ];
E: 1 14 [weight=4, ];
E: 1 16 [weight=2, ];
E: 1 21 [weight=1, ];
E: 1 25 [weight=1, ];
E: 2 8 [weight=1, ];
E: 2 9 [weight=1, ];
E: 2 11 [weight=1, ];
E: 2 14 [weight=4, ];
E: 2 16 [weight=2, ];
E: 2 21 [weight=1, ];
E: 2 25 [weight=1, ];
E: 3 4 [weight=2, ];
E: 3 15 [weight=4, ];
E: 3 21 [weight=1, ];
E: 3 25 [weight=1, ];
E: 4 15 [weight=4, ];
E: 4 24 [weight=1, ];
E: 5 15 [weight=2, ];
E: 5 24 [weight=5, ];
E: 6 7 [weight=2, ];
E: 6 16 [weight=4, ];
E: 6 21 [weight=1, ];
E: 6 25 [weight=1, ];
E: 7 16 [weight=3, ];
E: 7 24 [weight=1, ];
E: 8 16 [weight=1, ];
E: 8 24 [weight=5, ];
E: 9 16 [weight=1, ];
E: 9 24 [weight=1, ];
E: 10 16 [weight=1, ];
E: 10 24 [weight=1, ];
E: 11 14 [weight=1, ];
E: 11 24 [weight=1, ];
E: 12 13 [weight=1, ];
E: 12 24 [weight=1, ];
E: 17 24 [weight=2, ];
E: 18 24 [weight=2, ];
E: 19 24 [weight=3, ];
E: 20 24 [weight=2, ];
E: 21 24 [weight=4, ];
E: 21 25 [weight=2, ];
E: 22 24 [weight=1, ];
E: 22 25 [weight=2, ];
E: 23 24 [weight=1, ];
E: 23 25 [weight=2, ];
