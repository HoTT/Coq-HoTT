N: 28 "i_lt_n_sum_m" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 8 "increasing_geq_S_n" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 11 "increasing_geq_ind" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 6 "increasing_geq_minus" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 7 "increasing_geq_n_0" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 10 "increasing_geq_rec" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 9 "increasing_geq_rect" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 4 "ineq_sub" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 5 "ineq_sub'" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 20 "j_geq_0_lt_implies_pred_geq" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 3 "leq_equivalent" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 23 "leq_implies_pred_lt" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 2 "leq_wrapper" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 21 "lt_implies_pred_geq" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 15 "n_leq_m_n_leq_plus_m_k" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 24 "n_leq_pred_Sn" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 29 "nat_sub_add_ineq" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 30 "nataddsub_comm_ineq" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 31 "nataddsub_comm_ineq_lemma" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 25 "pred_equiv" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 19 "pred_gt_implies_lt" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 22 "pred_lt_implies_leq" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 18 "pred_preserves_lt" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 27 "predeqminus1" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 26 "predn_leq_n" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 17 "sub_less" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 16 "sub_less_strict" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 1 "symmetric_rel_total_order" [body=yes, kind=cnst, prop=no, path="Arithmetic", ];
N: 14 "increasing_geq" [kind=inductive, prop=no, path="Arithmetic", ];
N: 13 "increasing_geq_n" [kind=construct, prop=no, path="Arithmetic", ];
N: 12 "increasing_geq_S" [kind=construct, prop=no, path="Arithmetic", ];
E: 3 8 [weight=1, ];
E: 3 10 [weight=1, ];
E: 3 12 [weight=1, ];
E: 3 13 [weight=1, ];
E: 3 14 [weight=8, ];
E: 4 5 [weight=1, ];
E: 4 17 [weight=1, ];
E: 6 12 [weight=1, ];
E: 6 13 [weight=1, ];
E: 6 14 [weight=15, ];
E: 6 27 [weight=1, ];
E: 7 10 [weight=1, ];
E: 7 12 [weight=2, ];
E: 7 13 [weight=2, ];
E: 7 14 [weight=7, ];
E: 8 10 [weight=1, ];
E: 8 12 [weight=1, ];
E: 8 13 [weight=1, ];
E: 8 14 [weight=6, ];
E: 9 10 [weight=1, ];
E: 9 14 [weight=2, ];
E: 10 14 [weight=6, ];
E: 11 12 [weight=2, ];
E: 11 13 [weight=2, ];
E: 11 14 [weight=8, ];
E: 16 17 [weight=1, ];
E: 19 26 [weight=1, ];
E: 30 31 [weight=1, ];
