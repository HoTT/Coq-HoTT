digraph HoTT_Types {
  graph [ratio=0.5]
  node [style=filled]
Forall_path_forall_V [label="path_forall_V", URL=<Forall.html#path_forall_V>, peripheries=3, fillcolor="#F070D1"] ;
Forall_path_forall_pp [label="path_forall_pp", URL=<Forall.html#path_forall_pp>, fillcolor="#F070D1"] ;
WType_istrunc_wtype [label="istrunc_wtype", URL=<WType.html#istrunc_wtype>, peripheries=3, fillcolor="#F070D1"] ;
WType_equiv_path_wtype_ [label="equiv_path_wtype'", URL=<WType.html#equiv_path_wtype'>, fillcolor="#F070D1"] ;
Forall_equiv_path_forall [label="equiv_path_forall", URL=<Forall.html#equiv_path_forall>, fillcolor="#F070D1"] ;
Forall_isequiv_path_forall [label="isequiv_path_forall", URL=<Forall.html#isequiv_path_forall>, fillcolor="#F070D1"] ;
WType_equiv_path_wtype [label="equiv_path_wtype", URL=<WType.html#equiv_path_wtype>, fillcolor="#F070D1"] ;
WType_issig_W [label="issig_W", URL=<WType.html#issig_W>, fillcolor="#F070D1"] ;
Forall_equiv_apD10 [label="equiv_apD10", URL=<Forall.html#equiv_apD10>, peripheries=3, fillcolor="#F070D1"] ;
WType_w_arg [label="w_arg", URL=<WType.html#w_arg>, fillcolor="#F070D1"] ;
Forall_path_forall_1 [label="path_forall_1", URL=<Forall.html#path_forall_1>, fillcolor="#F070D1"] ;
WType_w_label [label="w_label", URL=<WType.html#w_label>, fillcolor="#F070D1"] ;
Forall_eta_path_forall [label="eta_path_forall", URL=<Forall.html#eta_path_forall>, fillcolor="#F070D1"] ;
Forall_apD10_path_forall [label="apD10_path_forall", URL=<Forall.html#apD10_path_forall>, fillcolor="#F070D1"] ;
WType_W_sind [label="W_sind", URL=<WType.html#W_sind>, peripheries=3, fillcolor="#F070D1"] ;
Equiv_transport_equiv__ [label="transport_equiv''", URL=<Equiv.html#transport_equiv''>, peripheries=3, fillcolor="#F070D1"] ;
WType_W_rec [label="W_rec", URL=<WType.html#W_rec>, peripheries=3, fillcolor="#F070D1"] ;
Equiv_transport_equiv_ [label="transport_equiv'", URL=<Equiv.html#transport_equiv'>, peripheries=3, fillcolor="#F070D1"] ;
WType_W_ind [label="W_ind", URL=<WType.html#W_ind>, peripheries=3, fillcolor="#7FFFD4"] ;
Equiv_transport_equiv [label="transport_equiv", URL=<Equiv.html#transport_equiv>, peripheries=3, fillcolor="#F070D1"] ;
WType_W_rect [label="W_rect", URL=<WType.html#W_rect>, fillcolor="#F070D1"] ;
WType_w_sup [label="w_sup", URL=<WType.html#w_sup>, fillcolor="#7FAAFF"] ;
Equiv_equiv_equiv_inverse [label="equiv_equiv_inverse", URL=<Equiv.html#equiv_equiv_inverse>, peripheries=3, fillcolor="#F070D1"] ;
WType_W [label="W", URL=<WType.html#W>, fillcolor="#E2CDFA"] ;
Equiv_isequiv_equiv_inverse [label="isequiv_equiv_inverse", URL=<Equiv.html#isequiv_equiv_inverse>, fillcolor="#F070D1"] ;
Universe_not_hset_Type [label="not_hset_Type", URL=<Universe.html#not_hset_Type>, peripheries=3, fillcolor="#F070D1"] ;
Equiv_equiv_functor_postcompose_equiv [label="equiv_functor_postcompose_equiv", URL=<Equiv.html#equiv_functor_postcompose_equiv>, peripheries=3, fillcolor="#F070D1"] ;
Universe_istrunc_paths_Type [label="istrunc_paths_Type", URL=<Universe.html#istrunc_paths_Type>, peripheries=3, fillcolor="#F070D1"] ;
Equiv_equiv_functor_precompose_equiv [label="equiv_functor_precompose_equiv", URL=<Equiv.html#equiv_functor_precompose_equiv>, peripheries=3, fillcolor="#F070D1"] ;
Universe_homotopic_trequiv [label="homotopic_trequiv", URL=<Universe.html#homotopic_trequiv>, peripheries=3, fillcolor="#F070D1"] ;
Equiv_equiv_functor_equiv [label="equiv_functor_equiv", URL=<Equiv.html#equiv_functor_equiv>, fillcolor="#F070D1"] ;
Equiv_isequiv_functor_equiv [label="isequiv_functor_equiv", URL=<Equiv.html#isequiv_functor_equiv>, fillcolor="#F070D1"] ;
Universe_contr_basedequiv_ [label="contr_basedequiv'", URL=<Universe.html#contr_basedequiv'>, peripheries=3, fillcolor="#F070D1"] ;
Equiv_functor_equiv [label="functor_equiv", URL=<Equiv.html#functor_equiv>, fillcolor="#F070D1"] ;
Universe_contr_basedequiv [label="contr_basedequiv", URL=<Universe.html#contr_basedequiv>, peripheries=3, fillcolor="#F070D1"] ;
Universe_equiv_induction_inv_comp [label="equiv_induction_inv_comp", URL=<Universe.html#equiv_induction_inv_comp>, peripheries=3, fillcolor="#F070D1"] ;
Equiv_contr_aut_hprop [label="contr_aut_hprop", URL=<Equiv.html#contr_aut_hprop>, peripheries=3, fillcolor="#F070D1"] ;
Universe_equiv_induction_inv [label="equiv_induction_inv", URL=<Universe.html#equiv_induction_inv>, fillcolor="#F070D1"] ;
Equiv_contr_equiv_contr_contr [label="contr_equiv_contr_contr", URL=<Equiv.html#contr_equiv_contr_contr>, peripheries=3, fillcolor="#F070D1"] ;
Equiv_istrunc_equiv [label="istrunc_equiv", URL=<Equiv.html#istrunc_equiv>, fillcolor="#F070D1"] ;
Universe_equiv_induction__comp [label="equiv_induction'_comp", URL=<Universe.html#equiv_induction'_comp>, peripheries=3, fillcolor="#F070D1"] ;
Equiv_isequiv_ap_equiv_fun [label="isequiv_ap_equiv_fun", URL=<Equiv.html#isequiv_ap_equiv_fun>, peripheries=3, fillcolor="#F070D1"] ;
Universe_equiv_induction_ [label="equiv_induction'", URL=<Universe.html#equiv_induction'>, fillcolor="#F070D1"] ;
Equiv_isequiv_path_equiv [label="isequiv_path_equiv", URL=<Equiv.html#isequiv_path_equiv>, fillcolor="#F070D1"] ;
Universe_equiv_induction_comp [label="equiv_induction_comp", URL=<Universe.html#equiv_induction_comp>, peripheries=3, fillcolor="#F070D1"] ;
Equiv_path_equiv [label="path_equiv", URL=<Equiv.html#path_equiv>, fillcolor="#F070D1"] ;
Universe_equiv_induction [label="equiv_induction", URL=<Universe.html#equiv_induction>, fillcolor="#F070D1"] ;
Universe_transport_path_universe_pV [label="transport_path_universe_pV", URL=<Universe.html#transport_path_universe_pV>, peripheries=3, fillcolor="#F070D1"] ;
Equiv_equiv_path_equiv [label="equiv_path_equiv", URL=<Equiv.html#equiv_path_equiv>, fillcolor="#F070D1"] ;
Universe_transport_path_universe_pV_uncurried [label="transport_path_universe_pV_uncurried", URL=<Universe.html#transport_path_universe_pV_uncurried>, fillcolor="#F070D1"] ;
Equiv_equiv_contr_map_isequiv [label="equiv_contr_map_isequiv", URL=<Equiv.html#equiv_contr_map_isequiv>, peripheries=3, fillcolor="#F070D1"] ;
Universe_path3_universe [label="path3_universe", URL=<Universe.html#path3_universe>, peripheries=3, fillcolor="#F070D1"] ;
Equiv_hprop_isequiv [label="hprop_isequiv", URL=<Equiv.html#hprop_isequiv>, fillcolor="#F070D1"] ;
Universe_equiv_path3_universe [label="equiv_path3_universe", URL=<Universe.html#equiv_path3_universe>, fillcolor="#F070D1"] ;
Equiv_contr_retr_equiv [label="contr_retr_equiv", URL=<Equiv.html#contr_retr_equiv>, peripheries=3, fillcolor="#F070D1"] ;
Universe_path2_universe_precompose_idmap [label="path2_universe_precompose_idmap", URL=<Universe.html#path2_universe_precompose_idmap>, peripheries=3, fillcolor="#F070D1"] ;
Equiv_contr_sect_equiv [label="contr_sect_equiv", URL=<Equiv.html#contr_sect_equiv>, fillcolor="#F070D1"] ;
Universe_path2_universe_postcompose_idmap [label="path2_universe_postcompose_idmap", URL=<Universe.html#path2_universe_postcompose_idmap>, peripheries=3, fillcolor="#F070D1"] ;
Equiv_equiv_total_iff_equiv_fiberwise [label="equiv_total_iff_equiv_fiberwise", URL=<Equiv.html#equiv_total_iff_equiv_fiberwise>, peripheries=3, fillcolor="#F070D1"] ;
Universe_path2_universe_1 [label="path2_universe_1", URL=<Universe.html#path2_universe_1>, peripheries=3, fillcolor="#F070D1"] ;
Equiv_isequiv_from_functor_sigma [label="isequiv_from_functor_sigma", URL=<Equiv.html#isequiv_from_functor_sigma>, fillcolor="#F070D1"] ;
Equiv_isequiv_inhab_codomain [label="isequiv_inhab_codomain", URL=<Equiv.html#isequiv_inhab_codomain>, peripheries=3, fillcolor="#F070D1"] ;
Universe_equiv_path2_universe_1 [label="equiv_path2_universe_1", URL=<Universe.html#equiv_path2_universe_1>, fillcolor="#F070D1"] ;
Universe_path2_universe [label="path2_universe", URL=<Universe.html#path2_universe>, fillcolor="#F070D1"] ;
Equiv_isequiv_contr_map [label="isequiv_contr_map", URL=<Equiv.html#isequiv_contr_map>, fillcolor="#F070D1"] ;
Universe_equiv_path2_universe [label="equiv_path2_universe", URL=<Universe.html#equiv_path2_universe>, fillcolor="#F070D1"] ;
Equiv_contr_map_isequiv [label="contr_map_isequiv", URL=<Equiv.html#contr_map_isequiv>, fillcolor="#F070D1"] ;
Universe_univalent_transport_idequiv [label="univalent_transport_idequiv", URL=<Universe.html#univalent_transport_idequiv>, peripheries=3, fillcolor="#F070D1"] ;
Empty_equiv_to_empty [label="equiv_to_empty", URL=<Empty.html#equiv_to_empty>, peripheries=3, fillcolor="#F070D1"] ;
Universe_univalent_transport [label="univalent_transport", URL=<Universe.html#univalent_transport>, fillcolor="#F070D1"] ;
Empty_isequiv_all_to_empty [label="isequiv_all_to_empty", URL=<Empty.html#isequiv_all_to_empty>, fillcolor="#F070D1"] ;
Universe_transport_arrow_toconst_path_universe [label="transport_arrow_toconst_path_universe", URL=<Universe.html#transport_arrow_toconst_path_universe>, peripheries=3, fillcolor="#F070D1"] ;
Empty_istrunc_Empty [label="istrunc_Empty", URL=<Empty.html#istrunc_Empty>, fillcolor="#F070D1"] ;
Universe_transport_path_universe_Vp [label="transport_path_universe_Vp", URL=<Universe.html#transport_path_universe_Vp>, peripheries=3, fillcolor="#F070D1"] ;
Empty_equiv_empty_rec [label="equiv_empty_rec", URL=<Empty.html#equiv_empty_rec>, peripheries=3, fillcolor="#F070D1"] ;
Universe_transport_path_universe_Vp_uncurried [label="transport_path_universe_Vp_uncurried", URL=<Universe.html#transport_path_universe_Vp_uncurried>, fillcolor="#F070D1"] ;
Empty_isequiv_empty_rec [label="isequiv_empty_rec", URL=<Empty.html#isequiv_empty_rec>, fillcolor="#F070D1"] ;
Universe_transport_path_universe_V_equiv_path [label="transport_path_universe_V_equiv_path", URL=<Universe.html#transport_path_universe_V_equiv_path>, fillcolor="#F070D1"] ;
Empty_Empty_rec [label="Empty_rec", URL=<Empty.html#Empty_rec>, fillcolor="#F070D1"] ;
Universe_transport_path_universe_V [label="transport_path_universe_V", URL=<Universe.html#transport_path_universe_V>, fillcolor="#F070D1"] ;
Empty_contr_from_Empty [label="contr_from_Empty", URL=<Empty.html#contr_from_Empty>, peripheries=3, fillcolor="#F070D1"] ;
Universe_transport_path_universe_V_uncurried [label="transport_path_universe_V_uncurried", URL=<Universe.html#transport_path_universe_V_uncurried>, fillcolor="#F070D1"] ;
Bool_abelian_aut_bool [label="abelian_aut_bool", URL=<Bool.html#abelian_aut_bool>, peripheries=3, fillcolor="#F070D1"] ;
Universe_transport_path_universe_ [label="transport_path_universe'", URL=<Universe.html#transport_path_universe'>, peripheries=3, fillcolor="#F070D1"] ;
Bool_idmap_bool_ne_negb [label="idmap_bool_ne_negb", URL=<Bool.html#idmap_bool_ne_negb>, peripheries=3, fillcolor="#F070D1"] ;
Universe_transport_path_universe_equiv_path [label="transport_path_universe_equiv_path", URL=<Universe.html#transport_path_universe_equiv_path>, fillcolor="#F070D1"] ;
Bool_aut_bool_idmap_or_negb [label="aut_bool_idmap_or_negb", URL=<Bool.html#aut_bool_idmap_or_negb>, peripheries=3, fillcolor="#F070D1"] ;
Universe_transport_path_universe [label="transport_path_universe", URL=<Universe.html#transport_path_universe>, fillcolor="#F070D1"] ;
Bool_equiv_bool_aut_bool [label="equiv_bool_aut_bool", URL=<Bool.html#equiv_bool_aut_bool>, fillcolor="#F070D1"] ;
Universe_transport_path_universe_uncurried [label="transport_path_universe_uncurried", URL=<Universe.html#transport_path_universe_uncurried>, fillcolor="#F070D1"] ;
Bool_aut_bool_canonical [label="aut_bool_canonical", URL=<Bool.html#aut_bool_canonical>, fillcolor="#F070D1"] ;
Bool_eval_bool_isequiv [label="eval_bool_isequiv", URL=<Bool.html#eval_bool_isequiv>, fillcolor="#F070D1"] ;
Universe_ap_prod_r_path_universe [label="ap_prod_r_path_universe", URL=<Universe.html#ap_prod_r_path_universe>, peripheries=3, fillcolor="#F070D1"] ;
Bool_equiv_negb [label="equiv_negb", URL=<Bool.html#equiv_negb>, fillcolor="#F070D1"] ;
Universe_ap_prod_l_path_universe [label="ap_prod_l_path_universe", URL=<Universe.html#ap_prod_l_path_universe>, peripheries=3, fillcolor="#F070D1"] ;
Bool_isequiv_negb [label="isequiv_negb", URL=<Bool.html#isequiv_negb>, fillcolor="#F070D1"] ;
Universe_ap_equiv_path_universe [label="ap_equiv_path_universe", URL=<Universe.html#ap_equiv_path_universe>, peripheries=3, fillcolor="#F070D1"] ;
Universe_path_universe_V [label="path_universe_V", URL=<Universe.html#path_universe_V>, peripheries=3, fillcolor="#F070D1"] ;
Bool_equiv_bool_rec_uncurried [label="equiv_bool_rec_uncurried", URL=<Bool.html#equiv_bool_rec_uncurried>, peripheries=3, fillcolor="#F070D1"] ;
Universe_path_universe_V_uncurried [label="path_universe_V_uncurried", URL=<Universe.html#path_universe_V_uncurried>, fillcolor="#F070D1"] ;
Bool_equiv_bool_forall_prod [label="equiv_bool_forall_prod", URL=<Bool.html#equiv_bool_forall_prod>, fillcolor="#F070D1"] ;
Universe_path_universe_1 [label="path_universe_1", URL=<Universe.html#path_universe_1>, fillcolor="#F070D1"] ;
Bool_negb_ne_ [label="negb_ne'", URL=<Bool.html#negb_ne'>, peripheries=3, fillcolor="#F070D1"] ;
Universe_path_universe_compose [label="path_universe_compose", URL=<Universe.html#path_universe_compose>, peripheries=3, fillcolor="#F070D1"] ;
Bool_negb_ne [label="negb_ne", URL=<Bool.html#negb_ne>, fillcolor="#F070D1"] ;
Universe_path_universe_compose_uncurried [label="path_universe_compose_uncurried", URL=<Universe.html#path_universe_compose_uncurried>, fillcolor="#F070D1"] ;
Bool_not_fixed_negb [label="not_fixed_negb", URL=<Bool.html#not_fixed_negb>, peripheries=3, fillcolor="#F070D1"] ;
Bool_hset_bool [label="hset_bool", URL=<Bool.html#hset_bool>, peripheries=3, fillcolor="#F070D1"] ;
Universe_equiv_path_pp [label="equiv_path_pp", URL=<Universe.html#equiv_path_pp>, fillcolor="#F070D1"] ;
Universe_transport_idmap_path_universe_uncurried [label="transport_idmap_path_universe_uncurried", URL=<Universe.html#transport_idmap_path_universe_uncurried>, peripheries=3, fillcolor="#F070D1"] ;
Bool_decidable_paths_bool [label="decidable_paths_bool", URL=<Bool.html#decidable_paths_bool>, fillcolor="#F070D1"] ;
Bool_true_ne_false [label="true_ne_false", URL=<Bool.html#true_ne_false>, fillcolor="#F070D1"] ;
Universe_transport_idmap_path_universe [label="transport_idmap_path_universe", URL=<Universe.html#transport_idmap_path_universe>, peripheries=3, fillcolor="#F070D1"] ;
Bool_false_ne_true [label="false_ne_true", URL=<Bool.html#false_ne_true>, fillcolor="#F070D1"] ;
Universe_equiv_path_path_universe_uncurried [label="equiv_path_path_universe_uncurried", URL=<Universe.html#equiv_path_path_universe_uncurried>, peripheries=3, fillcolor="#F070D1"] ;
Bool_trunc_if [label="trunc_if", URL=<Bool.html#trunc_if>, fillcolor="#F070D1"] ;
Universe_equiv_path_path_universe [label="equiv_path_path_universe", URL=<Universe.html#equiv_path_path_universe>, peripheries=3, fillcolor="#F070D1"] ;
Universe_path_universe_uncurried_transport_idmap [label="path_universe_uncurried_transport_idmap", URL=<Universe.html#path_universe_uncurried_transport_idmap>, peripheries=3, fillcolor="#F070D1"] ;
Bool_implb_impl [label="implb_impl", URL=<Bool.html#implb_impl>, peripheries=3, fillcolor="#F070D1"] ;
Universe_path_universe_transport_idmap [label="path_universe_transport_idmap", URL=<Universe.html#path_universe_transport_idmap>, peripheries=3, fillcolor="#F070D1"] ;
Bool_implb_true [label="implb_true", URL=<Bool.html#implb_true>, peripheries=3, fillcolor="#F070D1"] ;
Universe_path_universe_uncurried_equiv_path [label="path_universe_uncurried_equiv_path", URL=<Universe.html#path_universe_uncurried_equiv_path>, peripheries=3, fillcolor="#F070D1"] ;
Bool_implb [label="implb", URL=<Bool.html#implb>, fillcolor="#F070D1"] ;
Universe_path_universe_equiv_path [label="path_universe_equiv_path", URL=<Universe.html#path_universe_equiv_path>, peripheries=3, fillcolor="#F070D1"] ;
Bool_negb [label="negb", URL=<Bool.html#negb>, fillcolor="#F070D1"] ;
Bool_orb [label="orb", URL=<Bool.html#orb>, peripheries=3, fillcolor="#F070D1"] ;
Universe_equiv_equiv_path [label="equiv_equiv_path", URL=<Universe.html#equiv_equiv_path>, peripheries=3, fillcolor="#F070D1"] ;
Universe_equiv_path_universe [label="equiv_path_universe", URL=<Universe.html#equiv_path_universe>, fillcolor="#F070D1"] ;
Bool_andb [label="andb", URL=<Bool.html#andb>, peripheries=3, fillcolor="#F070D1"] ;
Universe_isequiv_path_universe [label="isequiv_path_universe", URL=<Universe.html#isequiv_path_universe>, fillcolor="#F070D1"] ;
Bool_Bool_rect [label="Bool_rect", URL=<Bool.html#Bool_rect>, peripheries=3, fillcolor="#F070D1"] ;
Universe_eta_path_universe_uncurried [label="eta_path_universe_uncurried", URL=<Universe.html#eta_path_universe_uncurried>, peripheries=3, fillcolor="#F070D1"] ;
Bool_Bool_rec [label="Bool_rec", URL=<Bool.html#Bool_rec>, peripheries=3, fillcolor="#F070D1"] ;
Universe_eta_path_universe [label="eta_path_universe", URL=<Universe.html#eta_path_universe>, fillcolor="#F070D1"] ;
Bool_Bool_ind [label="Bool_ind", URL=<Bool.html#Bool_ind>, fillcolor="#F070D1"] ;
Bool_false [label="false", URL=<Bool.html#false>, fillcolor="#7FAAFF"] ;
Universe_path_universe [label="path_universe", URL=<Universe.html#path_universe>, fillcolor="#F070D1"] ;
Bool_true [label="true", URL=<Bool.html#true>, fillcolor="#7FAAFF"] ;
Universe_path_universe_uncurried [label="path_universe_uncurried", URL=<Universe.html#path_universe_uncurried>, fillcolor="#F070D1"] ;
Bool_Bool [label="Bool", URL=<Bool.html#Bool>, fillcolor="#E2CDFA"] ;
Universe_Univalence_implies_Funext [label="Univalence_implies_Funext", URL=<Universe.html#Univalence_implies_Funext>, fillcolor="#FACDEF"] ;
Universe_isequiv_equiv_path [label="isequiv_equiv_path", URL=<Universe.html#isequiv_equiv_path>, fillcolor="#FACDEF"] ;
Arrow_decidable_arrow [label="decidable_arrow", URL=<Arrow.html#decidable_arrow>, peripheries=3, fillcolor="#F070D1"] ;
Universe_is_global_axiom_univalence [label="is_global_axiom_univalence", URL=<Universe.html#is_global_axiom_univalence>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_equiv_functor_arrow_ [label="equiv_functor_arrow'", URL=<Arrow.html#equiv_functor_arrow'>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_equiv_functor_arrow [label="equiv_functor_arrow", URL=<Arrow.html#equiv_functor_arrow>, peripheries=3, fillcolor="#F070D1"] ;
Universe_Univalence [label="Univalence", URL=<Universe.html#Univalence>, fillcolor="#FACDEF"] ;
Arrow_isequiv_functor_arrow [label="isequiv_functor_arrow", URL=<Arrow.html#isequiv_functor_arrow>, fillcolor="#F070D1"] ;
Universe_equiv_path_V [label="equiv_path_V", URL=<Universe.html#equiv_path_V>, fillcolor="#F070D1"] ;
Universe_equiv_path [label="equiv_path", URL=<Universe.html#equiv_path>, fillcolor="#F070D1"] ;
Arrow_equiv_arrow_from_contr [label="equiv_arrow_from_contr", URL=<Arrow.html#equiv_arrow_from_contr>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_istrunc_arrow [label="istrunc_arrow", URL=<Arrow.html#istrunc_arrow>, fillcolor="#F070D1"] ;
Unit_const_tt [label="const_tt", URL=<Unit.html#const_tt>, peripheries=3, fillcolor="#F070D1"] ;
Unit_contr_equiv_unit [label="contr_equiv_unit", URL=<Unit.html#contr_equiv_unit>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_contr_arrow [label="contr_arrow", URL=<Arrow.html#contr_arrow>, peripheries=3, fillcolor="#F070D1"] ;
Unit_equiv_contr_unit [label="equiv_contr_unit", URL=<Unit.html#equiv_contr_unit>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_ap_functor_arrow [label="ap_functor_arrow", URL=<Arrow.html#ap_functor_arrow>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_iff_not [label="iff_not", URL=<Arrow.html#iff_not>, peripheries=3, fillcolor="#F070D1"] ;
Unit_contr_unit [label="contr_unit", URL=<Unit.html#contr_unit>, fillcolor="#F070D1"] ;
Arrow_not_contrapositive [label="not_contrapositive", URL=<Arrow.html#not_contrapositive>, fillcolor="#F070D1"] ;
Unit_equiv_unit_coind [label="equiv_unit_coind", URL=<Unit.html#equiv_unit_coind>, peripheries=3, fillcolor="#F070D1"] ;
Unit_isequiv_unit_coind [label="isequiv_unit_coind", URL=<Unit.html#isequiv_unit_coind>, fillcolor="#F070D1"] ;
Arrow_functor_arrow [label="functor_arrow", URL=<Arrow.html#functor_arrow>, fillcolor="#F070D1"] ;
Unit_unit_coind [label="unit_coind", URL=<Unit.html#unit_coind>, fillcolor="#F070D1"] ;
Arrow_ap_postcompose [label="ap_postcompose", URL=<Arrow.html#ap_postcompose>, peripheries=3, fillcolor="#F070D1"] ;
Unit_isequiv_unit_name [label="isequiv_unit_name", URL=<Unit.html#isequiv_unit_name>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_ap_precompose [label="ap_precompose", URL=<Arrow.html#ap_precompose>, peripheries=3, fillcolor="#F070D1"] ;
Unit_equiv_unit_rec [label="equiv_unit_rec", URL=<Unit.html#equiv_unit_rec>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_ap_lambda [label="ap_lambda", URL=<Arrow.html#ap_lambda>, peripheries=3, fillcolor="#F070D1"] ;
Unit_isequiv_unit_rec [label="isequiv_unit_rec", URL=<Unit.html#isequiv_unit_rec>, fillcolor="#F070D1"] ;
Arrow_ap_apply_FlFr [label="ap_apply_FlFr", URL=<Arrow.html#ap_apply_FlFr>, peripheries=3, fillcolor="#F070D1"] ;
Unit_isequiv_unit_ind [label="isequiv_unit_ind", URL=<Unit.html#isequiv_unit_ind>, fillcolor="#F070D1"] ;
Arrow_ap_apply_Fr [label="ap_apply_Fr", URL=<Arrow.html#ap_apply_Fr>, peripheries=3, fillcolor="#F070D1"] ;
Unit_equiv_path_unit [label="equiv_path_unit", URL=<Unit.html#equiv_path_unit>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_ap_apply_Fl [label="ap_apply_Fl", URL=<Arrow.html#ap_apply_Fl>, peripheries=3, fillcolor="#F070D1"] ;
Unit_isequiv_path_unit [label="isequiv_path_unit", URL=<Unit.html#isequiv_path_unit>, fillcolor="#F070D1"] ;
Arrow_ap_apply_l [label="ap_apply_l", URL=<Arrow.html#ap_apply_l>, peripheries=3, fillcolor="#F070D1"] ;
Unit_eta_path_unit [label="eta_path_unit", URL=<Unit.html#eta_path_unit>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_ap10_dpath_arrow [label="ap10_dpath_arrow", URL=<Arrow.html#ap10_dpath_arrow>, peripheries=3, fillcolor="#F070D1"] ;
Unit_path_unit [label="path_unit", URL=<Unit.html#path_unit>, fillcolor="#F070D1"] ;
Arrow_dpath_arrow [label="dpath_arrow", URL=<Arrow.html#dpath_arrow>, fillcolor="#F070D1"] ;
Unit_path_unit_uncurried [label="path_unit_uncurried", URL=<Unit.html#path_unit_uncurried>, fillcolor="#F070D1"] ;
Arrow_ap_transport_arrow_toconst [label="ap_transport_arrow_toconst", URL=<Arrow.html#ap_transport_arrow_toconst>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_transport_arrow_fromconst [label="transport_arrow_fromconst", URL=<Arrow.html#transport_arrow_fromconst>, peripheries=3, fillcolor="#F070D1"] ;
Unit_eta_unit [label="eta_unit", URL=<Unit.html#eta_unit>, peripheries=3, fillcolor="#F070D1"] ;
Sum_trunc_sum_ [label="trunc_sum'", URL=<Sum.html#trunc_sum'>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_transport_arrow_toconst_ [label="transport_arrow_toconst'", URL=<Arrow.html#transport_arrow_toconst'>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_transport_arrow_toconst [label="transport_arrow_toconst", URL=<Arrow.html#transport_arrow_toconst>, fillcolor="#F070D1"] ;
Sum_isequiv_sum_of_sig [label="isequiv_sum_of_sig", URL=<Sum.html#isequiv_sum_of_sig>, fillcolor="#F070D1"] ;
Arrow_transport_arrow_ [label="transport_arrow'", URL=<Arrow.html#transport_arrow'>, peripheries=3, fillcolor="#F070D1"] ;
Sum_isequiv_sig_of_sum [label="isequiv_sig_of_sum", URL=<Sum.html#isequiv_sig_of_sum>, fillcolor="#F070D1"] ;
Arrow_transport_arrow [label="transport_arrow", URL=<Arrow.html#transport_arrow>, fillcolor="#F070D1"] ;
Sum_sum_of_sig [label="sum_of_sig", URL=<Sum.html#sum_of_sig>, fillcolor="#F070D1"] ;
Sum_sig_of_sum [label="sig_of_sum", URL=<Sum.html#sig_of_sum>, fillcolor="#F070D1"] ;
Arrow_path_arrow_pp [label="path_arrow_pp", URL=<Arrow.html#path_arrow_pp>, peripheries=3, fillcolor="#F070D1"] ;
Sum_ishprop_decidable_hprop [label="ishprop_decidable_hprop", URL=<Sum.html#ishprop_decidable_hprop>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_ap100_path_arrow2 [label="ap100_path_arrow2", URL=<Arrow.html#ap100_path_arrow2>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_equiv_path_arrow2 [label="equiv_path_arrow2", URL=<Arrow.html#equiv_path_arrow2>, fillcolor="#F070D1"] ;
Sum_decidablepaths_sum [label="decidablepaths_sum", URL=<Sum.html#decidablepaths_sum>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_equiv_path_arrow [label="equiv_path_arrow", URL=<Arrow.html#equiv_path_arrow>, fillcolor="#F070D1"] ;
Sum_decidable_sum [label="decidable_sum", URL=<Sum.html#decidable_sum>, peripheries=3, fillcolor="#F070D1"] ;
Sum_ishprop_sum [label="ishprop_sum", URL=<Sum.html#ishprop_sum>, fillcolor="#F070D1"] ;
Arrow_isequiv_path_arrow [label="isequiv_path_arrow", URL=<Arrow.html#isequiv_path_arrow>, fillcolor="#F070D1"] ;
Sum_ishset_sum [label="ishset_sum", URL=<Sum.html#ishset_sum>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_equiv_ap10 [label="equiv_ap10", URL=<Arrow.html#equiv_ap10>, fillcolor="#F070D1"] ;
Arrow_path_arrow_1 [label="path_arrow_1", URL=<Arrow.html#path_arrow_1>, fillcolor="#F070D1"] ;
Sum_istrunc_sum [label="istrunc_sum", URL=<Sum.html#istrunc_sum>, fillcolor="#F070D1"] ;
Arrow_eta_path_arrow [label="eta_path_arrow", URL=<Arrow.html#eta_path_arrow>, fillcolor="#F070D1"] ;
Sum_equiv_sum_distributive [label="equiv_sum_distributive", URL=<Sum.html#equiv_sum_distributive>, peripheries=3, fillcolor="#F070D1"] ;
Sum_equiv_sum_ind [label="equiv_sum_ind", URL=<Sum.html#equiv_sum_ind>, fillcolor="#F070D1"] ;
Arrow_ap10_path_forall [label="ap10_path_forall", URL=<Arrow.html#ap10_path_forall>, peripheries=3, fillcolor="#F070D1"] ;
Sum_isequiv_sum_ind [label="isequiv_sum_ind", URL=<Sum.html#isequiv_sum_ind>, fillcolor="#F070D1"] ;
Arrow_apD10_path_arrow [label="apD10_path_arrow", URL=<Arrow.html#apD10_path_arrow>, fillcolor="#F070D1"] ;
Sum_sum_ind_uncurried [label="sum_ind_uncurried", URL=<Sum.html#sum_ind_uncurried>, fillcolor="#F070D1"] ;
Arrow_ap10_path_arrow [label="ap10_path_arrow", URL=<Arrow.html#ap10_path_arrow>, peripheries=3, fillcolor="#F070D1"] ;
Arrow_path_arrow [label="path_arrow", URL=<Arrow.html#path_arrow>, fillcolor="#F070D1"] ;
Sum_equiv_unfunctor_sum_contr_ll [label="equiv_unfunctor_sum_contr_ll", URL=<Sum.html#equiv_unfunctor_sum_contr_ll>, peripheries=3, fillcolor="#F070D1"] ;
Sum_equiv_unfunctor_sum_indecomposable_ll [label="equiv_unfunctor_sum_indecomposable_ll", URL=<Sum.html#equiv_unfunctor_sum_indecomposable_ll>, fillcolor="#F070D1"] ;
Arrow_IsTransitive_arrow [label="IsTransitive_arrow", URL=<Arrow.html#IsTransitive_arrow>, peripheries=3, fillcolor="#F070D1"] ;
Sum_equiv_indecomposable_sum [label="equiv_indecomposable_sum", URL=<Sum.html#equiv_indecomposable_sum>, fillcolor="#F070D1"] ;
Arrow_IsReflexive_arrow [label="IsReflexive_arrow", URL=<Arrow.html#IsReflexive_arrow>, peripheries=3, fillcolor="#F070D1"] ;
Sum_indecomposable_contr [label="indecomposable_contr", URL=<Sum.html#indecomposable_contr>, fillcolor="#F070D1"] ;
Arrow_arrow [label="arrow", URL=<Arrow.html#arrow>, fillcolor="#F070D1"] ;
Sum_indecompose0 [label="indecompose0", URL=<Sum.html#indecompose0>, peripheries=3, fillcolor="#F070D1"] ;
Sum_indecompose [label="indecompose", URL=<Sum.html#indecompose>, peripheries=3, fillcolor="#F070D1"] ;
Sum_Indecomposable_sind [label="Indecomposable_sind", URL=<Sum.html#Indecomposable_sind>, peripheries=3, fillcolor="#F070D1"] ;
Sum_Indecomposable_rec [label="Indecomposable_rec", URL=<Sum.html#Indecomposable_rec>, peripheries=3, fillcolor="#F070D1"] ;
Sum_Indecomposable_ind [label="Indecomposable_ind", URL=<Sum.html#Indecomposable_ind>, peripheries=3, fillcolor="#7FFFD4"] ;
Sum_Indecomposable_rect [label="Indecomposable_rect", URL=<Sum.html#Indecomposable_rect>, fillcolor="#F070D1"] ;
Sum_Build_Indecomposable [label="Build_Indecomposable", URL=<Sum.html#Build_Indecomposable>, fillcolor="#7FAAFF"] ;
Sum_Indecomposable [label="Indecomposable", URL=<Sum.html#Indecomposable>, fillcolor="#E2CDFA"] ;
Sum_is_inr_decompose_r [label="is_inr_decompose_r", URL=<Sum.html#is_inr_decompose_r>, peripheries=3, fillcolor="#F070D1"] ;
Sum_is_inl_decompose_l [label="is_inl_decompose_l", URL=<Sum.html#is_inl_decompose_l>, peripheries=3, fillcolor="#F070D1"] ;
Sum_equiv_decompose [label="equiv_decompose", URL=<Sum.html#equiv_decompose>, fillcolor="#F070D1"] ;
Sum_decompose_r [label="decompose_r", URL=<Sum.html#decompose_r>, fillcolor="#F070D1"] ;
Sum_decompose_l [label="decompose_l", URL=<Sum.html#decompose_l>, fillcolor="#F070D1"] ;
Sum_equiv_sigma_sum [label="equiv_sigma_sum", URL=<Sum.html#equiv_sigma_sum>, peripheries=3, fillcolor="#F070D1"] ;
Sum_sum_distrib_r [label="sum_distrib_r", URL=<Sum.html#sum_distrib_r>, peripheries=3, fillcolor="#F070D1"] ;
Sum_sum_distrib_l [label="sum_distrib_l", URL=<Sum.html#sum_distrib_l>, peripheries=3, fillcolor="#F070D1"] ;
Sum_sum_empty_r [label="sum_empty_r", URL=<Sum.html#sum_empty_r>, fillcolor="#F070D1"] ;
Sum_sum_empty_l [label="sum_empty_l", URL=<Sum.html#sum_empty_l>, fillcolor="#F070D1"] ;
Sum_equiv_sum_assoc [label="equiv_sum_assoc", URL=<Sum.html#equiv_sum_assoc>, fillcolor="#F070D1"] ;
Sum_equiv_sum_symm [label="equiv_sum_symm", URL=<Sum.html#equiv_sum_symm>, fillcolor="#F070D1"] ;
Sum_equiv_unfunctor_sum [label="equiv_unfunctor_sum", URL=<Sum.html#equiv_unfunctor_sum>, fillcolor="#F070D1"] ;
Sum_equiv_unfunctor_sum_r [label="equiv_unfunctor_sum_r", URL=<Sum.html#equiv_unfunctor_sum_r>, fillcolor="#F070D1"] ;
Sum_isequiv_unfunctor_sum_r [label="isequiv_unfunctor_sum_r", URL=<Sum.html#isequiv_unfunctor_sum_r>, fillcolor="#F070D1"] ;
Sum_equiv_unfunctor_sum_l [label="equiv_unfunctor_sum_l", URL=<Sum.html#equiv_unfunctor_sum_l>, fillcolor="#F070D1"] ;
Sum_isequiv_unfunctor_sum_l [label="isequiv_unfunctor_sum_l", URL=<Sum.html#isequiv_unfunctor_sum_l>, fillcolor="#F070D1"] ;
Sum_iff_functor_sum [label="iff_functor_sum", URL=<Sum.html#iff_functor_sum>, peripheries=3, fillcolor="#F070D1"] ;
Sum_equiv_functor_sum_r [label="equiv_functor_sum_r", URL=<Sum.html#equiv_functor_sum_r>, peripheries=3, fillcolor="#F070D1"] ;
Sum_equiv_functor_sum_l [label="equiv_functor_sum_l", URL=<Sum.html#equiv_functor_sum_l>, peripheries=3, fillcolor="#F070D1"] ;
Sum_equiv_functor_sum_ [label="equiv_functor_sum'", URL=<Sum.html#equiv_functor_sum'>, fillcolor="#F070D1"] ;
Sum_equiv_functor_sum [label="equiv_functor_sum", URL=<Sum.html#equiv_functor_sum>, fillcolor="#F070D1"] ;
Sum_isequiv_functor_sum [label="isequiv_functor_sum", URL=<Sum.html#isequiv_functor_sum>, fillcolor="#F070D1"] ;
Sum_hfiber_unfunctor_sum_r [label="hfiber_unfunctor_sum_r", URL=<Sum.html#hfiber_unfunctor_sum_r>, peripheries=3, fillcolor="#F070D1"] ;
Sum_hfiber_unfunctor_sum_r_subproof0 [label="hfiber_unfunctor_sum_r_subproof0", URL=<Sum.html#hfiber_unfunctor_sum_r_subproof0>, fillcolor="#F070D1"] ;
Sum_hfiber_unfunctor_sum_r_subproof [label="hfiber_unfunctor_sum_r_subproof", URL=<Sum.html#hfiber_unfunctor_sum_r_subproof>, fillcolor="#F070D1"] ;
Sum_hfiber_unfunctor_sum_l [label="hfiber_unfunctor_sum_l", URL=<Sum.html#hfiber_unfunctor_sum_l>, peripheries=3, fillcolor="#F070D1"] ;
Sum_hfiber_unfunctor_sum_l_subproof0 [label="hfiber_unfunctor_sum_l_subproof0", URL=<Sum.html#hfiber_unfunctor_sum_l_subproof0>, fillcolor="#F070D1"] ;
Sum_hfiber_unfunctor_sum_l_subproof [label="hfiber_unfunctor_sum_l_subproof", URL=<Sum.html#hfiber_unfunctor_sum_l_subproof>, fillcolor="#F070D1"] ;
Sum_unfunctor_sum_r_compose [label="unfunctor_sum_r_compose", URL=<Sum.html#unfunctor_sum_r_compose>, fillcolor="#F070D1"] ;
Sum_unfunctor_sum_l_compose [label="unfunctor_sum_l_compose", URL=<Sum.html#unfunctor_sum_l_compose>, fillcolor="#F070D1"] ;
Sum_unfunctor_sum_r_beta [label="unfunctor_sum_r_beta", URL=<Sum.html#unfunctor_sum_r_beta>, fillcolor="#F070D1"] ;
Sum_unfunctor_sum_l_beta [label="unfunctor_sum_l_beta", URL=<Sum.html#unfunctor_sum_l_beta>, fillcolor="#F070D1"] ;
Sum_unfunctor_sum_eta [label="unfunctor_sum_eta", URL=<Sum.html#unfunctor_sum_eta>, peripheries=3, fillcolor="#F070D1"] ;
Sum_unfunctor_sum_r [label="unfunctor_sum_r", URL=<Sum.html#unfunctor_sum_r>, fillcolor="#F070D1"] ;
Sum_unfunctor_sum_l [label="unfunctor_sum_l", URL=<Sum.html#unfunctor_sum_l>, fillcolor="#F070D1"] ;
Sum_functor_sum_idmap [label="functor_sum_idmap", URL=<Sum.html#functor_sum_idmap>, peripheries=3, fillcolor="#F070D1"] ;
Sum_functor_sum_compose [label="functor_sum_compose", URL=<Sum.html#functor_sum_compose>, peripheries=3, fillcolor="#F070D1"] ;
Sum_functor_sum_homotopic [label="functor_sum_homotopic", URL=<Sum.html#functor_sum_homotopic>, peripheries=3, fillcolor="#F070D1"] ;
Sum_hfiber_functor_sum_r [label="hfiber_functor_sum_r", URL=<Sum.html#hfiber_functor_sum_r>, peripheries=3, fillcolor="#F070D1"] ;
Sum_hfiber_functor_sum_l [label="hfiber_functor_sum_l", URL=<Sum.html#hfiber_functor_sum_l>, peripheries=3, fillcolor="#F070D1"] ;
Sum_ap_functor_sum [label="ap_functor_sum", URL=<Sum.html#ap_functor_sum>, peripheries=3, fillcolor="#F070D1"] ;
Sum_functor_code_sum [label="functor_code_sum", URL=<Sum.html#functor_code_sum>, fillcolor="#F070D1"] ;
Sum_functor_sum [label="functor_sum", URL=<Sum.html#functor_sum>, fillcolor="#F070D1"] ;
Sum_is_inr_ind [label="is_inr_ind", URL=<Sum.html#is_inr_ind>, fillcolor="#F070D1"] ;
Sum_is_inl_ind [label="is_inl_ind", URL=<Sum.html#is_inl_ind>, fillcolor="#F070D1"] ;
Sum_is_inl_or_is_inr [label="is_inl_or_is_inr", URL=<Sum.html#is_inl_or_is_inr>, fillcolor="#F070D1"] ;
Sum_not_is_inl_and_inr_ [label="not_is_inl_and_inr'", URL=<Sum.html#not_is_inl_and_inr'>, fillcolor="#F070D1"] ;
Sum_not_is_inl_and_inr [label="not_is_inl_and_inr", URL=<Sum.html#not_is_inl_and_inr>, fillcolor="#F070D1"] ;
Sum_inr_un_inr [label="inr_un_inr", URL=<Sum.html#inr_un_inr>, fillcolor="#F070D1"] ;
Sum_inl_un_inl [label="inl_un_inl", URL=<Sum.html#inl_un_inl>, fillcolor="#F070D1"] ;
Sum_un_inr_inr [label="un_inr_inr", URL=<Sum.html#un_inr_inr>, peripheries=3, fillcolor="#F070D1"] ;
Sum_un_inl_inl [label="un_inl_inl", URL=<Sum.html#un_inl_inl>, peripheries=3, fillcolor="#F070D1"] ;
Sum_is_inr_not_inl [label="is_inr_not_inl", URL=<Sum.html#is_inr_not_inl>, peripheries=3, fillcolor="#F070D1"] ;
Sum_is_inl_not_inr [label="is_inl_not_inr", URL=<Sum.html#is_inl_not_inr>, peripheries=3, fillcolor="#F070D1"] ;
Sum_un_inr [label="un_inr", URL=<Sum.html#un_inr>, fillcolor="#F070D1"] ;
Sum_un_inl [label="un_inl", URL=<Sum.html#un_inl>, fillcolor="#F070D1"] ;
Sum_decidable_is_inr [label="decidable_is_inr", URL=<Sum.html#decidable_is_inr>, peripheries=3, fillcolor="#F070D1"] ;
Sum_decidable_is_inl [label="decidable_is_inl", URL=<Sum.html#decidable_is_inl>, peripheries=3, fillcolor="#F070D1"] ;
Sum_ishprop_is_inr [label="ishprop_is_inr", URL=<Sum.html#ishprop_is_inr>, fillcolor="#F070D1"] ;
Sum_ishprop_is_inl [label="ishprop_is_inl", URL=<Sum.html#ishprop_is_inl>, fillcolor="#F070D1"] ;
Sum_is_inr [label="is_inr", URL=<Sum.html#is_inr>, fillcolor="#F070D1"] ;
Sum_is_inl [label="is_inl", URL=<Sum.html#is_inl>, fillcolor="#F070D1"] ;
Sum_is_inr_and [label="is_inr_and", URL=<Sum.html#is_inr_and>, fillcolor="#F070D1"] ;
Sum_is_inl_and [label="is_inl_and", URL=<Sum.html#is_inl_and>, fillcolor="#F070D1"] ;
Sum_transport_sum [label="transport_sum", URL=<Sum.html#transport_sum>, peripheries=3, fillcolor="#F070D1"] ;
Sum_equiv_decidable_sum_r [label="equiv_decidable_sum_r", URL=<Sum.html#equiv_decidable_sum_r>, peripheries=3, fillcolor="#F070D1"] ;
Sum_equiv_decidable_sum_l [label="equiv_decidable_sum_l", URL=<Sum.html#equiv_decidable_sum_l>, peripheries=3, fillcolor="#F070D1"] ;
Sum_equiv_decidable_sum [label="equiv_decidable_sum", URL=<Sum.html#equiv_decidable_sum>, fillcolor="#F070D1"] ;
Sum_decidable_hfiber_inr [label="decidable_hfiber_inr", URL=<Sum.html#decidable_hfiber_inr>, peripheries=3, fillcolor="#F070D1"] ;
Sum_ishprop_hfiber_inr [label="ishprop_hfiber_inr", URL=<Sum.html#ishprop_hfiber_inr>, peripheries=3, fillcolor="#F070D1"] ;
Sum_decidable_hfiber_inl [label="decidable_hfiber_inl", URL=<Sum.html#decidable_hfiber_inl>, peripheries=3, fillcolor="#F070D1"] ;
Sum_ishprop_hfiber_inl [label="ishprop_hfiber_inl", URL=<Sum.html#ishprop_hfiber_inl>, peripheries=3, fillcolor="#F070D1"] ;
Sum_equiv_path_sum [label="equiv_path_sum", URL=<Sum.html#equiv_path_sum>, fillcolor="#F070D1"] ;
Sum_isequiv_path_sum [label="isequiv_path_sum", URL=<Sum.html#isequiv_path_sum>, fillcolor="#F070D1"] ;
Sum_eissect_path_sum [label="eissect_path_sum", URL=<Sum.html#eissect_path_sum>, fillcolor="#F070D1"] ;
Sum_eisretr_path_sum [label="eisretr_path_sum", URL=<Sum.html#eisretr_path_sum>, fillcolor="#F070D1"] ;
Sum_path_sum_inr [label="path_sum_inr", URL=<Sum.html#path_sum_inr>, fillcolor="#F070D1"] ;
Sum_path_sum_inl [label="path_sum_inl", URL=<Sum.html#path_sum_inl>, fillcolor="#F070D1"] ;
Sum_inr_ne_inl [label="inr_ne_inl", URL=<Sum.html#inr_ne_inl>, fillcolor="#F070D1"] ;
Sum_inl_ne_inr [label="inl_ne_inr", URL=<Sum.html#inl_ne_inr>, fillcolor="#F070D1"] ;
Sum_path_sum_inv [label="path_sum_inv", URL=<Sum.html#path_sum_inv>, fillcolor="#F070D1"] ;
Sum_path_sum [label="path_sum", URL=<Sum.html#path_sum>, fillcolor="#F070D1"] ;
Sum_code_sum [label="code_sum", URL=<Sum.html#code_sum>, fillcolor="#F070D1"] ;
Sum_eta_sum [label="eta_sum", URL=<Sum.html#eta_sum>, peripheries=3, fillcolor="#F070D1"] ;
Sum_sum_rec [label="sum_rec", URL=<Sum.html#sum_rec>, peripheries=3, fillcolor="#F070D1"] ;
Sum_sum_ind [label="sum_ind", URL=<Sum.html#sum_ind>, fillcolor="#F070D1"] ;
Sigma_istruncmap_from_functor_sigma [label="istruncmap_from_functor_sigma", URL=<Sigma.html#istruncmap_from_functor_sigma>, fillcolor="#F070D1"] ;
Sigma_hfiber_functor_sigma_idmap [label="hfiber_functor_sigma_idmap", URL=<Sigma.html#hfiber_functor_sigma_idmap>, fillcolor="#F070D1"] ;
Sigma_istruncmap_functor_sigma [label="istruncmap_functor_sigma", URL=<Sigma.html#istruncmap_functor_sigma>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_hfiber_functor_sigma [label="hfiber_functor_sigma", URL=<Sigma.html#hfiber_functor_sigma>, fillcolor="#F070D1"] ;
Sigma_pr1_path_path_sigma_hprop [label="pr1_path_path_sigma_hprop", URL=<Sigma.html#pr1_path_path_sigma_hprop>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_ap_pr1_path_sigma_hprop [label="ap_pr1_path_sigma_hprop", URL=<Sigma.html#ap_pr1_path_sigma_hprop>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_path_sigma_hprop_pr1_path [label="path_sigma_hprop_pr1_path", URL=<Sigma.html#path_sigma_hprop_pr1_path>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_path_sigma_hprop_ap_pr1 [label="path_sigma_hprop_ap_pr1", URL=<Sigma.html#path_sigma_hprop_ap_pr1>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_path_sigma_hprop_pp [label="path_sigma_hprop_pp", URL=<Sigma.html#path_sigma_hprop_pp>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_path_sigma_hprop_V [label="path_sigma_hprop_V", URL=<Sigma.html#path_sigma_hprop_V>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_path_sigma_hprop_1 [label="path_sigma_hprop_1", URL=<Sigma.html#path_sigma_hprop_1>, fillcolor="#F070D1"] ;
Sigma_isequiv_ap_pr1_hprop [label="isequiv_ap_pr1_hprop", URL=<Sigma.html#isequiv_ap_pr1_hprop>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_isequiv_pr1_path_hprop [label="isequiv_pr1_path_hprop", URL=<Sigma.html#isequiv_pr1_path_hprop>, fillcolor="#F070D1"] ;
Sigma_equiv_path_sigma_hprop [label="equiv_path_sigma_hprop", URL=<Sigma.html#equiv_path_sigma_hprop>, fillcolor="#F070D1"] ;
Sigma_isequiv_path_sigma_hprop [label="isequiv_path_sigma_hprop", URL=<Sigma.html#isequiv_path_sigma_hprop>, fillcolor="#F070D1"] ;
Sigma_path_sigma_hprop [label="path_sigma_hprop", URL=<Sigma.html#path_sigma_hprop>, fillcolor="#F070D1"] ;
Sigma_ishprop_sigma_disjoint [label="ishprop_sigma_disjoint", URL=<Sigma.html#ishprop_sigma_disjoint>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_istrunc_sigma [label="istrunc_sigma", URL=<Sigma.html#istrunc_sigma>, fillcolor="#F070D1"] ;
Sigma_equiv_sig_coind [label="equiv_sig_coind", URL=<Sigma.html#equiv_sig_coind>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_isequiv_sig_coind [label="isequiv_sig_coind", URL=<Sigma.html#isequiv_sig_coind>, fillcolor="#F070D1"] ;
Sigma_sig_coind [label="sig_coind", URL=<Sigma.html#sig_coind>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_sig_coind_uncurried [label="sig_coind_uncurried", URL=<Sigma.html#sig_coind_uncurried>, fillcolor="#F070D1"] ;
Sigma_equiv_sig_ind_ [label="equiv_sig_ind'", URL=<Sigma.html#equiv_sig_ind'>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_equiv_sig_ind [label="equiv_sig_ind", URL=<Sigma.html#equiv_sig_ind>, fillcolor="#F070D1"] ;
Sigma_isequiv_sig_ind [label="isequiv_sig_ind", URL=<Sigma.html#isequiv_sig_ind>, fillcolor="#F070D1"] ;
Sigma_equiv_sigma_symm0 [label="equiv_sigma_symm0", URL=<Sigma.html#equiv_sigma_symm0>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_equiv_sigma_symm_ [label="equiv_sigma_symm'", URL=<Sigma.html#equiv_sigma_symm'>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_equiv_sigma_symm [label="equiv_sigma_symm", URL=<Sigma.html#equiv_sigma_symm>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_equiv_sigma_prod_prod [label="equiv_sigma_prod_prod", URL=<Sigma.html#equiv_sigma_prod_prod>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_equiv_sigma_prod1 [label="equiv_sigma_prod1", URL=<Sigma.html#equiv_sigma_prod1>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_equiv_sigma_prod0 [label="equiv_sigma_prod0", URL=<Sigma.html#equiv_sigma_prod0>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_equiv_sigma_prod_ [label="equiv_sigma_prod'", URL=<Sigma.html#equiv_sigma_prod'>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_equiv_sigma_prod [label="equiv_sigma_prod", URL=<Sigma.html#equiv_sigma_prod>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_equiv_sigma_assoc_ [label="equiv_sigma_assoc'", URL=<Sigma.html#equiv_sigma_assoc'>, fillcolor="#F070D1"] ;
Sigma_equiv_sigma_assoc [label="equiv_sigma_assoc", URL=<Sigma.html#equiv_sigma_assoc>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_equiv_contr_sigma [label="equiv_contr_sigma", URL=<Sigma.html#equiv_contr_sigma>, fillcolor="#F070D1"] ;
Sigma_equiv_sigma_contr [label="equiv_sigma_contr", URL=<Sigma.html#equiv_sigma_contr>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_isequiv_pr1_contr [label="isequiv_pr1_contr", URL=<Sigma.html#isequiv_pr1_contr>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_iff_functor_sigma [label="iff_functor_sigma", URL=<Sigma.html#iff_functor_sigma>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_equiv_functor_sigma_pb [label="equiv_functor_sigma_pb", URL=<Sigma.html#equiv_functor_sigma_pb>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_equiv_functor_sigma_id [label="equiv_functor_sigma_id", URL=<Sigma.html#equiv_functor_sigma_id>, fillcolor="#F070D1"] ;
Sigma_equiv_functor_sigma_ [label="equiv_functor_sigma'", URL=<Sigma.html#equiv_functor_sigma'>, fillcolor="#F070D1"] ;
Sigma_equiv_functor_sigma [label="equiv_functor_sigma", URL=<Sigma.html#equiv_functor_sigma>, fillcolor="#F070D1"] ;
Sigma_isequiv_functor_sigma [label="isequiv_functor_sigma", URL=<Sigma.html#isequiv_functor_sigma>, fillcolor="#F070D1"] ;
Sigma_ap_functor_sigma [label="ap_functor_sigma", URL=<Sigma.html#ap_functor_sigma>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_functor_sigma [label="functor_sigma", URL=<Sigma.html#functor_sigma>, fillcolor="#F070D1"] ;
Sigma_transport_sigma__ [label="transport_sigma_'", URL=<Sigma.html#transport_sigma_'>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_transport_sigma_ [label="transport_sigma'", URL=<Sigma.html#transport_sigma'>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_transport_sigma [label="transport_sigma", URL=<Sigma.html#transport_sigma>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_path_path_sigma [label="path_path_sigma", URL=<Sigma.html#path_path_sigma>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_path_path_sigma_uncurried [label="path_path_sigma_uncurried", URL=<Sigma.html#path_path_sigma_uncurried>, fillcolor="#F070D1"] ;
Sigma_ap_sig_rec_path_sigma [label="ap_sig_rec_path_sigma", URL=<Sigma.html#ap_sig_rec_path_sigma>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_ap_path_sigma_1p [label="ap_path_sigma_1p", URL=<Sigma.html#ap_path_sigma_1p>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_ap_path_sigma [label="ap_path_sigma", URL=<Sigma.html#ap_path_sigma>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_transportDD_is_transport [label="transportDD_is_transport", URL=<Sigma.html#transportDD_is_transport>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_transportD_is_transport [label="transportD_is_transport", URL=<Sigma.html#transportD_is_transport>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_ap_exist [label="ap_exist", URL=<Sigma.html#ap_exist>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_pr1_path_V [label="pr1_path_V", URL=<Sigma.html#pr1_path_V>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_pr1_path_pp [label="pr1_path_pp", URL=<Sigma.html#pr1_path_pp>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_pr1_path_1 [label="pr1_path_1", URL=<Sigma.html#pr1_path_1>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_path_sigma_p1_1p_ [label="path_sigma_p1_1p'", URL=<Sigma.html#path_sigma_p1_1p'>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_path_sigma_pp_pp_ [label="path_sigma_pp_pp'", URL=<Sigma.html#path_sigma_pp_pp'>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_path_sigma_pp_pp [label="path_sigma_pp_pp", URL=<Sigma.html#path_sigma_pp_pp>, fillcolor="#F070D1"] ;
Sigma_equiv_path_sigma_contra [label="equiv_path_sigma_contra", URL=<Sigma.html#equiv_path_sigma_contra>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_isequiv_path_sigma_contra [label="isequiv_path_sigma_contra", URL=<Sigma.html#isequiv_path_sigma_contra>, fillcolor="#F070D1"] ;
Sigma_equiv_path_sigma [label="equiv_path_sigma", URL=<Sigma.html#equiv_path_sigma>, fillcolor="#F070D1"] ;
Sigma_isequiv_path_sigma [label="isequiv_path_sigma", URL=<Sigma.html#isequiv_path_sigma>, fillcolor="#F070D1"] ;
Sigma_transport_pr1_path_sigma [label="transport_pr1_path_sigma", URL=<Sigma.html#transport_pr1_path_sigma>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_eta_path_sigma [label="eta_path_sigma", URL=<Sigma.html#eta_path_sigma>, fillcolor="#F070D1"] ;
Sigma_pr2_path_sigma [label="pr2_path_sigma", URL=<Sigma.html#pr2_path_sigma>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_ap_pr1_path_sigma [label="ap_pr1_path_sigma", URL=<Sigma.html#ap_pr1_path_sigma>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_pr1_path_sigma [label="pr1_path_sigma", URL=<Sigma.html#pr1_path_sigma>, fillcolor="#F070D1"] ;
Sigma_transport_pr1_path_sigma_uncurried [label="transport_pr1_path_sigma_uncurried", URL=<Sigma.html#transport_pr1_path_sigma_uncurried>, fillcolor="#F070D1"] ;
Sigma_eta_path_sigma_uncurried [label="eta_path_sigma_uncurried", URL=<Sigma.html#eta_path_sigma_uncurried>, fillcolor="#F070D1"] ;
Sigma_pr2_path_sigma_uncurried [label="pr2_path_sigma_uncurried", URL=<Sigma.html#pr2_path_sigma_uncurried>, fillcolor="#F070D1"] ;
Sigma_pr1_path_sigma_uncurried [label="pr1_path_sigma_uncurried", URL=<Sigma.html#pr1_path_sigma_uncurried>, fillcolor="#F070D1"] ;
Sigma_pr2_path [label="pr2_path", URL=<Sigma.html#pr2_path>, fillcolor="#F070D1"] ;
Sigma_pr1_path [label="pr1_path", URL=<Sigma.html#pr1_path>, fillcolor="#F070D1"] ;
Sigma_path_sigma_ [label="path_sigma'", URL=<Sigma.html#path_sigma'>, fillcolor="#F070D1"] ;
Sigma_dpath_forall_ [label="dpath_forall'", URL=<Sigma.html#dpath_forall'>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_path_sigma_uncurried_contra [label="path_sigma_uncurried_contra", URL=<Sigma.html#path_sigma_uncurried_contra>, fillcolor="#F070D1"] ;
Sigma_path_sigma [label="path_sigma", URL=<Sigma.html#path_sigma>, fillcolor="#F070D1"] ;
Sigma_path_sigma_uncurried [label="path_sigma_uncurried", URL=<Sigma.html#path_sigma_uncurried>, fillcolor="#F070D1"] ;
Sigma_eta3_sigma [label="eta3_sigma", URL=<Sigma.html#eta3_sigma>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_eta2_sigma [label="eta2_sigma", URL=<Sigma.html#eta2_sigma>, peripheries=3, fillcolor="#F070D1"] ;
Sigma_eta_sigma [label="eta_sigma", URL=<Sigma.html#eta_sigma>, peripheries=3, fillcolor="#F070D1"] ;
Prod_istruncmap_functor_prod [label="istruncmap_functor_prod", URL=<Prod.html#istruncmap_functor_prod>, peripheries=3, fillcolor="#F070D1"] ;
Prod_hfiber_functor_prod [label="hfiber_functor_prod", URL=<Prod.html#hfiber_functor_prod>, fillcolor="#F070D1"] ;
Prod_ap_uncurry [label="ap_uncurry", URL=<Prod.html#ap_uncurry>, peripheries=3, fillcolor="#F070D1"] ;
Prod_decidable_prod [label="decidable_prod", URL=<Prod.html#decidable_prod>, peripheries=3, fillcolor="#F070D1"] ;
Prod_contr_prod [label="contr_prod", URL=<Prod.html#contr_prod>, peripheries=3, fillcolor="#F070D1"] ;
Prod_istrunc_prod [label="istrunc_prod", URL=<Prod.html#istrunc_prod>, fillcolor="#F070D1"] ;
Prod_equiv_prod_coind [label="equiv_prod_coind", URL=<Prod.html#equiv_prod_coind>, peripheries=3, fillcolor="#F070D1"] ;
Prod_isequiv_prod_coind [label="isequiv_prod_coind", URL=<Prod.html#isequiv_prod_coind>, fillcolor="#F070D1"] ;
Prod_prod_coind [label="prod_coind", URL=<Prod.html#prod_coind>, peripheries=3, fillcolor="#F070D1"] ;
Prod_prod_coind_uncurried [label="prod_coind_uncurried", URL=<Prod.html#prod_coind_uncurried>, fillcolor="#F070D1"] ;
Prod_equiv_uncurry [label="equiv_uncurry", URL=<Prod.html#equiv_uncurry>, peripheries=3, fillcolor="#F070D1"] ;
Prod_equiv_prod_ind [label="equiv_prod_ind", URL=<Prod.html#equiv_prod_ind>, fillcolor="#F070D1"] ;
Prod_isequiv_prod_ind [label="isequiv_prod_ind", URL=<Prod.html#isequiv_prod_ind>, fillcolor="#F070D1"] ;
Prod_prod_unit_l [label="prod_unit_l", URL=<Prod.html#prod_unit_l>, peripheries=3, fillcolor="#F070D1"] ;
Prod_prod_unit_r [label="prod_unit_r", URL=<Prod.html#prod_unit_r>, peripheries=3, fillcolor="#F070D1"] ;
Prod_prod_empty_l [label="prod_empty_l", URL=<Prod.html#prod_empty_l>, peripheries=3, fillcolor="#F070D1"] ;
Prod_prod_empty_r [label="prod_empty_r", URL=<Prod.html#prod_empty_r>, peripheries=3, fillcolor="#F070D1"] ;
Prod_equiv_prod_assoc [label="equiv_prod_assoc", URL=<Prod.html#equiv_prod_assoc>, peripheries=3, fillcolor="#F070D1"] ;
Prod_equiv_prod_symm [label="equiv_prod_symm", URL=<Prod.html#equiv_prod_symm>, fillcolor="#F070D1"] ;
Prod_iff_functor_prod [label="iff_functor_prod", URL=<Prod.html#iff_functor_prod>, peripheries=3, fillcolor="#F070D1"] ;
Prod_equiv_functor_prod_r [label="equiv_functor_prod_r", URL=<Prod.html#equiv_functor_prod_r>, fillcolor="#F070D1"] ;
Prod_equiv_functor_prod_l [label="equiv_functor_prod_l", URL=<Prod.html#equiv_functor_prod_l>, fillcolor="#F070D1"] ;
Prod_equiv_functor_prod_ [label="equiv_functor_prod'", URL=<Prod.html#equiv_functor_prod'>, fillcolor="#F070D1"] ;
Prod_equiv_functor_prod [label="equiv_functor_prod", URL=<Prod.html#equiv_functor_prod>, peripheries=3, fillcolor="#F070D1"] ;
Prod_isequiv_functor_prod [label="isequiv_functor_prod", URL=<Prod.html#isequiv_functor_prod>, fillcolor="#F070D1"] ;
Prod_ap_functor_prod [label="ap_functor_prod", URL=<Prod.html#ap_functor_prod>, fillcolor="#F070D1"] ;
Prod_functor_prod [label="functor_prod", URL=<Prod.html#functor_prod>, fillcolor="#F070D1"] ;
Prod_transport_prod [label="transport_prod", URL=<Prod.html#transport_prod>, peripheries=3, fillcolor="#F070D1"] ;
Prod_path_prod_V [label="path_prod_V", URL=<Prod.html#path_prod_V>, peripheries=3, fillcolor="#F070D1"] ;
Prod_path_prod_pp_p [label="path_prod_pp_p", URL=<Prod.html#path_prod_pp_p>, peripheries=3, fillcolor="#F070D1"] ;
Prod_path_prod_pp [label="path_prod_pp", URL=<Prod.html#path_prod_pp>, fillcolor="#F070D1"] ;
Prod_equiv_path_prod [label="equiv_path_prod", URL=<Prod.html#equiv_path_prod>, fillcolor="#F070D1"] ;
Prod_isequiv_path_prod [label="isequiv_path_prod", URL=<Prod.html#isequiv_path_prod>, fillcolor="#F070D1"] ;
Prod_transport_path_prod_ [label="transport_path_prod'", URL=<Prod.html#transport_path_prod'>, peripheries=3, fillcolor="#F070D1"] ;
Prod_transport_path_prod [label="transport_path_prod", URL=<Prod.html#transport_path_prod>, fillcolor="#F070D1"] ;
Prod_transport_path_prod_uncurried [label="transport_path_prod_uncurried", URL=<Prod.html#transport_path_prod_uncurried>, fillcolor="#F070D1"] ;
Prod_ap_path_prod [label="ap_path_prod", URL=<Prod.html#ap_path_prod>, peripheries=3, fillcolor="#F070D1"] ;
Prod_eta_path_prod [label="eta_path_prod", URL=<Prod.html#eta_path_prod>, fillcolor="#F070D1"] ;
Prod_ap_snd_path_prod_ [label="ap_snd_path_prod'", URL=<Prod.html#ap_snd_path_prod'>, peripheries=3, fillcolor="#F070D1"] ;
Prod_ap_snd_path_prod [label="ap_snd_path_prod", URL=<Prod.html#ap_snd_path_prod>, fillcolor="#F070D1"] ;
Prod_ap_fst_path_prod_ [label="ap_fst_path_prod'", URL=<Prod.html#ap_fst_path_prod'>, peripheries=3, fillcolor="#F070D1"] ;
Prod_ap_fst_path_prod [label="ap_fst_path_prod", URL=<Prod.html#ap_fst_path_prod>, fillcolor="#F070D1"] ;
Prod_path_prod_ [label="path_prod'", URL=<Prod.html#path_prod'>, fillcolor="#F070D1"] ;
Prod_path_prod [label="path_prod", URL=<Prod.html#path_prod>, fillcolor="#F070D1"] ;
Prod_path_prod_uncurried [label="path_prod_uncurried", URL=<Prod.html#path_prod_uncurried>, fillcolor="#F070D1"] ;
Prod_eta_prod [label="eta_prod", URL=<Prod.html#eta_prod>, peripheries=3, fillcolor="#F070D1"] ;
Prod_pack_prod [label="pack_prod", URL=<Prod.html#pack_prod>, peripheries=3, fillcolor="#F070D1"] ;
Prod_unpack_prod [label="unpack_prod", URL=<Prod.html#unpack_prod>, peripheries=3, fillcolor="#F070D1"] ;
Prod_prod_ind [label="prod_ind", URL=<Prod.html#prod_ind>, fillcolor="#F070D1"] ;
Paths_equiv_paths_ind_r [label="equiv_paths_ind_r", URL=<Paths.html#equiv_paths_ind_r>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_paths_ind_r [label="isequiv_paths_ind_r", URL=<Paths.html#isequiv_paths_ind_r>, fillcolor="#F070D1"] ;
Paths_equiv_paths_ind [label="equiv_paths_ind", URL=<Paths.html#equiv_paths_ind>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_paths_ind [label="isequiv_paths_ind", URL=<Paths.html#isequiv_paths_ind>, fillcolor="#F070D1"] ;
Paths_dpath_paths2 [label="dpath_paths2", URL=<Paths.html#dpath_paths2>, peripheries=3, fillcolor="#F070D1"] ;
Paths_dpath_path_lFFr [label="dpath_path_lFFr", URL=<Paths.html#dpath_path_lFFr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_dpath_path_FFlr [label="dpath_path_FFlr", URL=<Paths.html#dpath_path_FFlr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_dpath_path_FlFr [label="dpath_path_FlFr", URL=<Paths.html#dpath_path_FlFr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_dpath_path_Fr [label="dpath_path_Fr", URL=<Paths.html#dpath_path_Fr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_dpath_path_Fl [label="dpath_path_Fl", URL=<Paths.html#dpath_path_Fl>, peripheries=3, fillcolor="#F070D1"] ;
Paths_dpath_path_lr [label="dpath_path_lr", URL=<Paths.html#dpath_path_lr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_dpath_path_r [label="dpath_path_r", URL=<Paths.html#dpath_path_r>, peripheries=3, fillcolor="#F070D1"] ;
Paths_dpath_path_l [label="dpath_path_l", URL=<Paths.html#dpath_path_l>, peripheries=3, fillcolor="#F070D1"] ;
Paths_equiv_moveL_equiv_V [label="equiv_moveL_equiv_V", URL=<Paths.html#equiv_moveL_equiv_V>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveL_equiv_V [label="isequiv_moveL_equiv_V", URL=<Paths.html#isequiv_moveL_equiv_V>, fillcolor="#F070D1"] ;
Paths_equiv_moveL_equiv_M [label="equiv_moveL_equiv_M", URL=<Paths.html#equiv_moveL_equiv_M>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveL_equiv_M [label="isequiv_moveL_equiv_M", URL=<Paths.html#isequiv_moveL_equiv_M>, fillcolor="#F070D1"] ;
Paths_equiv_moveR_equiv_V [label="equiv_moveR_equiv_V", URL=<Paths.html#equiv_moveR_equiv_V>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveR_equiv_V [label="isequiv_moveR_equiv_V", URL=<Paths.html#isequiv_moveR_equiv_V>, fillcolor="#F070D1"] ;
Paths_equiv_moveR_equiv_M [label="equiv_moveR_equiv_M", URL=<Paths.html#equiv_moveR_equiv_M>, fillcolor="#F070D1"] ;
Paths_isequiv_moveR_equiv_M [label="isequiv_moveR_equiv_M", URL=<Paths.html#isequiv_moveR_equiv_M>, fillcolor="#F070D1"] ;
Paths_equiv_moveL_transport_p [label="equiv_moveL_transport_p", URL=<Paths.html#equiv_moveL_transport_p>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveL_transport_p [label="isequiv_moveL_transport_p", URL=<Paths.html#isequiv_moveL_transport_p>, fillcolor="#F070D1"] ;
Paths_equiv_moveL_transport_V [label="equiv_moveL_transport_V", URL=<Paths.html#equiv_moveL_transport_V>, fillcolor="#F070D1"] ;
Paths_isequiv_moveL_transport_V [label="isequiv_moveL_transport_V", URL=<Paths.html#isequiv_moveL_transport_V>, fillcolor="#F070D1"] ;
Paths_equiv_moveR_transport_V [label="equiv_moveR_transport_V", URL=<Paths.html#equiv_moveR_transport_V>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveR_transport_V [label="isequiv_moveR_transport_V", URL=<Paths.html#isequiv_moveR_transport_V>, fillcolor="#F070D1"] ;
Paths_moveL_moveR_transport_V [label="moveL_moveR_transport_V", URL=<Paths.html#moveL_moveR_transport_V>, fillcolor="#F070D1"] ;
Paths_moveR_moveL_transport_p [label="moveR_moveL_transport_p", URL=<Paths.html#moveR_moveL_transport_p>, fillcolor="#F070D1"] ;
Paths_equiv_moveR_transport_p [label="equiv_moveR_transport_p", URL=<Paths.html#equiv_moveR_transport_p>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveR_transport_p [label="isequiv_moveR_transport_p", URL=<Paths.html#isequiv_moveR_transport_p>, fillcolor="#F070D1"] ;
Paths_moveL_moveR_transport_p [label="moveL_moveR_transport_p", URL=<Paths.html#moveL_moveR_transport_p>, fillcolor="#F070D1"] ;
Paths_moveR_moveL_transport_V [label="moveR_moveL_transport_V", URL=<Paths.html#moveR_moveL_transport_V>, fillcolor="#F070D1"] ;
Paths_isequiv_moveR_V1 [label="isequiv_moveR_V1", URL=<Paths.html#isequiv_moveR_V1>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveR_1V [label="isequiv_moveR_1V", URL=<Paths.html#isequiv_moveR_1V>, peripheries=3, fillcolor="#F070D1"] ;
Paths_equiv_moveR_1M [label="equiv_moveR_1M", URL=<Paths.html#equiv_moveR_1M>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveR_1M [label="isequiv_moveR_1M", URL=<Paths.html#isequiv_moveR_1M>, fillcolor="#F070D1"] ;
Paths_isequiv_moveR_M1 [label="isequiv_moveR_M1", URL=<Paths.html#isequiv_moveR_M1>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveL_V1 [label="isequiv_moveL_V1", URL=<Paths.html#isequiv_moveL_V1>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveL_1V [label="isequiv_moveL_1V", URL=<Paths.html#isequiv_moveL_1V>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveL_M1 [label="isequiv_moveL_M1", URL=<Paths.html#isequiv_moveL_M1>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveL_1M [label="isequiv_moveL_1M", URL=<Paths.html#isequiv_moveL_1M>, peripheries=3, fillcolor="#F070D1"] ;
Paths_equiv_moveL_pV [label="equiv_moveL_pV", URL=<Paths.html#equiv_moveL_pV>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveL_pV [label="isequiv_moveL_pV", URL=<Paths.html#isequiv_moveL_pV>, fillcolor="#F070D1"] ;
Paths_equiv_moveL_Vp [label="equiv_moveL_Vp", URL=<Paths.html#equiv_moveL_Vp>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveL_Vp [label="isequiv_moveL_Vp", URL=<Paths.html#isequiv_moveL_Vp>, fillcolor="#F070D1"] ;
Paths_equiv_moveL_pM [label="equiv_moveL_pM", URL=<Paths.html#equiv_moveL_pM>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveL_pM [label="isequiv_moveL_pM", URL=<Paths.html#isequiv_moveL_pM>, fillcolor="#F070D1"] ;
Paths_equiv_moveL_Mp [label="equiv_moveL_Mp", URL=<Paths.html#equiv_moveL_Mp>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveL_Mp [label="isequiv_moveL_Mp", URL=<Paths.html#isequiv_moveL_Mp>, fillcolor="#F070D1"] ;
Paths_equiv_moveR_pV [label="equiv_moveR_pV", URL=<Paths.html#equiv_moveR_pV>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveR_pV [label="isequiv_moveR_pV", URL=<Paths.html#isequiv_moveR_pV>, fillcolor="#F070D1"] ;
Paths_equiv_moveR_Vp [label="equiv_moveR_Vp", URL=<Paths.html#equiv_moveR_Vp>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveR_Vp [label="isequiv_moveR_Vp", URL=<Paths.html#isequiv_moveR_Vp>, fillcolor="#F070D1"] ;
Paths_equiv_moveR_pM [label="equiv_moveR_pM", URL=<Paths.html#equiv_moveR_pM>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveR_pM [label="isequiv_moveR_pM", URL=<Paths.html#isequiv_moveR_pM>, fillcolor="#F070D1"] ;
Paths_equiv_moveR_Mp [label="equiv_moveR_Mp", URL=<Paths.html#equiv_moveR_Mp>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_moveR_Mp [label="isequiv_moveR_Mp", URL=<Paths.html#isequiv_moveR_Mp>, fillcolor="#F070D1"] ;
Paths_isequiv_cancelR [label="isequiv_cancelR", URL=<Paths.html#isequiv_cancelR>, peripheries=3, fillcolor="#F070D1"] ;
Paths_equiv_cancelR [label="equiv_cancelR", URL=<Paths.html#equiv_cancelR>, fillcolor="#F070D1"] ;
Paths_equiv_whiskerR [label="equiv_whiskerR", URL=<Paths.html#equiv_whiskerR>, fillcolor="#F070D1"] ;
Paths_isequiv_whiskerR [label="isequiv_whiskerR", URL=<Paths.html#isequiv_whiskerR>, fillcolor="#F070D1"] ;
Paths_isequiv_cancelL [label="isequiv_cancelL", URL=<Paths.html#isequiv_cancelL>, peripheries=3, fillcolor="#F070D1"] ;
Paths_equiv_cancelL [label="equiv_cancelL", URL=<Paths.html#equiv_cancelL>, fillcolor="#F070D1"] ;
Paths_equiv_whiskerL [label="equiv_whiskerL", URL=<Paths.html#equiv_whiskerL>, fillcolor="#F070D1"] ;
Paths_isequiv_whiskerL [label="isequiv_whiskerL", URL=<Paths.html#isequiv_whiskerL>, fillcolor="#F070D1"] ;
Paths_equiv_1p_q1 [label="equiv_1p_q1", URL=<Paths.html#equiv_1p_q1>, peripheries=3, fillcolor="#F070D1"] ;
Paths_equiv_p1_1q [label="equiv_p1_1q", URL=<Paths.html#equiv_p1_1q>, fillcolor="#F070D1"] ;
Paths_equiv_concat_lr [label="equiv_concat_lr", URL=<Paths.html#equiv_concat_lr>, fillcolor="#F070D1"] ;
Paths_isequiv_concat_lr [label="isequiv_concat_lr", URL=<Paths.html#isequiv_concat_lr>, fillcolor="#F070D1"] ;
Paths_equiv_concat_r [label="equiv_concat_r", URL=<Paths.html#equiv_concat_r>, fillcolor="#F070D1"] ;
Paths_isequiv_concat_r [label="isequiv_concat_r", URL=<Paths.html#isequiv_concat_r>, fillcolor="#F070D1"] ;
Paths_equiv_concat_l [label="equiv_concat_l", URL=<Paths.html#equiv_concat_l>, fillcolor="#F070D1"] ;
Paths_isequiv_concat_l [label="isequiv_concat_l", URL=<Paths.html#isequiv_concat_l>, fillcolor="#F070D1"] ;
Paths_equiv_path_inverse [label="equiv_path_inverse", URL=<Paths.html#equiv_path_inverse>, peripheries=3, fillcolor="#F070D1"] ;
Paths_isequiv_path_inverse [label="isequiv_path_inverse", URL=<Paths.html#isequiv_path_inverse>, fillcolor="#F070D1"] ;
Paths_transport_paths2 [label="transport_paths2", URL=<Paths.html#transport_paths2>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport011_paths [label="transport011_paths", URL=<Paths.html#transport011_paths>, peripheries=3, fillcolor="#F070D1"] ;
Paths_moveR_Vp_p_inv [label="moveR_Vp_p_inv", URL=<Paths.html#moveR_Vp_p_inv>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_FFlFFr [label="transport_paths_FFlFFr", URL=<Paths.html#transport_paths_FFlFFr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_FFFlFr [label="transport_paths_FFFlFr", URL=<Paths.html#transport_paths_FFFlFr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_FFFr [label="transport_paths_FFFr", URL=<Paths.html#transport_paths_FFFr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_lFFFr [label="transport_paths_lFFFr", URL=<Paths.html#transport_paths_lFFFr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_FlFFr [label="transport_paths_FlFFr", URL=<Paths.html#transport_paths_FlFFr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_FFlFr [label="transport_paths_FFlFr", URL=<Paths.html#transport_paths_FFlFr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_FFFlr [label="transport_paths_FFFlr", URL=<Paths.html#transport_paths_FFFlr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_FFFl [label="transport_paths_FFFl", URL=<Paths.html#transport_paths_FFFl>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_FFr [label="transport_paths_FFr", URL=<Paths.html#transport_paths_FFr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_lFFr [label="transport_paths_lFFr", URL=<Paths.html#transport_paths_lFFr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_FlFr_D [label="transport_paths_FlFr_D", URL=<Paths.html#transport_paths_FlFr_D>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_FlFr [label="transport_paths_FlFr", URL=<Paths.html#transport_paths_FlFr>, fillcolor="#F070D1"] ;
Paths_transport_paths_FFlr [label="transport_paths_FFlr", URL=<Paths.html#transport_paths_FFlr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_FFl [label="transport_paths_FFl", URL=<Paths.html#transport_paths_FFl>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_Fr [label="transport_paths_Fr", URL=<Paths.html#transport_paths_Fr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_lFr [label="transport_paths_lFr", URL=<Paths.html#transport_paths_lFr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_Flr [label="transport_paths_Flr", URL=<Paths.html#transport_paths_Flr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_Fl [label="transport_paths_Fl", URL=<Paths.html#transport_paths_Fl>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_r [label="transport_paths_r", URL=<Paths.html#transport_paths_r>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_lr [label="transport_paths_lr", URL=<Paths.html#transport_paths_lr>, peripheries=3, fillcolor="#F070D1"] ;
Paths_transport_paths_l [label="transport_paths_l", URL=<Paths.html#transport_paths_l>, fillcolor="#F070D1"] ;
IWType_decidablepaths_iwtype [label="decidablepaths_iwtype", URL=<IWType.html#decidablepaths_iwtype>, peripheries=3, fillcolor="#F070D1"] ;
IWType_decide_eq [label="decide_eq", URL=<IWType.html#decide_eq>, fillcolor="#F070D1"] ;
IWType_inj_right_pair_on [label="inj_right_pair_on", URL=<IWType.html#inj_right_pair_on>, fillcolor="#F070D1"] ;
IWType_istrunc_iwtype [label="istrunc_iwtype", URL=<IWType.html#istrunc_iwtype>, peripheries=3, fillcolor="#F070D1"] ;
IWType_ishprop_iwtype [label="ishprop_iwtype", URL=<IWType.html#ishprop_iwtype>, fillcolor="#F070D1"] ;
IWType_equiv_path_hfiber_index [label="equiv_path_hfiber_index", URL=<IWType.html#equiv_path_hfiber_index>, fillcolor="#F070D1"] ;
IWType_hfiber_to_path_iw_to_hfiber [label="hfiber_to_path_iw_to_hfiber", URL=<IWType.html#hfiber_to_path_iw_to_hfiber>, fillcolor="#F070D1"] ;
IWType_path_iw_to_hfiber_to_path_iw [label="path_iw_to_hfiber_to_path_iw", URL=<IWType.html#path_iw_to_hfiber_to_path_iw>, fillcolor="#F070D1"] ;
IWType_hfiber_to_path_iw [label="hfiber_to_path_iw", URL=<IWType.html#hfiber_to_path_iw>, fillcolor="#F070D1"] ;
IWType_path_iw_to_hfiber [label="path_iw_to_hfiber", URL=<IWType.html#path_iw_to_hfiber>, fillcolor="#F070D1"] ;
IWType_hfiber_ind [label="hfiber_ind", URL=<IWType.html#hfiber_ind>, fillcolor="#F070D1"] ;
IWType_path_iw_to_hfiber_ind [label="path_iw_to_hfiber_ind", URL=<IWType.html#path_iw_to_hfiber_ind>, fillcolor="#F070D1"] ;
IWType_path_iw_to_hfiber_ind_ [label="path_iw_to_hfiber_ind'", URL=<IWType.html#path_iw_to_hfiber_ind'>, fillcolor="#F070D1"] ;
IWType_adjust_hfiber_idpath [label="adjust_hfiber_idpath", URL=<IWType.html#adjust_hfiber_idpath>, fillcolor="#F070D1"] ;
IWType_adjust_hfiber [label="adjust_hfiber", URL=<IWType.html#adjust_hfiber>, fillcolor="#F070D1"] ;
IWType_equiv_path_iwtype [label="equiv_path_iwtype", URL=<IWType.html#equiv_path_iwtype>, fillcolor="#F070D1"] ;
IWType_IWPath_ind_beta_iwpath_sup [label="IWPath_ind_beta_iwpath_sup", URL=<IWType.html#IWPath_ind_beta_iwpath_sup>, fillcolor="#F070D1"] ;
IWType_IWPath_ind [label="IWPath_ind", URL=<IWType.html#IWPath_ind>, fillcolor="#F070D1"] ;
IWType_IWPath_ind_refl [label="IWPath_ind_refl", URL=<IWType.html#IWPath_ind_refl>, fillcolor="#F070D1"] ;
IWType_iwpath_sup_refl [label="iwpath_sup_refl", URL=<IWType.html#iwpath_sup_refl>, peripheries=3, fillcolor="#F070D1"] ;
IWType_iwpath_sup [label="iwpath_sup", URL=<IWType.html#iwpath_sup>, fillcolor="#F070D1"] ;
IWType_equiv_wtype_iwtype [label="equiv_wtype_iwtype", URL=<IWType.html#equiv_wtype_iwtype>, peripheries=3, fillcolor="#F070D1"] ;
IWType_IW__ind_beta_iw_sup_ [label="IW'_ind_beta_iw_sup'", URL=<IWType.html#IW'_ind_beta_iw_sup'>, peripheries=3, fillcolor="#F070D1"] ;
IWType_IW__ind [label="IW'_ind", URL=<IWType.html#IW'_ind>, fillcolor="#F070D1"] ;
IWType_iw_sup_ [label="iw_sup'", URL=<IWType.html#iw_sup'>, fillcolor="#F070D1"] ;
IWType_IW_ [label="IW'", URL=<IWType.html#IW'>, fillcolor="#F070D1"] ;
IWType_IsIndexedBy [label="IsIndexedBy", URL=<IWType.html#IsIndexedBy>, fillcolor="#F070D1"] ;
IWType_pointwise_paths_ind [label="pointwise_paths_ind", URL=<IWType.html#pointwise_paths_ind>, peripheries=3, fillcolor="#F070D1"] ;
IWType_iw_to_hfiber_index [label="iw_to_hfiber_index", URL=<IWType.html#iw_to_hfiber_index>, fillcolor="#F070D1"] ;
IWType_iw_eta [label="iw_eta", URL=<IWType.html#iw_eta>, peripheries=3, fillcolor="#F070D1"] ;
IWType_path_index_iw_label [label="path_index_iw_label", URL=<IWType.html#path_index_iw_label>, fillcolor="#F070D1"] ;
IWType_iw_arity [label="iw_arity", URL=<IWType.html#iw_arity>, fillcolor="#F070D1"] ;
IWType_iw_label [label="iw_label", URL=<IWType.html#iw_label>, fillcolor="#F070D1"] ;
IWType_IW_sind [label="IW_sind", URL=<IWType.html#IW_sind>, peripheries=3, fillcolor="#F070D1"] ;
IWType_IW_rec [label="IW_rec", URL=<IWType.html#IW_rec>, peripheries=3, fillcolor="#F070D1"] ;
IWType_IW_ind [label="IW_ind", URL=<IWType.html#IW_ind>, peripheries=3, fillcolor="#7FFFD4"] ;
IWType_IW_rect [label="IW_rect", URL=<IWType.html#IW_rect>, fillcolor="#F070D1"] ;
IWType_iw_sup [label="iw_sup", URL=<IWType.html#iw_sup>, fillcolor="#7FAAFF"] ;
IWType_IW [label="IW", URL=<IWType.html#IW>, fillcolor="#E2CDFA"] ;
Forall_equiv_flip [label="equiv_flip", URL=<Forall.html#equiv_flip>, peripheries=3, fillcolor="#F070D1"] ;
Forall_isequiv_flip [label="isequiv_flip", URL=<Forall.html#isequiv_flip>, fillcolor="#F070D1"] ;
Forall_equiv_contr_forall [label="equiv_contr_forall", URL=<Forall.html#equiv_contr_forall>, peripheries=3, fillcolor="#F070D1"] ;
Forall_isequiv_path_forall11 [label="isequiv_path_forall11", URL=<Forall.html#isequiv_path_forall11>, peripheries=3, fillcolor="#F070D1"] ;
Forall_path_forall11 [label="path_forall11", URL=<Forall.html#path_forall11>, fillcolor="#F070D1"] ;
Forall_equiv_path_forall11 [label="equiv_path_forall11", URL=<Forall.html#equiv_path_forall11>, fillcolor="#F070D1"] ;
Forall_iff_functor_forall [label="iff_functor_forall", URL=<Forall.html#iff_functor_forall>, peripheries=3, fillcolor="#F070D1"] ;
Forall_equiv_functor_forall_covariant_compose [label="equiv_functor_forall_covariant_compose", URL=<Forall.html#equiv_functor_forall_covariant_compose>, peripheries=3, fillcolor="#F070D1"] ;
Forall_equiv_functor_forall_covariant [label="equiv_functor_forall_covariant", URL=<Forall.html#equiv_functor_forall_covariant>, fillcolor="#F070D1"] ;
Forall_equiv_functor_forall_pb [label="equiv_functor_forall_pb", URL=<Forall.html#equiv_functor_forall_pb>, peripheries=3, fillcolor="#F070D1"] ;
Forall_equiv_functor_forall_id [label="equiv_functor_forall_id", URL=<Forall.html#equiv_functor_forall_id>, fillcolor="#F070D1"] ;
Forall_equiv_functor_forall_ [label="equiv_functor_forall'", URL=<Forall.html#equiv_functor_forall'>, fillcolor="#F070D1"] ;
Forall_equiv_functor_forall [label="equiv_functor_forall", URL=<Forall.html#equiv_functor_forall>, fillcolor="#F070D1"] ;
Forall_isequiv_functor_forall [label="isequiv_functor_forall", URL=<Forall.html#isequiv_functor_forall>, fillcolor="#F070D1"] ;
Forall_functor_forall_equiv_pb_beta [label="functor_forall_equiv_pb_beta", URL=<Forall.html#functor_forall_equiv_pb_beta>, peripheries=3, fillcolor="#F070D1"] ;
Forall_functor_forall_equiv_pb [label="functor_forall_equiv_pb", URL=<Forall.html#functor_forall_equiv_pb>, fillcolor="#F070D1"] ;
Forall_functor_forall_equiv [label="functor_forall_equiv", URL=<Forall.html#functor_forall_equiv>, fillcolor="#F070D1"] ;
Forall_functor_forall_pb [label="functor_forall_pb", URL=<Forall.html#functor_forall_pb>, peripheries=3, fillcolor="#F070D1"] ;
Forall_functor_forall_id [label="functor_forall_id", URL=<Forall.html#functor_forall_id>, peripheries=3, fillcolor="#F070D1"] ;
Forall_functor_forall_compose [label="functor_forall_compose", URL=<Forall.html#functor_forall_compose>, fillcolor="#F070D1"] ;
Forall_ap_functor_forall [label="ap_functor_forall", URL=<Forall.html#ap_functor_forall>, fillcolor="#F070D1"] ;
Forall_functor_forall [label="functor_forall", URL=<Forall.html#functor_forall>, fillcolor="#F070D1"] ;
Forall_dpath_forall_constant [label="dpath_forall_constant", URL=<Forall.html#dpath_forall_constant>, peripheries=3, fillcolor="#F070D1"] ;
Forall_dpath_forall [label="dpath_forall", URL=<Forall.html#dpath_forall>, peripheries=3, fillcolor="#F070D1"] ;
Forall_ap_precomposeD [label="ap_precomposeD", URL=<Forall.html#ap_precomposeD>, peripheries=3, fillcolor="#F070D1"] ;
Forall_ap_lambdaD [label="ap_lambdaD", URL=<Forall.html#ap_lambdaD>, fillcolor="#F070D1"] ;
Forall_ap_apply_lD2 [label="ap_apply_lD2", URL=<Forall.html#ap_apply_lD2>, peripheries=3, fillcolor="#F070D1"] ;
Forall_ap_apply_lD [label="ap_apply_lD", URL=<Forall.html#ap_apply_lD>, peripheries=3, fillcolor="#F070D1"] ;
Forall_apD_transport_forall_constant [label="apD_transport_forall_constant", URL=<Forall.html#apD_transport_forall_constant>, peripheries=3, fillcolor="#F070D1"] ;
Forall_transport_forall_constant [label="transport_forall_constant", URL=<Forall.html#transport_forall_constant>, fillcolor="#F070D1"] ;
Forall_transport_forall [label="transport_forall", URL=<Forall.html#transport_forall>, peripheries=3, fillcolor="#F070D1"] ;
  Forall_path_forall_pp -> Forall_eta_path_forall [] ;
  WType_istrunc_wtype -> WType_equiv_path_wtype_ [] ;
  WType_istrunc_wtype -> WType_W_rect [] ;
  WType_istrunc_wtype -> Sigma_istrunc_sigma [] ;
  WType_istrunc_wtype -> Forall_equiv_path_forall [] ;
  WType_equiv_path_wtype_ -> WType_equiv_path_wtype [] ;
  WType_equiv_path_wtype_ -> Sigma_equiv_functor_sigma_id [] ;
  WType_equiv_path_wtype_ -> Sigma_equiv_path_sigma [] ;
  Forall_equiv_path_forall -> Forall_isequiv_path_forall [] ;
  WType_equiv_path_wtype -> WType_issig_W [] ;
  WType_equiv_path_wtype -> WType_w_arg [] ;
  WType_issig_W -> WType_w_sup [] ;
  WType_issig_W -> WType_W [] ;
  WType_w_arg -> WType_w_label [] ;
  Forall_path_forall_1 -> Forall_eta_path_forall [] ;
  WType_w_label -> WType_W [] ;
  WType_W_sind -> WType_w_sup [] ;
  WType_W_sind -> WType_W [] ;
  Equiv_transport_equiv__ -> Equiv_path_equiv [] ;
  WType_W_rec -> WType_W_rect [] ;
  WType_W_ind -> WType_w_sup [] ;
  WType_W_ind -> WType_W [] ;
  WType_W_rect -> WType_w_sup [] ;
  WType_W_rect -> WType_W [] ;
  Equiv_equiv_equiv_inverse -> Equiv_isequiv_equiv_inverse [] ;
  Equiv_isequiv_equiv_inverse -> Equiv_path_equiv [] ;
  Universe_not_hset_Type -> Universe_transport_path_universe [] ;
  Universe_not_hset_Type -> Bool_equiv_negb [] ;
  Universe_not_hset_Type -> Bool_true_ne_false [] ;
  Equiv_equiv_functor_postcompose_equiv -> Equiv_equiv_functor_equiv [] ;
  Universe_istrunc_paths_Type -> Universe_path_universe_uncurried [] ;
  Universe_istrunc_paths_Type -> Universe_Univalence_implies_Funext [] ;
  Universe_istrunc_paths_Type -> Equiv_istrunc_equiv [] ;
  Equiv_equiv_functor_precompose_equiv -> Equiv_equiv_functor_equiv [] ;
  Universe_homotopic_trequiv -> Universe_equiv_induction [] ;
  Equiv_equiv_functor_equiv -> Equiv_isequiv_functor_equiv [] ;
  Equiv_isequiv_functor_equiv -> Equiv_functor_equiv [] ;
  Equiv_isequiv_functor_equiv -> Equiv_path_equiv [] ;
  Equiv_isequiv_functor_equiv -> Arrow_path_arrow [] ;
  Universe_contr_basedequiv_ -> Universe_equiv_induction_inv [] ;
  Universe_contr_basedequiv -> Universe_equiv_induction [] ;
  Universe_equiv_induction_inv_comp -> Universe_equiv_induction_inv [] ;
  Equiv_contr_aut_hprop -> Equiv_path_equiv [] ;
  Universe_equiv_induction_inv -> Universe_isequiv_equiv_path [] ;
  Equiv_contr_equiv_contr_contr -> Equiv_path_equiv [] ;
  Equiv_istrunc_equiv -> Equiv_equiv_path_equiv [] ;
  Equiv_istrunc_equiv -> Arrow_istrunc_arrow [] ;
  Universe_equiv_induction__comp -> Universe_equiv_induction_ [] ;
  Equiv_isequiv_ap_equiv_fun -> Equiv_equiv_path_equiv [] ;
  Universe_equiv_induction_ -> Universe_isequiv_equiv_path [] ;
  Equiv_isequiv_path_equiv -> Equiv_path_equiv [] ;
  Universe_equiv_induction_comp -> Universe_equiv_induction [] ;
  Equiv_path_equiv -> Equiv_equiv_path_equiv [] ;
  Universe_equiv_induction -> Universe_isequiv_equiv_path [] ;
  Universe_transport_path_universe_pV -> Universe_transport_path_universe_pV_uncurried [] ;
  Equiv_equiv_path_equiv -> Sigma_equiv_path_sigma_hprop [] ;
  Equiv_equiv_path_equiv -> Equiv_hprop_isequiv [] ;
  Universe_transport_path_universe_pV_uncurried -> Universe_transport_path_universe_V_equiv_path [] ;
  Universe_transport_path_universe_pV_uncurried -> Universe_transport_path_universe_equiv_path [] ;
  Equiv_equiv_contr_map_isequiv -> Equiv_hprop_isequiv [] ;
  Equiv_equiv_contr_map_isequiv -> Equiv_isequiv_contr_map [] ;
  Universe_path3_universe -> Universe_equiv_path3_universe [] ;
  Equiv_hprop_isequiv -> Sigma_equiv_sigma_assoc_ [] ;
  Equiv_hprop_isequiv -> Sigma_equiv_contr_sigma [] ;
  Equiv_hprop_isequiv -> Paths_equiv_concat_l [] ;
  Equiv_hprop_isequiv -> Forall_equiv_functor_forall_id [] ;
  Equiv_hprop_isequiv -> Equiv_contr_sect_equiv [] ;
  Universe_equiv_path3_universe -> Universe_path2_universe [] ;
  Universe_equiv_path3_universe -> Equiv_isequiv_path_equiv [] ;
  Universe_equiv_path3_universe -> Arrow_isequiv_path_arrow [] ;
  Equiv_contr_retr_equiv -> Equiv_contr_map_isequiv [] ;
  Equiv_contr_retr_equiv -> Arrow_equiv_ap10 [] ;
  Universe_path2_universe_precompose_idmap -> Universe_equiv_path2_universe [] ;
  Universe_path2_universe_precompose_idmap -> Universe_path_universe_1 [] ;
  Universe_path2_universe_precompose_idmap -> Paths_transport_paths_FlFr [] ;
  Equiv_contr_sect_equiv -> Equiv_contr_map_isequiv [] ;
  Equiv_contr_sect_equiv -> Arrow_isequiv_functor_arrow [] ;
  Equiv_contr_sect_equiv -> Arrow_equiv_ap10 [] ;
  Universe_path2_universe_postcompose_idmap -> Universe_equiv_path2_universe [] ;
  Universe_path2_universe_postcompose_idmap -> Universe_path_universe_1 [] ;
  Universe_path2_universe_postcompose_idmap -> Paths_transport_paths_FlFr [] ;
  Equiv_equiv_total_iff_equiv_fiberwise -> Equiv_isequiv_from_functor_sigma [] ;
  Universe_path2_universe_1 -> Universe_equiv_path2_universe_1 [] ;
  Universe_path2_universe_1 -> Universe_path2_universe [] ;
  Equiv_isequiv_from_functor_sigma -> Sigma_istruncmap_from_functor_sigma [] ;
  Equiv_isequiv_from_functor_sigma -> Equiv_isequiv_contr_map [] ;
  Equiv_isequiv_from_functor_sigma -> Equiv_contr_map_isequiv [] ;
  Equiv_isequiv_inhab_codomain -> Equiv_isequiv_contr_map [] ;
  Equiv_isequiv_inhab_codomain -> Equiv_contr_map_isequiv [] ;
  Universe_equiv_path2_universe_1 -> Universe_equiv_path2_universe [] ;
  Universe_equiv_path2_universe_1 -> Sigma_path_sigma_hprop_1 [] ;
  Universe_equiv_path2_universe_1 -> Forall_path_forall_1 [] ;
  Universe_path2_universe -> Universe_equiv_path2_universe [] ;
  Equiv_isequiv_contr_map -> Sigma_pr2_path [] ;
  Equiv_isequiv_contr_map -> Paths_transport_paths_l [] ;
  Universe_equiv_path2_universe -> Universe_path_universe [] ;
  Universe_equiv_path2_universe -> Universe_Univalence_implies_Funext [] ;
  Universe_equiv_path2_universe -> Equiv_equiv_path_equiv [] ;
  Universe_equiv_path2_universe -> Arrow_equiv_path_arrow [] ;
  Equiv_contr_map_isequiv -> Sigma_equiv_functor_sigma_id [] ;
  Equiv_contr_map_isequiv -> Paths_equiv_moveR_equiv_M [] ;
  Universe_univalent_transport_idequiv -> Universe_univalent_transport [] ;
  Universe_univalent_transport_idequiv -> Universe_path_universe_1 [] ;
  Empty_equiv_to_empty -> Empty_isequiv_all_to_empty [] ;
  Universe_univalent_transport -> Universe_path_universe [] ;
  Empty_isequiv_all_to_empty -> Empty_Empty_rec [] ;
  Universe_transport_arrow_toconst_path_universe -> Universe_transport_path_universe_V [] ;
  Universe_transport_arrow_toconst_path_universe -> Universe_Univalence_implies_Funext [] ;
  Universe_transport_arrow_toconst_path_universe -> Arrow_transport_arrow_toconst [] ;
  Universe_transport_path_universe_Vp -> Universe_transport_path_universe_Vp_uncurried [] ;
  Empty_equiv_empty_rec -> Empty_isequiv_empty_rec [] ;
  Universe_transport_path_universe_Vp_uncurried -> Universe_transport_path_universe_V_equiv_path [] ;
  Universe_transport_path_universe_Vp_uncurried -> Universe_transport_path_universe_equiv_path [] ;
  Empty_isequiv_empty_rec -> Empty_Empty_rec [] ;
  Universe_transport_path_universe_V_equiv_path -> Universe_transport_path_universe_V [] ;
  Universe_transport_path_universe_V -> Universe_transport_path_universe_V_uncurried [] ;
  Universe_transport_path_universe_V -> Universe_path_universe [] ;
  Universe_transport_path_universe_V_uncurried -> Universe_path_universe_uncurried [] ;
  Bool_abelian_aut_bool -> Bool_aut_bool_canonical [] ;
  Universe_transport_path_universe_ -> Universe_transport_path_universe [] ;
  Bool_idmap_bool_ne_negb -> Bool_equiv_negb [] ;
  Bool_idmap_bool_ne_negb -> Bool_true_ne_false [] ;
  Universe_transport_path_universe_equiv_path -> Universe_transport_path_universe [] ;
  Bool_aut_bool_idmap_or_negb -> Bool_equiv_bool_aut_bool [] ;
  Universe_transport_path_universe -> Universe_transport_path_universe_uncurried [] ;
  Universe_transport_path_universe -> Universe_path_universe [] ;
  Bool_equiv_bool_aut_bool -> Equiv_path_equiv [] ;
  Bool_equiv_bool_aut_bool -> Bool_aut_bool_canonical [] ;
  Universe_transport_path_universe_uncurried -> Universe_path_universe_uncurried [] ;
  Bool_aut_bool_canonical -> Bool_eval_bool_isequiv [] ;
  Bool_aut_bool_canonical -> Bool_equiv_negb [] ;
  Bool_eval_bool_isequiv -> Bool_negb [] ;
  Universe_ap_prod_r_path_universe -> Universe_path_universe [] ;
  Universe_ap_prod_r_path_universe -> Universe_Univalence_implies_Funext [] ;
  Universe_ap_prod_r_path_universe -> Prod_equiv_functor_prod_r [] ;
  Universe_ap_prod_r_path_universe -> Equiv_path_equiv [] ;
  Universe_ap_prod_r_path_universe -> Arrow_path_arrow [] ;
  Bool_equiv_negb -> Bool_isequiv_negb [] ;
  Universe_ap_prod_l_path_universe -> Universe_path_universe [] ;
  Universe_ap_prod_l_path_universe -> Universe_Univalence_implies_Funext [] ;
  Universe_ap_prod_l_path_universe -> Prod_equiv_functor_prod_l [] ;
  Universe_ap_prod_l_path_universe -> Equiv_path_equiv [] ;
  Universe_ap_prod_l_path_universe -> Arrow_path_arrow [] ;
  Bool_isequiv_negb -> Bool_negb [] ;
  Universe_ap_equiv_path_universe -> Universe_path_universe [] ;
  Universe_ap_equiv_path_universe -> Universe_Univalence_implies_Funext [] ;
  Universe_ap_equiv_path_universe -> Equiv_equiv_functor_equiv [] ;
  Universe_path_universe_V -> Universe_path_universe_V_uncurried [] ;
  Universe_path_universe_V -> Universe_path_universe [] ;
  Bool_equiv_bool_rec_uncurried -> Bool_equiv_bool_forall_prod [] ;
  Universe_path_universe_V_uncurried -> Universe_equiv_path_universe [] ;
  Universe_path_universe_V_uncurried -> Universe_Univalence_implies_Funext [] ;
  Universe_path_universe_V_uncurried -> Universe_equiv_path_V [] ;
  Bool_equiv_bool_forall_prod -> Bool_false [] ;
  Bool_equiv_bool_forall_prod -> Bool_true [] ;
  Bool_equiv_bool_forall_prod -> Bool_Bool [] ;
  Universe_path_universe_1 -> Universe_eta_path_universe [] ;
  Bool_negb_ne_ -> Bool_negb_ne [] ;
  Universe_path_universe_compose -> Universe_path_universe_compose_uncurried [] ;
  Bool_negb_ne -> Bool_negb [] ;
  Universe_path_universe_compose_uncurried -> Universe_equiv_path_pp [] ;
  Universe_path_universe_compose_uncurried -> Universe_eta_path_universe [] ;
  Universe_path_universe_compose_uncurried -> Universe_Univalence_implies_Funext [] ;
  Bool_not_fixed_negb -> Bool_true_ne_false [] ;
  Bool_not_fixed_negb -> Bool_negb [] ;
  Bool_hset_bool -> Bool_decidable_paths_bool [] ;
  Universe_equiv_path_pp -> Universe_equiv_path [] ;
  Universe_equiv_path_pp -> Equiv_path_equiv [] ;
  Universe_equiv_path_pp -> Arrow_path_arrow [] ;
  Universe_transport_idmap_path_universe_uncurried -> Universe_path_universe_uncurried [] ;
  Bool_decidable_paths_bool -> Bool_true_ne_false [] ;
  Bool_true_ne_false -> Bool_false_ne_true [] ;
  Universe_transport_idmap_path_universe -> Universe_path_universe [] ;
  Bool_false_ne_true -> Bool_false [] ;
  Bool_false_ne_true -> Bool_true [] ;
  Bool_false_ne_true -> Bool_Bool [] ;
  Universe_equiv_path_path_universe_uncurried -> Universe_path_universe_uncurried [] ;
  Bool_trunc_if -> Bool_Bool [] ;
  Universe_equiv_path_path_universe -> Universe_path_universe [] ;
  Universe_path_universe_uncurried_transport_idmap -> Universe_path_universe_uncurried [] ;
  Bool_implb_impl -> Bool_implb [] ;
  Bool_implb_impl -> Bool_false [] ;
  Universe_path_universe_transport_idmap -> Universe_path_universe [] ;
  Bool_implb_true -> Bool_implb [] ;
  Bool_implb_true -> Bool_false [] ;
  Universe_path_universe_uncurried_equiv_path -> Universe_path_universe_uncurried [] ;
  Bool_implb -> Bool_true [] ;
  Bool_implb -> Bool_Bool [] ;
  Universe_path_universe_equiv_path -> Universe_path_universe [] ;
  Bool_negb -> Bool_false [] ;
  Bool_negb -> Bool_true [] ;
  Bool_negb -> Bool_Bool [] ;
  Bool_orb -> Bool_true [] ;
  Bool_orb -> Bool_Bool [] ;
  Universe_equiv_equiv_path -> Universe_equiv_path_universe [] ;
  Universe_equiv_path_universe -> Universe_isequiv_path_universe [] ;
  Bool_andb -> Bool_false [] ;
  Bool_andb -> Bool_Bool [] ;
  Universe_isequiv_path_universe -> Universe_path_universe_uncurried [] ;
  Bool_Bool_rect -> Bool_Bool_ind [] ;
  Universe_eta_path_universe_uncurried -> Universe_path_universe_uncurried [] ;
  Bool_Bool_rec -> Bool_Bool [] ;
  Universe_eta_path_universe -> Universe_path_universe [] ;
  Bool_Bool_ind -> Bool_false [] ;
  Bool_Bool_ind -> Bool_true [] ;
  Bool_Bool_ind -> Bool_Bool [] ;
  Universe_path_universe -> Universe_path_universe_uncurried [] ;
  Universe_path_universe_uncurried -> Universe_isequiv_equiv_path [] ;
  Universe_Univalence_implies_Funext -> Universe_Univalence [] ;
  Universe_isequiv_equiv_path -> Universe_Univalence [] ;
  Universe_isequiv_equiv_path -> Universe_equiv_path [] ;
  Universe_is_global_axiom_univalence -> Universe_Univalence [] ;
  Arrow_equiv_functor_arrow_ -> Forall_equiv_functor_forall_ [] ;
  Arrow_equiv_functor_arrow -> Forall_equiv_functor_forall [] ;
  Arrow_isequiv_functor_arrow -> Forall_isequiv_functor_forall [] ;
  Arrow_isequiv_functor_arrow -> Arrow_functor_arrow [] ;
  Universe_equiv_path_V -> Universe_equiv_path [] ;
  Universe_equiv_path_V -> Equiv_path_equiv [] ;
  Unit_contr_equiv_unit -> Unit_contr_unit [] ;
  Unit_equiv_contr_unit -> Unit_contr_unit [] ;
  Arrow_ap_functor_arrow -> Forall_ap_functor_forall [] ;
  Arrow_ap_functor_arrow -> Arrow_functor_arrow [] ;
  Arrow_ap_functor_arrow -> Arrow_path_arrow [] ;
  Arrow_iff_not -> Arrow_not_contrapositive [] ;
  Arrow_not_contrapositive -> Arrow_functor_arrow [] ;
  Unit_equiv_unit_coind -> Unit_isequiv_unit_coind [] ;
  Unit_isequiv_unit_coind -> Unit_unit_coind [] ;
  Unit_isequiv_unit_coind -> Unit_path_unit [] ;
  Arrow_functor_arrow -> Forall_functor_forall [] ;
  Arrow_ap_postcompose -> Forall_path_forall_1 [] ;
  Arrow_ap_postcompose -> Arrow_path_arrow [] ;
  Unit_isequiv_unit_name -> Unit_path_unit [] ;
  Arrow_ap_precompose -> Forall_ap_lambdaD [] ;
  Arrow_ap_precompose -> Arrow_path_arrow [] ;
  Unit_equiv_unit_rec -> Unit_isequiv_unit_rec [] ;
  Arrow_ap_lambda -> Arrow_path_arrow_1 [] ;
  Unit_isequiv_unit_rec -> Unit_isequiv_unit_ind [] ;
  Unit_equiv_path_unit -> Unit_isequiv_path_unit [] ;
  Unit_isequiv_path_unit -> Unit_path_unit_uncurried [] ;
  Unit_eta_path_unit -> Unit_path_unit [] ;
  Arrow_ap10_dpath_arrow -> Forall_apD10_path_forall [] ;
  Arrow_ap10_dpath_arrow -> Arrow_dpath_arrow [] ;
  Arrow_ap10_dpath_arrow -> Arrow_transport_arrow [] ;
  Unit_path_unit -> Unit_path_unit_uncurried [] ;
  Arrow_dpath_arrow -> Arrow_equiv_path_arrow [] ;
  Arrow_ap_transport_arrow_toconst -> Arrow_transport_arrow_toconst [] ;
  Sum_trunc_sum_ -> Sum_isequiv_sum_of_sig [] ;
  Sum_trunc_sum_ -> Sigma_istrunc_sigma [] ;
  Sum_trunc_sum_ -> Bool_trunc_if [] ;
  Sum_isequiv_sum_of_sig -> Sum_isequiv_sig_of_sum [] ;
  Sum_isequiv_sig_of_sum -> Sum_sum_of_sig [] ;
  Sum_isequiv_sig_of_sum -> Sum_sig_of_sum [] ;
  Sum_sum_of_sig -> Bool_false [] ;
  Sum_sum_of_sig -> Bool_true [] ;
  Sum_sum_of_sig -> Bool_Bool [] ;
  Sum_sig_of_sum -> Bool_false [] ;
  Sum_sig_of_sum -> Bool_true [] ;
  Sum_sig_of_sum -> Bool_Bool [] ;
  Arrow_path_arrow_pp -> Forall_path_forall_pp [] ;
  Arrow_path_arrow_pp -> Arrow_path_arrow [] ;
  Sum_ishprop_decidable_hprop -> Sum_ishprop_sum [] ;
  Sum_ishprop_decidable_hprop -> Empty_istrunc_Empty [] ;
  Arrow_ap100_path_arrow2 -> Arrow_equiv_path_arrow2 [] ;
  Arrow_ap100_path_arrow2 -> Arrow_apD10_path_arrow [] ;
  Arrow_equiv_path_arrow2 -> Forall_equiv_functor_forall_id [] ;
  Arrow_equiv_path_arrow2 -> Arrow_equiv_path_arrow [] ;
  Sum_decidablepaths_sum -> Sum_isequiv_path_sum [] ;
  Arrow_equiv_path_arrow -> Forall_equiv_path_forall [] ;
  Arrow_isequiv_path_arrow -> Forall_isequiv_path_forall [] ;
  Arrow_isequiv_path_arrow -> Arrow_path_arrow [] ;
  Sum_ishset_sum -> Sum_istrunc_sum [] ;
  Arrow_path_arrow_1 -> Arrow_eta_path_arrow [] ;
  Sum_istrunc_sum -> Sum_equiv_path_sum [] ;
  Sum_istrunc_sum -> Empty_istrunc_Empty [] ;
  Arrow_eta_path_arrow -> Forall_eta_path_forall [] ;
  Arrow_eta_path_arrow -> Arrow_path_arrow [] ;
  Sum_equiv_sum_distributive -> Sum_equiv_sum_ind [] ;
  Sum_equiv_sum_ind -> Sum_isequiv_sum_ind [] ;
  Arrow_ap10_path_forall -> Forall_apD10_path_forall [] ;
  Sum_isequiv_sum_ind -> Sum_sum_ind_uncurried [] ;
  Arrow_apD10_path_arrow -> Forall_apD10_path_forall [] ;
  Arrow_apD10_path_arrow -> Arrow_path_arrow [] ;
  Sum_sum_ind_uncurried -> Sum_sum_ind [] ;
  Arrow_ap10_path_arrow -> Forall_apD10_path_forall [] ;
  Arrow_ap10_path_arrow -> Arrow_path_arrow [] ;
  Sum_equiv_unfunctor_sum_contr_ll -> Sum_equiv_unfunctor_sum_indecomposable_ll [] ;
  Sum_equiv_unfunctor_sum_contr_ll -> Sum_indecomposable_contr [] ;
  Sum_equiv_unfunctor_sum_indecomposable_ll -> Sum_equiv_indecomposable_sum [] ;
  Sum_equiv_unfunctor_sum_indecomposable_ll -> Sum_equiv_decompose [] ;
  Sum_equiv_unfunctor_sum_indecomposable_ll -> Sum_equiv_sum_assoc [] ;
  Sum_equiv_unfunctor_sum_indecomposable_ll -> Sum_equiv_functor_sum_ [] ;
  Arrow_IsTransitive_arrow -> Arrow_arrow [] ;
  Sum_equiv_indecomposable_sum -> Sum_Indecomposable [] ;
  Sum_equiv_indecomposable_sum -> Sum_sum_empty_r [] ;
  Sum_equiv_indecomposable_sum -> Sum_equiv_unfunctor_sum [] ;
  Sum_equiv_indecomposable_sum -> Prod_equiv_prod_symm [] ;
  Arrow_IsReflexive_arrow -> Arrow_arrow [] ;
  Sum_indecomposable_contr -> Sum_Build_Indecomposable [] ;
  Sum_indecomposable_contr -> Sum_Indecomposable [] ;
  Sum_indecomposable_contr -> Sum_is_inl_or_is_inr [] ;
  Sum_indecompose0 -> Sum_Indecomposable [] ;
  Sum_indecompose -> Sum_Indecomposable [] ;
  Sum_Indecomposable_sind -> Sum_Build_Indecomposable [] ;
  Sum_Indecomposable_sind -> Sum_Indecomposable [] ;
  Sum_Indecomposable_rec -> Sum_Indecomposable_rect [] ;
  Sum_Indecomposable_ind -> Sum_Build_Indecomposable [] ;
  Sum_Indecomposable_ind -> Sum_Indecomposable [] ;
  Sum_Indecomposable_rect -> Sum_Build_Indecomposable [] ;
  Sum_Indecomposable_rect -> Sum_Indecomposable [] ;
  Sum_Build_Indecomposable -> Sum_is_inr [] ;
  Sum_Build_Indecomposable -> Sum_is_inl [] ;
  Sum_Indecomposable -> Sum_is_inr [] ;
  Sum_Indecomposable -> Sum_is_inl [] ;
  Sum_is_inr_decompose_r -> Sum_equiv_decompose [] ;
  Sum_is_inl_decompose_l -> Sum_equiv_decompose [] ;
  Sum_equiv_decompose -> Sum_decompose_r [] ;
  Sum_equiv_decompose -> Sum_decompose_l [] ;
  Sum_equiv_decompose -> Sum_is_inl_or_is_inr [] ;
  Sum_equiv_decompose -> Sum_not_is_inl_and_inr_ [] ;
  Sum_equiv_decompose -> Sum_ishprop_is_inr [] ;
  Sum_equiv_decompose -> Sum_ishprop_is_inl [] ;
  Sum_equiv_decompose -> Sum_sum_ind [] ;
  Sum_decompose_r -> Sum_is_inr [] ;
  Sum_decompose_l -> Sum_is_inl [] ;
  Sum_sum_empty_r -> Sum_sum_empty_l [] ;
  Sum_sum_empty_r -> Sum_equiv_sum_symm [] ;
  Sum_sum_empty_l -> Empty_Empty_rec [] ;
  Sum_equiv_unfunctor_sum -> Sum_equiv_unfunctor_sum_r [] ;
  Sum_equiv_unfunctor_sum -> Sum_equiv_unfunctor_sum_l [] ;
  Sum_equiv_unfunctor_sum_r -> Sum_isequiv_unfunctor_sum_r [] ;
  Sum_isequiv_unfunctor_sum_r -> Sum_unfunctor_sum_r_compose [] ;
  Sum_isequiv_unfunctor_sum_r -> Sum_is_inl [] ;
  Sum_equiv_unfunctor_sum_l -> Sum_isequiv_unfunctor_sum_l [] ;
  Sum_isequiv_unfunctor_sum_l -> Sum_unfunctor_sum_l_compose [] ;
  Sum_isequiv_unfunctor_sum_l -> Sum_is_inr [] ;
  Sum_iff_functor_sum -> Sum_functor_sum [] ;
  Sum_equiv_functor_sum_r -> Sum_equiv_functor_sum_ [] ;
  Sum_equiv_functor_sum_l -> Sum_equiv_functor_sum_ [] ;
  Sum_equiv_functor_sum_ -> Sum_equiv_functor_sum [] ;
  Sum_equiv_functor_sum -> Sum_isequiv_functor_sum [] ;
  Sum_isequiv_functor_sum -> Sum_functor_sum [] ;
  Sum_hfiber_unfunctor_sum_r -> Sum_hfiber_unfunctor_sum_r_subproof0 [] ;
  Sum_hfiber_unfunctor_sum_r -> Sum_hfiber_unfunctor_sum_r_subproof [] ;
  Sum_hfiber_unfunctor_sum_r -> Sum_inr_un_inr [] ;
  Sum_hfiber_unfunctor_sum_r -> Sum_isequiv_path_sum [] ;
  Sum_hfiber_unfunctor_sum_r -> Sum_path_sum_inr [] ;
  Sum_hfiber_unfunctor_sum_r -> Empty_Empty_rec [] ;
  Sum_hfiber_unfunctor_sum_r_subproof0 -> Sum_is_inl [] ;
  Sum_hfiber_unfunctor_sum_r_subproof -> Sum_unfunctor_sum_r [] ;
  Sum_hfiber_unfunctor_sum_r_subproof -> Sum_is_inl [] ;
  Sum_hfiber_unfunctor_sum_l -> Sum_hfiber_unfunctor_sum_l_subproof0 [] ;
  Sum_hfiber_unfunctor_sum_l -> Sum_hfiber_unfunctor_sum_l_subproof [] ;
  Sum_hfiber_unfunctor_sum_l -> Sum_inl_un_inl [] ;
  Sum_hfiber_unfunctor_sum_l -> Sum_isequiv_path_sum [] ;
  Sum_hfiber_unfunctor_sum_l -> Sum_path_sum_inl [] ;
  Sum_hfiber_unfunctor_sum_l -> Empty_Empty_rec [] ;
  Sum_hfiber_unfunctor_sum_l_subproof0 -> Sum_is_inr [] ;
  Sum_hfiber_unfunctor_sum_l_subproof -> Sum_unfunctor_sum_l [] ;
  Sum_hfiber_unfunctor_sum_l_subproof -> Sum_is_inr [] ;
  Sum_unfunctor_sum_r_compose -> Sum_unfunctor_sum_r_beta [] ;
  Sum_unfunctor_sum_r_compose -> Sum_is_inr_ind [] ;
  Sum_unfunctor_sum_r_compose -> Sum_path_sum_inr [] ;
  Sum_unfunctor_sum_l_compose -> Sum_unfunctor_sum_l_beta [] ;
  Sum_unfunctor_sum_l_compose -> Sum_is_inl_ind [] ;
  Sum_unfunctor_sum_l_compose -> Sum_path_sum_inl [] ;
  Sum_unfunctor_sum_r_beta -> Sum_unfunctor_sum_r [] ;
  Sum_unfunctor_sum_r_beta -> Sum_inr_un_inr [] ;
  Sum_unfunctor_sum_l_beta -> Sum_unfunctor_sum_l [] ;
  Sum_unfunctor_sum_l_beta -> Sum_inl_un_inl [] ;
  Sum_unfunctor_sum_eta -> Sum_unfunctor_sum_r [] ;
  Sum_unfunctor_sum_eta -> Sum_unfunctor_sum_l [] ;
  Sum_unfunctor_sum_eta -> Sum_functor_sum [] ;
  Sum_unfunctor_sum_eta -> Sum_inr_un_inr [] ;
  Sum_unfunctor_sum_eta -> Sum_inl_un_inl [] ;
  Sum_unfunctor_sum_r -> Sum_un_inr [] ;
  Sum_unfunctor_sum_l -> Sum_un_inl [] ;
  Sum_functor_sum_idmap -> Sum_functor_sum [] ;
  Sum_functor_sum_compose -> Sum_functor_sum [] ;
  Sum_functor_sum_homotopic -> Sum_functor_sum [] ;
  Sum_hfiber_functor_sum_r -> Sum_functor_sum [] ;
  Sum_hfiber_functor_sum_r -> Sum_isequiv_path_sum [] ;
  Sum_hfiber_functor_sum_r -> Sum_path_sum_inr [] ;
  Sum_hfiber_functor_sum_r -> Sum_inl_ne_inr [] ;
  Sum_hfiber_functor_sum_l -> Sum_functor_sum [] ;
  Sum_hfiber_functor_sum_l -> Sum_isequiv_path_sum [] ;
  Sum_hfiber_functor_sum_l -> Sum_path_sum_inl [] ;
  Sum_hfiber_functor_sum_l -> Sum_inr_ne_inl [] ;
  Sum_ap_functor_sum -> Sum_functor_code_sum [] ;
  Sum_ap_functor_sum -> Sum_path_sum [] ;
  Sum_functor_code_sum -> Sum_functor_sum [] ;
  Sum_functor_code_sum -> Sum_code_sum [] ;
  Sum_is_inr_ind -> Sum_is_inr [] ;
  Sum_is_inl_ind -> Sum_is_inl [] ;
  Sum_is_inl_or_is_inr -> Sum_is_inr [] ;
  Sum_is_inl_or_is_inr -> Sum_is_inl [] ;
  Sum_not_is_inl_and_inr_ -> Sum_not_is_inl_and_inr [] ;
  Sum_not_is_inl_and_inr_ -> Sum_is_inr [] ;
  Sum_not_is_inl_and_inr_ -> Sum_is_inl [] ;
  Sum_not_is_inl_and_inr -> Sum_is_inr_and [] ;
  Sum_not_is_inl_and_inr -> Sum_is_inl_and [] ;
  Sum_inr_un_inr -> Sum_un_inr [] ;
  Sum_inl_un_inl -> Sum_un_inl [] ;
  Sum_un_inr_inr -> Sum_un_inr [] ;
  Sum_un_inl_inl -> Sum_un_inl [] ;
  Sum_is_inr_not_inl -> Sum_is_inl [] ;
  Sum_is_inl_not_inr -> Sum_is_inr [] ;
  Sum_un_inr -> Sum_is_inr [] ;
  Sum_un_inl -> Sum_is_inl [] ;
  Sum_decidable_is_inr -> Unit_contr_unit [] ;
  Sum_decidable_is_inr -> Sum_is_inr [] ;
  Sum_decidable_is_inl -> Unit_contr_unit [] ;
  Sum_decidable_is_inl -> Sum_is_inl [] ;
  Sum_ishprop_is_inr -> Unit_contr_unit [] ;
  Sum_ishprop_is_inr -> Sum_is_inr [] ;
  Sum_ishprop_is_inr -> Empty_istrunc_Empty [] ;
  Sum_ishprop_is_inl -> Unit_contr_unit [] ;
  Sum_ishprop_is_inl -> Sum_is_inl [] ;
  Sum_ishprop_is_inl -> Empty_istrunc_Empty [] ;
  Sum_is_inr -> Sum_is_inr_and [] ;
  Sum_is_inl -> Sum_is_inl_and [] ;
  Sum_equiv_decidable_sum_r -> Sum_equiv_decidable_sum [] ;
  Sum_equiv_decidable_sum_r -> Sigma_path_sigma_hprop [] ;
  Sum_equiv_decidable_sum_l -> Sum_equiv_decidable_sum [] ;
  Sum_equiv_decidable_sum_l -> Sigma_path_sigma_hprop [] ;
  Sum_equiv_decidable_sum -> Empty_istrunc_Empty [] ;
  Sum_decidable_hfiber_inr -> Sum_equiv_path_sum [] ;
  Sum_decidable_hfiber_inr -> Sum_inr_ne_inl [] ;
  Sum_decidable_hfiber_inr -> Sigma_equiv_functor_sigma_id [] ;
  Sum_decidable_hfiber_inr -> Empty_isequiv_all_to_empty [] ;
  Sum_ishprop_hfiber_inr -> Sum_equiv_path_sum [] ;
  Sum_ishprop_hfiber_inr -> Sum_inr_ne_inl [] ;
  Sum_ishprop_hfiber_inr -> Sigma_equiv_functor_sigma_id [] ;
  Sum_ishprop_hfiber_inr -> Empty_isequiv_all_to_empty [] ;
  Sum_ishprop_hfiber_inr -> Empty_istrunc_Empty [] ;
  Sum_decidable_hfiber_inl -> Sum_equiv_path_sum [] ;
  Sum_decidable_hfiber_inl -> Sum_inl_ne_inr [] ;
  Sum_decidable_hfiber_inl -> Sigma_equiv_functor_sigma_id [] ;
  Sum_decidable_hfiber_inl -> Empty_isequiv_all_to_empty [] ;
  Sum_ishprop_hfiber_inl -> Sum_equiv_path_sum [] ;
  Sum_ishprop_hfiber_inl -> Sum_inl_ne_inr [] ;
  Sum_ishprop_hfiber_inl -> Sigma_equiv_functor_sigma_id [] ;
  Sum_ishprop_hfiber_inl -> Empty_isequiv_all_to_empty [] ;
  Sum_ishprop_hfiber_inl -> Empty_istrunc_Empty [] ;
  Sum_equiv_path_sum -> Sum_isequiv_path_sum [] ;
  Sum_isequiv_path_sum -> Sum_eissect_path_sum [] ;
  Sum_isequiv_path_sum -> Sum_eisretr_path_sum [] ;
  Sum_eissect_path_sum -> Sum_path_sum_inv [] ;
  Sum_eissect_path_sum -> Sum_path_sum [] ;
  Sum_eisretr_path_sum -> Sum_path_sum_inv [] ;
  Sum_eisretr_path_sum -> Sum_path_sum [] ;
  Sum_path_sum_inr -> Sum_path_sum_inv [] ;
  Sum_path_sum_inl -> Sum_path_sum_inv [] ;
  Sum_inr_ne_inl -> Sum_path_sum_inv [] ;
  Sum_inl_ne_inr -> Sum_path_sum_inv [] ;
  Sum_path_sum -> Sum_code_sum [] ;
  Sigma_istruncmap_from_functor_sigma -> Sigma_hfiber_functor_sigma_idmap [] ;
  Sigma_hfiber_functor_sigma_idmap -> Sigma_hfiber_functor_sigma [] ;
  Sigma_hfiber_functor_sigma_idmap -> Sigma_equiv_contr_sigma [] ;
  Sigma_istruncmap_functor_sigma -> Sigma_hfiber_functor_sigma [] ;
  Sigma_istruncmap_functor_sigma -> Sigma_istrunc_sigma [] ;
  Sigma_hfiber_functor_sigma -> Sigma_equiv_functor_sigma_id [] ;
  Sigma_hfiber_functor_sigma -> Sigma_equiv_path_sigma [] ;
  Sigma_hfiber_functor_sigma -> Paths_equiv_moveL_transport_V [] ;
  Sigma_pr1_path_path_sigma_hprop -> Sigma_isequiv_path_sigma_hprop [] ;
  Sigma_ap_pr1_path_sigma_hprop -> Sigma_isequiv_path_sigma_hprop [] ;
  Sigma_path_sigma_hprop_pr1_path -> Sigma_isequiv_path_sigma_hprop [] ;
  Sigma_path_sigma_hprop_ap_pr1 -> Sigma_isequiv_path_sigma_hprop [] ;
  Sigma_path_sigma_hprop_pp -> Sigma_path_sigma_hprop_1 [] ;
  Sigma_path_sigma_hprop_V -> Sigma_path_sigma_hprop_1 [] ;
  Sigma_path_sigma_hprop_1 -> Sigma_path_sigma_hprop [] ;
  Sigma_isequiv_ap_pr1_hprop -> Sigma_isequiv_pr1_path_hprop [] ;
  Sigma_isequiv_pr1_path_hprop -> Sigma_isequiv_path_sigma_hprop [] ;
  Sigma_equiv_path_sigma_hprop -> Sigma_isequiv_path_sigma_hprop [] ;
  Sigma_isequiv_path_sigma_hprop -> Sigma_path_sigma_hprop [] ;
  Sigma_isequiv_path_sigma_hprop -> Sigma_isequiv_path_sigma [] ;
  Sigma_path_sigma_hprop -> Sigma_path_sigma_uncurried [] ;
  Sigma_ishprop_sigma_disjoint -> Sigma_path_sigma_ [] ;
  Sigma_istrunc_sigma -> Sigma_isequiv_path_sigma [] ;
  Sigma_istrunc_sigma -> Sigma_path_sigma_ [] ;
  Sigma_equiv_sig_coind -> Sigma_isequiv_sig_coind [] ;
  Sigma_isequiv_sig_coind -> Sigma_sig_coind_uncurried [] ;
  Sigma_sig_coind -> Sigma_sig_coind_uncurried [] ;
  Sigma_equiv_sig_ind_ -> Sigma_equiv_sig_ind [] ;
  Sigma_equiv_sig_ind -> Sigma_isequiv_sig_ind [] ;
  Sigma_equiv_contr_sigma -> Sigma_path_sigma_ [] ;
  Sigma_isequiv_pr1_contr -> Sigma_path_sigma_ [] ;
  Sigma_iff_functor_sigma -> Sigma_functor_sigma [] ;
  Sigma_equiv_functor_sigma_pb -> Sigma_equiv_functor_sigma [] ;
  Sigma_equiv_functor_sigma_id -> Sigma_equiv_functor_sigma_ [] ;
  Sigma_equiv_functor_sigma_ -> Sigma_equiv_functor_sigma [] ;
  Sigma_equiv_functor_sigma -> Sigma_isequiv_functor_sigma [] ;
  Sigma_isequiv_functor_sigma -> Sigma_functor_sigma [] ;
  Sigma_isequiv_functor_sigma -> Sigma_path_sigma_ [] ;
  Sigma_ap_functor_sigma -> Sigma_functor_sigma [] ;
  Sigma_ap_functor_sigma -> Sigma_path_sigma [] ;
  Sigma_path_path_sigma -> Sigma_path_path_sigma_uncurried [] ;
  Sigma_path_path_sigma_uncurried -> Sigma_eta_path_sigma [] ;
  Sigma_ap_sig_rec_path_sigma -> Sigma_path_sigma_ [] ;
  Sigma_ap_sig_rec_path_sigma -> Arrow_transport_arrow [] ;
  Sigma_ap_path_sigma_1p -> Sigma_path_sigma_ [] ;
  Sigma_ap_path_sigma -> Sigma_path_sigma_ [] ;
  Sigma_ap_path_sigma -> Arrow_transport_arrow_toconst [] ;
  Sigma_transportDD_is_transport -> Sigma_path_sigma_ [] ;
  Sigma_transportD_is_transport -> Sigma_path_sigma_ [] ;
  Sigma_ap_exist -> Sigma_path_sigma_ [] ;
  Sigma_pr1_path_V -> Sigma_pr1_path [] ;
  Sigma_pr1_path_pp -> Sigma_pr1_path [] ;
  Sigma_pr1_path_1 -> Sigma_pr1_path [] ;
  Sigma_path_sigma_p1_1p_ -> Sigma_path_sigma_ [] ;
  Sigma_path_sigma_pp_pp_ -> Sigma_path_sigma_pp_pp [] ;
  Sigma_path_sigma_pp_pp_ -> Sigma_path_sigma_ [] ;
  Sigma_path_sigma_pp_pp -> Sigma_path_sigma [] ;
  Sigma_equiv_path_sigma_contra -> Sigma_isequiv_path_sigma_contra [] ;
  Sigma_isequiv_path_sigma_contra -> Sigma_path_sigma_uncurried_contra [] ;
  Sigma_equiv_path_sigma -> Sigma_isequiv_path_sigma [] ;
  Sigma_isequiv_path_sigma -> Sigma_eta_path_sigma [] ;
  Sigma_transport_pr1_path_sigma -> Sigma_transport_pr1_path_sigma_uncurried [] ;
  Sigma_transport_pr1_path_sigma -> Sigma_path_sigma [] ;
  Sigma_eta_path_sigma -> Sigma_eta_path_sigma_uncurried [] ;
  Sigma_eta_path_sigma -> Sigma_path_sigma [] ;
  Sigma_pr2_path_sigma -> Sigma_pr1_path_sigma [] ;
  Sigma_pr2_path_sigma -> Sigma_pr2_path_sigma_uncurried [] ;
  Sigma_ap_pr1_path_sigma -> Sigma_pr1_path_sigma [] ;
  Sigma_pr1_path_sigma -> Sigma_pr1_path_sigma_uncurried [] ;
  Sigma_pr1_path_sigma -> Sigma_path_sigma [] ;
  Sigma_transport_pr1_path_sigma_uncurried -> Sigma_path_sigma_uncurried [] ;
  Sigma_eta_path_sigma_uncurried -> Sigma_pr2_path [] ;
  Sigma_eta_path_sigma_uncurried -> Sigma_path_sigma_uncurried [] ;
  Sigma_pr2_path_sigma_uncurried -> Sigma_pr1_path_sigma_uncurried [] ;
  Sigma_pr2_path_sigma_uncurried -> Sigma_pr2_path [] ;
  Sigma_pr1_path_sigma_uncurried -> Sigma_pr1_path [] ;
  Sigma_pr1_path_sigma_uncurried -> Sigma_path_sigma_uncurried [] ;
  Sigma_pr2_path -> Sigma_pr1_path [] ;
  Sigma_path_sigma_ -> Sigma_path_sigma [] ;
  Sigma_dpath_forall_ -> Sigma_path_sigma [] ;
  Sigma_path_sigma_uncurried_contra -> Sigma_path_sigma_uncurried [] ;
  Sigma_path_sigma -> Sigma_path_sigma_uncurried [] ;
  Prod_istruncmap_functor_prod -> Prod_hfiber_functor_prod [] ;
  Prod_istruncmap_functor_prod -> Prod_istrunc_prod [] ;
  Prod_hfiber_functor_prod -> Prod_functor_prod [] ;
  Prod_hfiber_functor_prod -> Prod_path_prod [] ;
  Prod_ap_uncurry -> Prod_path_prod_ [] ;
  Prod_contr_prod -> Prod_istrunc_prod [] ;
  Prod_istrunc_prod -> Prod_equiv_path_prod [] ;
  Prod_equiv_prod_coind -> Prod_isequiv_prod_coind [] ;
  Prod_isequiv_prod_coind -> Prod_prod_coind_uncurried [] ;
  Prod_prod_coind -> Prod_prod_coind_uncurried [] ;
  Prod_equiv_uncurry -> Prod_equiv_prod_ind [] ;
  Prod_equiv_prod_ind -> Prod_isequiv_prod_ind [] ;
  Prod_isequiv_prod_ind -> Prod_prod_ind [] ;
  Prod_prod_empty_l -> Empty_isequiv_all_to_empty [] ;
  Prod_prod_empty_r -> Empty_isequiv_all_to_empty [] ;
  Prod_iff_functor_prod -> Prod_functor_prod [] ;
  Prod_equiv_functor_prod_r -> Prod_equiv_functor_prod_ [] ;
  Prod_equiv_functor_prod_l -> Prod_equiv_functor_prod_ [] ;
  Prod_equiv_functor_prod_ -> Prod_isequiv_functor_prod [] ;
  Prod_equiv_functor_prod -> Prod_isequiv_functor_prod [] ;
  Prod_isequiv_functor_prod -> Prod_ap_functor_prod [] ;
  Prod_isequiv_functor_prod -> Prod_path_prod_ [] ;
  Prod_ap_functor_prod -> Prod_functor_prod [] ;
  Prod_ap_functor_prod -> Prod_path_prod [] ;
  Prod_path_prod_V -> Prod_path_prod [] ;
  Prod_path_prod_pp_p -> Prod_path_prod_pp [] ;
  Prod_path_prod_pp -> Prod_path_prod [] ;
  Prod_equiv_path_prod -> Prod_isequiv_path_prod [] ;
  Prod_isequiv_path_prod -> Prod_eta_path_prod [] ;
  Prod_isequiv_path_prod -> Prod_ap_snd_path_prod [] ;
  Prod_isequiv_path_prod -> Prod_ap_fst_path_prod [] ;
  Prod_isequiv_path_prod -> Prod_path_prod_ [] ;
  Prod_transport_path_prod_ -> Prod_transport_path_prod [] ;
  Prod_transport_path_prod_ -> Prod_path_prod_ [] ;
  Prod_transport_path_prod -> Prod_transport_path_prod_uncurried [] ;
  Prod_transport_path_prod -> Prod_path_prod [] ;
  Prod_transport_path_prod_uncurried -> Prod_path_prod_uncurried [] ;
  Prod_ap_path_prod -> Prod_path_prod [] ;
  Prod_eta_path_prod -> Prod_path_prod [] ;
  Prod_ap_snd_path_prod_ -> Prod_ap_snd_path_prod [] ;
  Prod_ap_snd_path_prod_ -> Prod_path_prod_ [] ;
  Prod_ap_snd_path_prod -> Prod_path_prod [] ;
  Prod_ap_fst_path_prod_ -> Prod_ap_fst_path_prod [] ;
  Prod_ap_fst_path_prod_ -> Prod_path_prod_ [] ;
  Prod_ap_fst_path_prod -> Prod_path_prod [] ;
  Prod_path_prod_ -> Prod_path_prod [] ;
  Prod_path_prod -> Prod_path_prod_uncurried [] ;
  Paths_equiv_paths_ind_r -> Paths_isequiv_paths_ind_r [] ;
  Paths_equiv_paths_ind -> Paths_isequiv_paths_ind [] ;
  Paths_dpath_paths2 -> Paths_equiv_cancelR [] ;
  Paths_dpath_paths2 -> Paths_equiv_cancelL [] ;
  Paths_dpath_paths2 -> Paths_equiv_concat_lr [] ;
  Paths_dpath_path_lFFr -> Paths_equiv_p1_1q [] ;
  Paths_dpath_path_FFlr -> Paths_equiv_p1_1q [] ;
  Paths_dpath_path_FlFr -> Paths_equiv_concat_r [] ;
  Paths_dpath_path_FlFr -> Paths_equiv_concat_l [] ;
  Paths_dpath_path_Fr -> Paths_equiv_concat_l [] ;
  Paths_dpath_path_Fl -> Paths_equiv_concat_r [] ;
  Paths_dpath_path_lr -> Paths_equiv_p1_1q [] ;
  Paths_dpath_path_r -> Paths_equiv_concat_l [] ;
  Paths_dpath_path_l -> Paths_equiv_concat_r [] ;
  Paths_equiv_moveL_equiv_V -> Paths_isequiv_moveL_equiv_V [] ;
  Paths_isequiv_moveL_equiv_V -> Paths_isequiv_concat_l [] ;
  Paths_equiv_moveL_equiv_M -> Paths_isequiv_moveL_equiv_M [] ;
  Paths_isequiv_moveL_equiv_M -> Paths_isequiv_concat_l [] ;
  Paths_equiv_moveR_equiv_V -> Paths_isequiv_moveR_equiv_V [] ;
  Paths_isequiv_moveR_equiv_V -> Paths_isequiv_concat_r [] ;
  Paths_equiv_moveR_equiv_M -> Paths_isequiv_moveR_equiv_M [] ;
  Paths_isequiv_moveR_equiv_M -> Paths_isequiv_concat_r [] ;
  Paths_equiv_moveL_transport_p -> Paths_isequiv_moveL_transport_p [] ;
  Paths_isequiv_moveL_transport_p -> Paths_moveL_moveR_transport_V [] ;
  Paths_isequiv_moveL_transport_p -> Paths_moveR_moveL_transport_p [] ;
  Paths_equiv_moveL_transport_V -> Paths_isequiv_moveL_transport_V [] ;
  Paths_isequiv_moveL_transport_V -> Paths_moveL_moveR_transport_p [] ;
  Paths_isequiv_moveL_transport_V -> Paths_moveR_moveL_transport_V [] ;
  Paths_equiv_moveR_transport_V -> Paths_isequiv_moveR_transport_V [] ;
  Paths_isequiv_moveR_transport_V -> Paths_moveL_moveR_transport_V [] ;
  Paths_isequiv_moveR_transport_V -> Paths_moveR_moveL_transport_p [] ;
  Paths_equiv_moveR_transport_p -> Paths_isequiv_moveR_transport_p [] ;
  Paths_isequiv_moveR_transport_p -> Paths_moveL_moveR_transport_p [] ;
  Paths_isequiv_moveR_transport_p -> Paths_moveR_moveL_transport_V [] ;
  Paths_isequiv_moveR_V1 -> Paths_isequiv_concat_r [] ;
  Paths_isequiv_moveR_1V -> Paths_isequiv_concat_r [] ;
  Paths_equiv_moveR_1M -> Paths_isequiv_moveR_1M [] ;
  Paths_isequiv_moveR_1M -> Paths_isequiv_concat_r [] ;
  Paths_isequiv_moveR_M1 -> Paths_isequiv_concat_r [] ;
  Paths_isequiv_moveL_V1 -> Paths_isequiv_concat_l [] ;
  Paths_isequiv_moveL_1V -> Paths_isequiv_concat_l [] ;
  Paths_isequiv_moveL_M1 -> Paths_isequiv_concat_l [] ;
  Paths_isequiv_moveL_1M -> Paths_isequiv_concat_l [] ;
  Paths_equiv_moveL_pV -> Paths_isequiv_moveL_pV [] ;
  Paths_isequiv_moveL_pV -> Paths_isequiv_concat_lr [] ;
  Paths_equiv_moveL_Vp -> Paths_isequiv_moveL_Vp [] ;
  Paths_isequiv_moveL_Vp -> Paths_isequiv_concat_lr [] ;
  Paths_equiv_moveL_pM -> Paths_isequiv_moveL_pM [] ;
  Paths_isequiv_moveL_pM -> Paths_isequiv_concat_lr [] ;
  Paths_equiv_moveL_Mp -> Paths_isequiv_moveL_Mp [] ;
  Paths_isequiv_moveL_Mp -> Paths_isequiv_concat_lr [] ;
  Paths_equiv_moveR_pV -> Paths_isequiv_moveR_pV [] ;
  Paths_isequiv_moveR_pV -> Paths_isequiv_concat_lr [] ;
  Paths_equiv_moveR_Vp -> Paths_isequiv_moveR_Vp [] ;
  Paths_isequiv_moveR_Vp -> Paths_isequiv_concat_lr [] ;
  Paths_equiv_moveR_pM -> Paths_isequiv_moveR_pM [] ;
  Paths_isequiv_moveR_pM -> Paths_isequiv_concat_lr [] ;
  Paths_equiv_moveR_Mp -> Paths_isequiv_moveR_Mp [] ;
  Paths_isequiv_moveR_Mp -> Paths_isequiv_concat_lr [] ;
  Paths_isequiv_cancelR -> Paths_equiv_cancelR [] ;
  Paths_equiv_cancelR -> Paths_equiv_whiskerR [] ;
  Paths_equiv_whiskerR -> Paths_isequiv_whiskerR [] ;
  Paths_isequiv_cancelL -> Paths_equiv_cancelL [] ;
  Paths_equiv_cancelL -> Paths_equiv_whiskerL [] ;
  Paths_equiv_whiskerL -> Paths_isequiv_whiskerL [] ;
  Paths_equiv_1p_q1 -> Paths_equiv_concat_lr [] ;
  Paths_equiv_p1_1q -> Paths_equiv_concat_lr [] ;
  Paths_equiv_concat_lr -> Paths_isequiv_concat_lr [] ;
  Paths_isequiv_concat_lr -> Paths_isequiv_concat_r [] ;
  Paths_isequiv_concat_lr -> Paths_isequiv_concat_l [] ;
  Paths_equiv_concat_r -> Paths_isequiv_concat_r [] ;
  Paths_equiv_concat_l -> Paths_isequiv_concat_l [] ;
  Paths_equiv_path_inverse -> Paths_isequiv_path_inverse [] ;
  IWType_decidablepaths_iwtype -> IWType_decide_eq [] ;
  IWType_decide_eq -> IWType_inj_right_pair_on [] ;
  IWType_decide_eq -> IWType_iw_sup [] ;
  IWType_decide_eq -> IWType_IW [] ;
  IWType_inj_right_pair_on -> Sigma_equiv_path_sigma [] ;
  IWType_istrunc_iwtype -> IWType_ishprop_iwtype [] ;
  IWType_istrunc_iwtype -> IWType_equiv_path_hfiber_index [] ;
  IWType_istrunc_iwtype -> IWType_equiv_path_iwtype [] ;
  IWType_ishprop_iwtype -> Sigma_pr2_path [] ;
  IWType_ishprop_iwtype -> IWType_IW_rect [] ;
  IWType_equiv_path_hfiber_index -> IWType_hfiber_to_path_iw_to_hfiber [] ;
  IWType_equiv_path_hfiber_index -> IWType_path_iw_to_hfiber_to_path_iw [] ;
  IWType_hfiber_to_path_iw_to_hfiber -> IWType_hfiber_to_path_iw [] ;
  IWType_hfiber_to_path_iw_to_hfiber -> IWType_path_iw_to_hfiber [] ;
  IWType_path_iw_to_hfiber_to_path_iw -> IWType_hfiber_to_path_iw [] ;
  IWType_path_iw_to_hfiber_to_path_iw -> IWType_path_iw_to_hfiber [] ;
  IWType_hfiber_to_path_iw -> IWType_hfiber_ind [] ;
  IWType_hfiber_to_path_iw -> IWType_iw_to_hfiber_index [] ;
  IWType_path_iw_to_hfiber -> Sigma_functor_sigma [] ;
  IWType_path_iw_to_hfiber -> Prod_functor_prod [] ;
  IWType_path_iw_to_hfiber -> IWType_path_iw_to_hfiber_ind [] ;
  IWType_hfiber_ind -> Sigma_functor_sigma [] ;
  IWType_hfiber_ind -> Sigma_equiv_path_sigma [] ;
  IWType_hfiber_ind -> Prod_functor_prod [] ;
  IWType_hfiber_ind -> Prod_equiv_path_prod [] ;
  IWType_hfiber_ind -> IWType_iw_sup [] ;
  IWType_hfiber_ind -> IWType_IW [] ;
  IWType_path_iw_to_hfiber_ind -> IWType_path_iw_to_hfiber_ind_ [] ;
  IWType_path_iw_to_hfiber_ind -> IWType_adjust_hfiber_idpath [] ;
  IWType_path_iw_to_hfiber_ind_ -> IWType_adjust_hfiber [] ;
  IWType_path_iw_to_hfiber_ind_ -> IWType_iw_to_hfiber_index [] ;
  IWType_path_iw_to_hfiber_ind_ -> IWType_iw_sup [] ;
  IWType_adjust_hfiber_idpath -> IWType_adjust_hfiber [] ;
  IWType_equiv_path_iwtype -> IWType_IWPath_ind_beta_iwpath_sup [] ;
  IWType_IWPath_ind_beta_iwpath_sup -> IWType_IWPath_ind [] ;
  IWType_IWPath_ind_beta_iwpath_sup -> Forall_isequiv_path_forall [] ;
  IWType_IWPath_ind -> IWType_IWPath_ind_refl [] ;
  IWType_IWPath_ind_refl -> IWType_iwpath_sup [] ;
  IWType_IWPath_ind_refl -> IWType_IW_rect [] ;
  IWType_iwpath_sup_refl -> IWType_iwpath_sup [] ;
  IWType_iwpath_sup_refl -> Forall_path_forall_1 [] ;
  IWType_iwpath_sup -> Sigma_functor_sigma [] ;
  IWType_iwpath_sup -> Prod_functor_prod [] ;
  IWType_iwpath_sup -> IWType_iw_sup [] ;
  IWType_iwpath_sup -> IWType_IW [] ;
  IWType_equiv_wtype_iwtype -> IWType_IW__ind [] ;
  IWType_equiv_wtype_iwtype -> IWType_IW_rect [] ;
  IWType_IW__ind_beta_iw_sup_ -> IWType_IW__ind [] ;
  IWType_IW__ind -> WType_W_rect [] ;
  IWType_IW__ind -> IWType_iw_sup_ [] ;
  IWType_iw_sup_ -> WType_w_sup [] ;
  IWType_iw_sup_ -> IWType_IW_ [] ;
  IWType_IW_ -> IWType_IsIndexedBy [] ;
  IWType_IsIndexedBy -> WType_W [] ;
  IWType_iw_to_hfiber_index -> IWType_path_index_iw_label [] ;
  IWType_iw_eta -> IWType_path_index_iw_label [] ;
  IWType_iw_eta -> IWType_iw_arity [] ;
  IWType_iw_eta -> IWType_iw_sup [] ;
  IWType_path_index_iw_label -> IWType_iw_label [] ;
  IWType_iw_arity -> IWType_iw_label [] ;
  IWType_iw_label -> IWType_IW [] ;
  IWType_IW_sind -> IWType_iw_sup [] ;
  IWType_IW_sind -> IWType_IW [] ;
  IWType_IW_rec -> IWType_IW_rect [] ;
  IWType_IW_ind -> IWType_iw_sup [] ;
  IWType_IW_ind -> IWType_IW [] ;
  IWType_IW_rect -> IWType_iw_sup [] ;
  IWType_IW_rect -> IWType_IW [] ;
  Forall_equiv_flip -> Forall_isequiv_flip [] ;
  Forall_isequiv_path_forall11 -> Forall_path_forall11 [] ;
  Forall_path_forall11 -> Forall_equiv_path_forall11 [] ;
  Forall_equiv_path_forall11 -> Forall_equiv_functor_forall_id [] ;
  Forall_equiv_path_forall11 -> Forall_equiv_path_forall [] ;
  Forall_iff_functor_forall -> Forall_functor_forall [] ;
  Forall_equiv_functor_forall_covariant_compose -> Forall_equiv_functor_forall_covariant [] ;
  Forall_equiv_functor_forall_covariant_compose -> Forall_functor_forall_compose [] ;
  Forall_equiv_functor_forall_covariant -> Forall_equiv_functor_forall_ [] ;
  Forall_equiv_functor_forall_pb -> Forall_equiv_functor_forall_ [] ;
  Forall_equiv_functor_forall_id -> Forall_equiv_functor_forall [] ;
  Forall_equiv_functor_forall_ -> Forall_equiv_functor_forall [] ;
  Forall_equiv_functor_forall -> Forall_isequiv_functor_forall [] ;
  Forall_isequiv_functor_forall -> Forall_functor_forall [] ;
  Forall_functor_forall_equiv_pb_beta -> Forall_functor_forall_equiv_pb [] ;
  Forall_functor_forall_equiv_pb -> Forall_functor_forall_equiv [] ;
  Forall_functor_forall_equiv -> Forall_functor_forall [] ;
  Forall_functor_forall_pb -> Forall_functor_forall [] ;
  Forall_functor_forall_id -> Forall_functor_forall [] ;
  Forall_functor_forall_compose -> Forall_functor_forall [] ;
  Forall_ap_functor_forall -> Forall_functor_forall [] ;
  Forall_ap_functor_forall -> Forall_path_forall_1 [] ;
  Forall_dpath_forall_constant -> Forall_equiv_path_forall [] ;
  Forall_dpath_forall -> Forall_equiv_path_forall [] ;
  Forall_ap_precomposeD -> Forall_ap_lambdaD [] ;
  Forall_ap_lambdaD -> Forall_path_forall_1 [] ;
  Forall_apD_transport_forall_constant -> Forall_transport_forall_constant [] ;
subgraph cluster_Sum { label="Sum"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Sum_sum_ind; Sum_sum_rec; Sum_eta_sum; Sum_code_sum; Sum_path_sum; Sum_path_sum_inv; Sum_inl_ne_inr; Sum_inr_ne_inl; Sum_path_sum_inl; Sum_path_sum_inr; Sum_eisretr_path_sum; Sum_eissect_path_sum; Sum_isequiv_path_sum; Sum_equiv_path_sum; Sum_ishprop_hfiber_inl; Sum_decidable_hfiber_inl; Sum_ishprop_hfiber_inr; Sum_decidable_hfiber_inr; Sum_equiv_decidable_sum; Sum_equiv_decidable_sum_l; Sum_equiv_decidable_sum_r; Sum_transport_sum; Sum_is_inl_and; Sum_is_inr_and; Sum_is_inl; Sum_is_inr; Sum_ishprop_is_inl; Sum_ishprop_is_inr; Sum_decidable_is_inl; Sum_decidable_is_inr; Sum_un_inl; Sum_un_inr; Sum_is_inl_not_inr; Sum_is_inr_not_inl; Sum_un_inl_inl; Sum_un_inr_inr; Sum_inl_un_inl; Sum_inr_un_inr; Sum_not_is_inl_and_inr; Sum_not_is_inl_and_inr_; Sum_is_inl_or_is_inr; Sum_is_inl_ind; Sum_is_inr_ind; Sum_functor_sum; Sum_functor_code_sum; Sum_ap_functor_sum; Sum_hfiber_functor_sum_l; Sum_hfiber_functor_sum_r; Sum_functor_sum_homotopic; Sum_functor_sum_compose; Sum_functor_sum_idmap; Sum_unfunctor_sum_l; Sum_unfunctor_sum_r; Sum_unfunctor_sum_eta; Sum_unfunctor_sum_l_beta; Sum_unfunctor_sum_r_beta; Sum_unfunctor_sum_l_compose; Sum_unfunctor_sum_r_compose; Sum_hfiber_unfunctor_sum_l_subproof; Sum_hfiber_unfunctor_sum_l_subproof0; Sum_hfiber_unfunctor_sum_l; Sum_hfiber_unfunctor_sum_r_subproof; Sum_hfiber_unfunctor_sum_r_subproof0; Sum_hfiber_unfunctor_sum_r; Sum_isequiv_functor_sum; Sum_equiv_functor_sum; Sum_equiv_functor_sum_; Sum_equiv_functor_sum_l; Sum_equiv_functor_sum_r; Sum_iff_functor_sum; Sum_isequiv_unfunctor_sum_l; Sum_equiv_unfunctor_sum_l; Sum_isequiv_unfunctor_sum_r; Sum_equiv_unfunctor_sum_r; Sum_equiv_unfunctor_sum; Sum_equiv_sum_symm; Sum_equiv_sum_assoc; Sum_sum_empty_l; Sum_sum_empty_r; Sum_sum_distrib_l; Sum_sum_distrib_r; Sum_equiv_sigma_sum; Sum_decompose_l; Sum_decompose_r; Sum_equiv_decompose; Sum_is_inl_decompose_l; Sum_is_inr_decompose_r; Sum_Indecomposable; Sum_Build_Indecomposable; Sum_Indecomposable_rect; Sum_Indecomposable_ind; Sum_Indecomposable_rec; Sum_Indecomposable_sind; Sum_indecompose; Sum_indecompose0; Sum_indecomposable_contr; Sum_equiv_indecomposable_sum; Sum_equiv_unfunctor_sum_indecomposable_ll; Sum_equiv_unfunctor_sum_contr_ll; Sum_sum_ind_uncurried; Sum_isequiv_sum_ind; Sum_equiv_sum_ind; Sum_equiv_sum_distributive; Sum_istrunc_sum; Sum_ishset_sum; Sum_ishprop_sum; Sum_decidable_sum; Sum_decidablepaths_sum; Sum_ishprop_decidable_hprop; Sum_sig_of_sum; Sum_sum_of_sig; Sum_isequiv_sig_of_sum; Sum_isequiv_sum_of_sig; Sum_trunc_sum_; };
subgraph cluster_Empty { label="Empty"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Empty_contr_from_Empty; Empty_Empty_rec; Empty_isequiv_empty_rec; Empty_equiv_empty_rec; Empty_istrunc_Empty; Empty_isequiv_all_to_empty; Empty_equiv_to_empty; };
subgraph cluster_IWType { label="IWType"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
IWType_IW; IWType_iw_sup; IWType_IW_rect; IWType_IW_ind; IWType_IW_rec; IWType_IW_sind; IWType_iw_label; IWType_iw_arity; IWType_path_index_iw_label; IWType_iw_eta; IWType_iw_to_hfiber_index; IWType_pointwise_paths_ind; IWType_IsIndexedBy; IWType_IW_; IWType_iw_sup_; IWType_IW__ind; IWType_IW__ind_beta_iw_sup_; IWType_equiv_wtype_iwtype; IWType_iwpath_sup; IWType_iwpath_sup_refl; IWType_IWPath_ind_refl; IWType_IWPath_ind; IWType_IWPath_ind_beta_iwpath_sup; IWType_equiv_path_iwtype; IWType_adjust_hfiber; IWType_adjust_hfiber_idpath; IWType_path_iw_to_hfiber_ind_; IWType_path_iw_to_hfiber_ind; IWType_hfiber_ind; IWType_path_iw_to_hfiber; IWType_hfiber_to_path_iw; IWType_path_iw_to_hfiber_to_path_iw; IWType_hfiber_to_path_iw_to_hfiber; IWType_equiv_path_hfiber_index; IWType_ishprop_iwtype; IWType_istrunc_iwtype; IWType_inj_right_pair_on; IWType_decide_eq; IWType_decidablepaths_iwtype; };
subgraph cluster_Sigma { label="Sigma"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Sigma_eta_sigma; Sigma_eta2_sigma; Sigma_eta3_sigma; Sigma_path_sigma_uncurried; Sigma_path_sigma; Sigma_path_sigma_uncurried_contra; Sigma_dpath_forall_; Sigma_path_sigma_; Sigma_pr1_path; Sigma_pr2_path; Sigma_pr1_path_sigma_uncurried; Sigma_pr2_path_sigma_uncurried; Sigma_eta_path_sigma_uncurried; Sigma_transport_pr1_path_sigma_uncurried; Sigma_pr1_path_sigma; Sigma_ap_pr1_path_sigma; Sigma_pr2_path_sigma; Sigma_eta_path_sigma; Sigma_transport_pr1_path_sigma; Sigma_isequiv_path_sigma; Sigma_equiv_path_sigma; Sigma_isequiv_path_sigma_contra; Sigma_equiv_path_sigma_contra; Sigma_path_sigma_pp_pp; Sigma_path_sigma_pp_pp_; Sigma_path_sigma_p1_1p_; Sigma_pr1_path_1; Sigma_pr1_path_pp; Sigma_pr1_path_V; Sigma_ap_exist; Sigma_transportD_is_transport; Sigma_transportDD_is_transport; Sigma_ap_path_sigma; Sigma_ap_path_sigma_1p; Sigma_ap_sig_rec_path_sigma; Sigma_path_path_sigma_uncurried; Sigma_path_path_sigma; Sigma_transport_sigma; Sigma_transport_sigma_; Sigma_transport_sigma__; Sigma_functor_sigma; Sigma_ap_functor_sigma; Sigma_isequiv_functor_sigma; Sigma_equiv_functor_sigma; Sigma_equiv_functor_sigma_; Sigma_equiv_functor_sigma_id; Sigma_equiv_functor_sigma_pb; Sigma_iff_functor_sigma; Sigma_isequiv_pr1_contr; Sigma_equiv_sigma_contr; Sigma_equiv_contr_sigma; Sigma_equiv_sigma_assoc; Sigma_equiv_sigma_assoc_; Sigma_equiv_sigma_prod; Sigma_equiv_sigma_prod_; Sigma_equiv_sigma_prod0; Sigma_equiv_sigma_prod1; Sigma_equiv_sigma_prod_prod; Sigma_equiv_sigma_symm; Sigma_equiv_sigma_symm_; Sigma_equiv_sigma_symm0; Sigma_isequiv_sig_ind; Sigma_equiv_sig_ind; Sigma_equiv_sig_ind_; Sigma_sig_coind_uncurried; Sigma_sig_coind; Sigma_isequiv_sig_coind; Sigma_equiv_sig_coind; Sigma_istrunc_sigma; Sigma_ishprop_sigma_disjoint; Sigma_path_sigma_hprop; Sigma_isequiv_path_sigma_hprop; Sigma_equiv_path_sigma_hprop; Sigma_isequiv_pr1_path_hprop; Sigma_isequiv_ap_pr1_hprop; Sigma_path_sigma_hprop_1; Sigma_path_sigma_hprop_V; Sigma_path_sigma_hprop_pp; Sigma_path_sigma_hprop_ap_pr1; Sigma_path_sigma_hprop_pr1_path; Sigma_ap_pr1_path_sigma_hprop; Sigma_pr1_path_path_sigma_hprop; Sigma_hfiber_functor_sigma; Sigma_istruncmap_functor_sigma; Sigma_hfiber_functor_sigma_idmap; Sigma_istruncmap_from_functor_sigma; };
subgraph cluster_Bool { label="Bool"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Bool_Bool; Bool_true; Bool_false; Bool_Bool_ind; Bool_Bool_rec; Bool_Bool_rect; Bool_andb; Bool_orb; Bool_negb; Bool_implb; Bool_implb_true; Bool_implb_impl; Bool_trunc_if; Bool_false_ne_true; Bool_true_ne_false; Bool_decidable_paths_bool; Bool_hset_bool; Bool_not_fixed_negb; Bool_negb_ne; Bool_negb_ne_; Bool_equiv_bool_forall_prod; Bool_equiv_bool_rec_uncurried; Bool_isequiv_negb; Bool_equiv_negb; Bool_eval_bool_isequiv; Bool_aut_bool_canonical; Bool_equiv_bool_aut_bool; Bool_aut_bool_idmap_or_negb; Bool_idmap_bool_ne_negb; Bool_abelian_aut_bool; };
subgraph cluster_WType { label="WType"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
WType_W; WType_w_sup; WType_W_rect; WType_W_ind; WType_W_rec; WType_W_sind; WType_w_label; WType_w_arg; WType_issig_W; WType_equiv_path_wtype; WType_equiv_path_wtype_; WType_istrunc_wtype; };
subgraph cluster_Unit { label="Unit"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Unit_eta_unit; Unit_path_unit_uncurried; Unit_path_unit; Unit_eta_path_unit; Unit_isequiv_path_unit; Unit_equiv_path_unit; Unit_isequiv_unit_ind; Unit_isequiv_unit_rec; Unit_equiv_unit_rec; Unit_isequiv_unit_name; Unit_unit_coind; Unit_isequiv_unit_coind; Unit_equiv_unit_coind; Unit_contr_unit; Unit_equiv_contr_unit; Unit_contr_equiv_unit; Unit_const_tt; };
subgraph cluster_Equiv { label="Equiv"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Equiv_contr_map_isequiv; Equiv_isequiv_contr_map; Equiv_isequiv_inhab_codomain; Equiv_isequiv_from_functor_sigma; Equiv_equiv_total_iff_equiv_fiberwise; Equiv_contr_sect_equiv; Equiv_contr_retr_equiv; Equiv_hprop_isequiv; Equiv_equiv_contr_map_isequiv; Equiv_equiv_path_equiv; Equiv_path_equiv; Equiv_isequiv_path_equiv; Equiv_isequiv_ap_equiv_fun; Equiv_istrunc_equiv; Equiv_contr_equiv_contr_contr; Equiv_contr_aut_hprop; Equiv_functor_equiv; Equiv_isequiv_functor_equiv; Equiv_equiv_functor_equiv; Equiv_equiv_functor_precompose_equiv; Equiv_equiv_functor_postcompose_equiv; Equiv_isequiv_equiv_inverse; Equiv_equiv_equiv_inverse; Equiv_transport_equiv; Equiv_transport_equiv_; Equiv_transport_equiv__; };
subgraph cluster_Paths { label="Paths"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Paths_transport_paths_l; Paths_transport_paths_lr; Paths_transport_paths_r; Paths_transport_paths_Fl; Paths_transport_paths_Flr; Paths_transport_paths_lFr; Paths_transport_paths_Fr; Paths_transport_paths_FFl; Paths_transport_paths_FFlr; Paths_transport_paths_FlFr; Paths_transport_paths_FlFr_D; Paths_transport_paths_lFFr; Paths_transport_paths_FFr; Paths_transport_paths_FFFl; Paths_transport_paths_FFFlr; Paths_transport_paths_FFlFr; Paths_transport_paths_FlFFr; Paths_transport_paths_lFFFr; Paths_transport_paths_FFFr; Paths_transport_paths_FFFlFr; Paths_transport_paths_FFlFFr; Paths_moveR_Vp_p_inv; Paths_transport011_paths; Paths_transport_paths2; Paths_isequiv_path_inverse; Paths_equiv_path_inverse; Paths_isequiv_concat_l; Paths_equiv_concat_l; Paths_isequiv_concat_r; Paths_equiv_concat_r; Paths_isequiv_concat_lr; Paths_equiv_concat_lr; Paths_equiv_p1_1q; Paths_equiv_1p_q1; Paths_isequiv_whiskerL; Paths_equiv_whiskerL; Paths_equiv_cancelL; Paths_isequiv_cancelL; Paths_isequiv_whiskerR; Paths_equiv_whiskerR; Paths_equiv_cancelR; Paths_isequiv_cancelR; Paths_isequiv_moveR_Mp; Paths_equiv_moveR_Mp; Paths_isequiv_moveR_pM; Paths_equiv_moveR_pM; Paths_isequiv_moveR_Vp; Paths_equiv_moveR_Vp; Paths_isequiv_moveR_pV; Paths_equiv_moveR_pV; Paths_isequiv_moveL_Mp; Paths_equiv_moveL_Mp; Paths_isequiv_moveL_pM; Paths_equiv_moveL_pM; Paths_isequiv_moveL_Vp; Paths_equiv_moveL_Vp; Paths_isequiv_moveL_pV; Paths_equiv_moveL_pV; Paths_isequiv_moveL_1M; Paths_isequiv_moveL_M1; Paths_isequiv_moveL_1V; Paths_isequiv_moveL_V1; Paths_isequiv_moveR_M1; Paths_isequiv_moveR_1M; Paths_equiv_moveR_1M; Paths_isequiv_moveR_1V; Paths_isequiv_moveR_V1; Paths_moveR_moveL_transport_V; Paths_moveL_moveR_transport_p; Paths_isequiv_moveR_transport_p; Paths_equiv_moveR_transport_p; Paths_moveR_moveL_transport_p; Paths_moveL_moveR_transport_V; Paths_isequiv_moveR_transport_V; Paths_equiv_moveR_transport_V; Paths_isequiv_moveL_transport_V; Paths_equiv_moveL_transport_V; Paths_isequiv_moveL_transport_p; Paths_equiv_moveL_transport_p; Paths_isequiv_moveR_equiv_M; Paths_equiv_moveR_equiv_M; Paths_isequiv_moveR_equiv_V; Paths_equiv_moveR_equiv_V; Paths_isequiv_moveL_equiv_M; Paths_equiv_moveL_equiv_M; Paths_isequiv_moveL_equiv_V; Paths_equiv_moveL_equiv_V; Paths_dpath_path_l; Paths_dpath_path_r; Paths_dpath_path_lr; Paths_dpath_path_Fl; Paths_dpath_path_Fr; Paths_dpath_path_FlFr; Paths_dpath_path_FFlr; Paths_dpath_path_lFFr; Paths_dpath_paths2; Paths_isequiv_paths_ind; Paths_equiv_paths_ind; Paths_isequiv_paths_ind_r; Paths_equiv_paths_ind_r; };
subgraph cluster_Universe { label="Universe"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Universe_equiv_path; Universe_equiv_path_V; Universe_Univalence; Universe_is_global_axiom_univalence; Universe_isequiv_equiv_path; Universe_Univalence_implies_Funext; Universe_path_universe_uncurried; Universe_path_universe; Universe_eta_path_universe; Universe_eta_path_universe_uncurried; Universe_isequiv_path_universe; Universe_equiv_path_universe; Universe_equiv_equiv_path; Universe_path_universe_equiv_path; Universe_path_universe_uncurried_equiv_path; Universe_path_universe_transport_idmap; Universe_path_universe_uncurried_transport_idmap; Universe_equiv_path_path_universe; Universe_equiv_path_path_universe_uncurried; Universe_transport_idmap_path_universe; Universe_transport_idmap_path_universe_uncurried; Universe_equiv_path_pp; Universe_path_universe_compose_uncurried; Universe_path_universe_compose; Universe_path_universe_1; Universe_path_universe_V_uncurried; Universe_path_universe_V; Universe_ap_equiv_path_universe; Universe_ap_prod_l_path_universe; Universe_ap_prod_r_path_universe; Universe_transport_path_universe_uncurried; Universe_transport_path_universe; Universe_transport_path_universe_equiv_path; Universe_transport_path_universe_; Universe_transport_path_universe_V_uncurried; Universe_transport_path_universe_V; Universe_transport_path_universe_V_equiv_path; Universe_transport_path_universe_Vp_uncurried; Universe_transport_path_universe_Vp; Universe_transport_arrow_toconst_path_universe; Universe_univalent_transport; Universe_univalent_transport_idequiv; Universe_equiv_path2_universe; Universe_path2_universe; Universe_equiv_path2_universe_1; Universe_path2_universe_1; Universe_path2_universe_postcompose_idmap; Universe_path2_universe_precompose_idmap; Universe_equiv_path3_universe; Universe_path3_universe; Universe_transport_path_universe_pV_uncurried; Universe_transport_path_universe_pV; Universe_equiv_induction; Universe_equiv_induction_comp; Universe_equiv_induction_; Universe_equiv_induction__comp; Universe_equiv_induction_inv; Universe_equiv_induction_inv_comp; Universe_contr_basedequiv; Universe_contr_basedequiv_; Universe_homotopic_trequiv; Universe_istrunc_paths_Type; Universe_not_hset_Type; };
subgraph cluster_Prod { label="Prod"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Prod_prod_ind; Prod_unpack_prod; Prod_pack_prod; Prod_eta_prod; Prod_path_prod_uncurried; Prod_path_prod; Prod_path_prod_; Prod_ap_fst_path_prod; Prod_ap_fst_path_prod_; Prod_ap_snd_path_prod; Prod_ap_snd_path_prod_; Prod_eta_path_prod; Prod_ap_path_prod; Prod_transport_path_prod_uncurried; Prod_transport_path_prod; Prod_transport_path_prod_; Prod_isequiv_path_prod; Prod_equiv_path_prod; Prod_path_prod_pp; Prod_path_prod_pp_p; Prod_path_prod_V; Prod_transport_prod; Prod_functor_prod; Prod_ap_functor_prod; Prod_isequiv_functor_prod; Prod_equiv_functor_prod; Prod_equiv_functor_prod_; Prod_equiv_functor_prod_l; Prod_equiv_functor_prod_r; Prod_iff_functor_prod; Prod_equiv_prod_symm; Prod_equiv_prod_assoc; Prod_prod_empty_r; Prod_prod_empty_l; Prod_prod_unit_r; Prod_prod_unit_l; Prod_isequiv_prod_ind; Prod_equiv_prod_ind; Prod_equiv_uncurry; Prod_prod_coind_uncurried; Prod_prod_coind; Prod_isequiv_prod_coind; Prod_equiv_prod_coind; Prod_istrunc_prod; Prod_contr_prod; Prod_decidable_prod; Prod_ap_uncurry; Prod_hfiber_functor_prod; Prod_istruncmap_functor_prod; };
subgraph cluster_Arrow { label="Arrow"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Arrow_arrow; Arrow_IsReflexive_arrow; Arrow_IsTransitive_arrow; Arrow_path_arrow; Arrow_ap10_path_arrow; Arrow_apD10_path_arrow; Arrow_ap10_path_forall; Arrow_eta_path_arrow; Arrow_path_arrow_1; Arrow_equiv_ap10; Arrow_isequiv_path_arrow; Arrow_equiv_path_arrow; Arrow_equiv_path_arrow2; Arrow_ap100_path_arrow2; Arrow_path_arrow_pp; Arrow_transport_arrow; Arrow_transport_arrow_; Arrow_transport_arrow_toconst; Arrow_transport_arrow_toconst_; Arrow_transport_arrow_fromconst; Arrow_ap_transport_arrow_toconst; Arrow_dpath_arrow; Arrow_ap10_dpath_arrow; Arrow_ap_apply_l; Arrow_ap_apply_Fl; Arrow_ap_apply_Fr; Arrow_ap_apply_FlFr; Arrow_ap_lambda; Arrow_ap_precompose; Arrow_ap_postcompose; Arrow_functor_arrow; Arrow_not_contrapositive; Arrow_iff_not; Arrow_ap_functor_arrow; Arrow_contr_arrow; Arrow_istrunc_arrow; Arrow_equiv_arrow_from_contr; Arrow_isequiv_functor_arrow; Arrow_equiv_functor_arrow; Arrow_equiv_functor_arrow_; Arrow_decidable_arrow; };
subgraph cluster_Forall { label="Forall"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Forall_transport_forall; Forall_transport_forall_constant; Forall_apD_transport_forall_constant; Forall_ap_apply_lD; Forall_ap_apply_lD2; Forall_ap_lambdaD; Forall_ap_precomposeD; Forall_dpath_forall; Forall_dpath_forall_constant; Forall_functor_forall; Forall_ap_functor_forall; Forall_functor_forall_compose; Forall_functor_forall_id; Forall_functor_forall_pb; Forall_functor_forall_equiv; Forall_functor_forall_equiv_pb; Forall_functor_forall_equiv_pb_beta; Forall_isequiv_functor_forall; Forall_equiv_functor_forall; Forall_equiv_functor_forall_; Forall_equiv_functor_forall_id; Forall_equiv_functor_forall_pb; Forall_equiv_functor_forall_covariant; Forall_equiv_functor_forall_covariant_compose; Forall_iff_functor_forall; Forall_equiv_path_forall11; Forall_path_forall11; Forall_isequiv_path_forall11; Forall_equiv_contr_forall; Forall_isequiv_flip; Forall_equiv_flip; Forall_apD10_path_forall; Forall_eta_path_forall; Forall_path_forall_1; Forall_equiv_apD10; Forall_isequiv_path_forall; Forall_equiv_path_forall; Forall_path_forall_pp; Forall_path_forall_V; };
} /* END */
