N: 72 "Build_IsLeftSubmodule'" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 71 "Build_IsRightSubmodule'" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 53 "Build_LeftModuleHomomorphism'" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 42 "Build_LeftModuleIsomorphism'" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 70 "Build_LeftSubmodule'" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 52 "Build_RightModuleHomomorphism'" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 41 "Build_RightModuleIsomorphism'" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 69 "Build_RightSubmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 136 "IsLeftModule_ind" [body=yes, kind=cnst, prop=yes, path="Module", ];
N: 135 "IsLeftModule_rec" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 137 "IsLeftModule_rect" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 134 "IsLeftModule_sind" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 94 "IsLeftSubmodule_ind" [body=yes, kind=cnst, prop=yes, path="Module", ];
N: 93 "IsLeftSubmodule_rec" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 95 "IsLeftSubmodule_rect" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 92 "IsLeftSubmodule_sind" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 111 "IsRightModule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 89 "IsRightSubmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 65 "LeftModuleHomomorphism_ind" [body=yes, kind=cnst, prop=yes, path="Module", ];
N: 64 "LeftModuleHomomorphism_rec" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 66 "LeftModuleHomomorphism_rect" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 63 "LeftModuleHomomorphism_sind" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 48 "LeftModuleIsomorphism_ind" [body=yes, kind=cnst, prop=yes, path="Module", ];
N: 47 "LeftModuleIsomorphism_rec" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 49 "LeftModuleIsomorphism_rect" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 46 "LeftModuleIsomorphism_sind" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 125 "LeftModule_ind" [body=yes, kind=cnst, prop=yes, path="Module", ];
N: 124 "LeftModule_rec" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 126 "LeftModule_rect" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 123 "LeftModule_sind" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 84 "LeftSubmodule_ind" [body=yes, kind=cnst, prop=yes, path="Module", ];
N: 83 "LeftSubmodule_rec" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 85 "LeftSubmodule_rect" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 82 "LeftSubmodule_sind" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 18 "QuotientLeftModule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 17 "QuotientRightModule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 108 "RightModule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 60 "RightModuleHomomorphism" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 43 "RightModuleIsomorphism" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 79 "RightSubmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 6 "hasbinaryproducts_leftmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 5 "hasbinaryproducts_rightmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 34 "hasequivs_leftmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 29 "hasequivs_rightmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 91 "ils_issubgroup" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 37 "is01cat_leftmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 32 "is01cat_rightmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 35 "is1cat_leftmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 30 "is1cat_rightmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 36 "is2graph_leftmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 31 "is2graph_rightmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 90 "is_left_submodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 44 "isequiv_lm_iso_map" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 38 "isgraph_leftmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 33 "isgraph_rightmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 76 "isleftmodule_leftsubmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 110 "isleftmodule_op_isrightmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 20 "isleftmodule_quotientabgroup" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 112 "isleftmodule_ring" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 24 "isleftsubmodule_grp_image" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 28 "isleftsubmodule_grp_kernel" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 88 "isleftsubmodule_op_isrightsubmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 19 "isrightmodule_quotientabgroup" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 75 "isrightmodule_rightsubmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 98 "isrightmodule_ring" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 23 "isrightsubmodule_grp_image" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 27 "isrightsubmodule_grp_kernel" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 133 "lact" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 130 "lact_assoc" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 132 "lact_left_dist" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 131 "lact_right_dist" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 129 "lact_unit" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 74 "leftmodule_leftsubmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 118 "lm_assoc" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 122 "lm_carrier" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 120 "lm_dist_l" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 119 "lm_dist_r" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 16 "lm_first_iso" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 55 "lm_homo_compose" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 57 "lm_homo_id" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 61 "lm_homo_lact" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 62 "lm_homo_map" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 22 "lm_image" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 40 "lm_iso_inverse" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 45 "lm_iso_map" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 26 "lm_kernel" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 121 "lm_lact" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 114 "lm_minus_one" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 113 "lm_neg" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 14 "lm_prod" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 8 "lm_prod_corec" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 12 "lm_prod_fst" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 10 "lm_prod_snd" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 4 "lm_sum_dist_l" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 2 "lm_sum_dist_r" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 117 "lm_unit" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 116 "lm_zero_l" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 115 "lm_zero_r" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 81 "lsm_carrier" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 80 "lsm_submodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 109 "ract" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 73 "rightmodule_rightsubmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 104 "rm_assoc" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 105 "rm_dist_l" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 106 "rm_dist_r" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 15 "rm_first_iso" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 54 "rm_homo_compose" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 56 "rm_homo_id" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 59 "rm_homo_map" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 58 "rm_homo_ract" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 21 "rm_image" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 39 "rm_iso_inverse" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 25 "rm_kernel" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 100 "rm_minus_one" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 99 "rm_neg" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 13 "rm_prod" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 7 "rm_prod_corec" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 11 "rm_prod_fst" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 9 "rm_prod_snd" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 107 "rm_ract" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 1 "rm_sum_dist_l" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 3 "rm_sum_dist_r" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 103 "rm_unit" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 102 "rm_zero_l" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 101 "rm_zero_r" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 78 "subgroup_leftsubmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 77 "subgroup_rightsubmodule" [body=yes, kind=cnst, prop=no, path="Module", ];
N: 139 "IsLeftModule" [kind=inductive, prop=no, path="Module", ];
N: 97 "IsLeftSubmodule" [kind=inductive, prop=no, path="Module", ];
N: 128 "LeftModule" [kind=inductive, prop=no, path="Module", ];
N: 68 "LeftModuleHomomorphism" [kind=inductive, prop=no, path="Module", ];
N: 51 "LeftModuleIsomorphism" [kind=inductive, prop=no, path="Module", ];
N: 87 "LeftSubmodule" [kind=inductive, prop=no, path="Module", ];
N: 138 "Build_IsLeftModule" [kind=construct, prop=no, path="Module", ];
N: 96 "Build_IsLeftSubmodule" [kind=construct, prop=no, path="Module", ];
N: 127 "Build_LeftModule" [kind=construct, prop=no, path="Module", ];
N: 67 "Build_LeftModuleHomomorphism" [kind=construct, prop=no, path="Module", ];
N: 50 "Build_LeftModuleIsomorphism" [kind=construct, prop=no, path="Module", ];
N: 86 "Build_LeftSubmodule" [kind=construct, prop=no, path="Module", ];
E: 1 2 [weight=1, ];
E: 1 107 [weight=2, ];
E: 1 108 [weight=2, ];
E: 1 109 [weight=2, ];
E: 2 116 [weight=1, ];
E: 2 119 [weight=1, ];
E: 2 128 [weight=2, ];
E: 3 4 [weight=1, ];
E: 3 107 [weight=2, ];
E: 3 108 [weight=2, ];
E: 3 109 [weight=2, ];
E: 4 115 [weight=1, ];
E: 4 120 [weight=1, ];
E: 4 128 [weight=2, ];
E: 5 6 [weight=1, ];
E: 5 30 [weight=1, ];
E: 5 31 [weight=1, ];
E: 5 32 [weight=1, ];
E: 5 33 [weight=1, ];
E: 5 108 [weight=1, ];
E: 6 8 [weight=3, ];
E: 6 10 [weight=6, ];
E: 6 12 [weight=6, ];
E: 6 14 [weight=17, ];
E: 6 35 [weight=13, ];
E: 6 36 [weight=8, ];
E: 6 37 [weight=13, ];
E: 6 38 [weight=19, ];
E: 6 62 [weight=4, ];
E: 6 68 [weight=4, ];
E: 6 128 [weight=15, ];
E: 7 8 [weight=1, ];
E: 7 13 [weight=1, ];
E: 7 33 [weight=5, ];
E: 7 108 [weight=6, ];
E: 8 14 [weight=3, ];
E: 8 38 [weight=5, ];
E: 8 61 [weight=2, ];
E: 8 67 [weight=1, ];
E: 8 128 [weight=6, ];
E: 9 10 [weight=1, ];
E: 9 13 [weight=1, ];
E: 9 33 [weight=1, ];
E: 9 108 [weight=4, ];
E: 10 14 [weight=3, ];
E: 10 38 [weight=1, ];
E: 10 67 [weight=1, ];
E: 10 128 [weight=4, ];
E: 11 12 [weight=1, ];
E: 11 13 [weight=1, ];
E: 11 33 [weight=1, ];
E: 11 108 [weight=4, ];
E: 12 14 [weight=3, ];
E: 12 38 [weight=1, ];
E: 12 67 [weight=1, ];
E: 12 128 [weight=4, ];
E: 13 14 [weight=1, ];
E: 13 108 [weight=3, ];
E: 14 117 [weight=2, ];
E: 14 118 [weight=2, ];
E: 14 119 [weight=2, ];
E: 14 120 [weight=2, ];
E: 14 127 [weight=1, ];
E: 14 128 [weight=5, ];
E: 14 138 [weight=1, ];
E: 15 16 [weight=1, ];
E: 15 17 [weight=1, ];
E: 15 21 [weight=1, ];
E: 15 25 [weight=1, ];
E: 15 29 [weight=1, ];
E: 15 30 [weight=1, ];
E: 15 31 [weight=1, ];
E: 15 32 [weight=1, ];
E: 15 33 [weight=3, ];
E: 15 73 [weight=1, ];
E: 15 108 [weight=5, ];
E: 16 18 [weight=6, ];
E: 16 22 [weight=10, ];
E: 16 26 [weight=20, ];
E: 16 34 [weight=1, ];
E: 16 35 [weight=1, ];
E: 16 36 [weight=1, ];
E: 16 37 [weight=1, ];
E: 16 38 [weight=3, ];
E: 16 42 [weight=1, ];
E: 16 61 [weight=1, ];
E: 16 74 [weight=9, ];
E: 16 78 [weight=15, ];
E: 16 128 [weight=5, ];
E: 17 18 [weight=1, ];
E: 17 79 [weight=2, ];
E: 17 108 [weight=3, ];
E: 18 20 [weight=1, ];
E: 18 78 [weight=1, ];
E: 18 87 [weight=2, ];
E: 18 127 [weight=1, ];
E: 18 128 [weight=3, ];
E: 19 20 [weight=1, ];
E: 19 77 [weight=1, ];
E: 19 79 [weight=2, ];
E: 19 108 [weight=2, ];
E: 19 111 [weight=1, ];
E: 20 78 [weight=647, ];
E: 20 87 [weight=2, ];
E: 20 117 [weight=1, ];
E: 20 118 [weight=1, ];
E: 20 119 [weight=1, ];
E: 20 120 [weight=51, ];
E: 20 128 [weight=2, ];
E: 20 138 [weight=1, ];
E: 20 139 [weight=1, ];
E: 21 22 [weight=1, ];
E: 21 33 [weight=2, ];
E: 21 79 [weight=1, ];
E: 21 108 [weight=4, ];
E: 22 24 [weight=1, ];
E: 22 38 [weight=2, ];
E: 22 86 [weight=1, ];
E: 22 87 [weight=1, ];
E: 22 128 [weight=4, ];
E: 23 24 [weight=1, ];
E: 23 33 [weight=2, ];
E: 23 89 [weight=1, ];
E: 23 108 [weight=4, ];
E: 24 38 [weight=2, ];
E: 24 61 [weight=1, ];
E: 24 96 [weight=1, ];
E: 24 97 [weight=1, ];
E: 24 128 [weight=4, ];
E: 24 133 [weight=1, ];
E: 25 26 [weight=1, ];
E: 25 33 [weight=2, ];
E: 25 79 [weight=1, ];
E: 25 108 [weight=4, ];
E: 26 28 [weight=1, ];
E: 26 38 [weight=2, ];
E: 26 86 [weight=1, ];
E: 26 87 [weight=1, ];
E: 26 128 [weight=4, ];
E: 27 28 [weight=1, ];
E: 27 33 [weight=2, ];
E: 27 89 [weight=1, ];
E: 27 108 [weight=4, ];
E: 28 38 [weight=2, ];
E: 28 61 [weight=1, ];
E: 28 96 [weight=1, ];
E: 28 97 [weight=1, ];
E: 28 115 [weight=1, ];
E: 28 128 [weight=4, ];
E: 28 133 [weight=1, ];
E: 29 30 [weight=1, ];
E: 29 31 [weight=1, ];
E: 29 32 [weight=1, ];
E: 29 33 [weight=1, ];
E: 29 34 [weight=1, ];
E: 29 108 [weight=1, ];
E: 30 31 [weight=1, ];
E: 30 32 [weight=1, ];
E: 30 33 [weight=1, ];
E: 30 35 [weight=1, ];
E: 30 108 [weight=1, ];
E: 31 33 [weight=1, ];
E: 31 36 [weight=1, ];
E: 31 108 [weight=1, ];
E: 32 33 [weight=1, ];
E: 32 37 [weight=1, ];
E: 32 108 [weight=1, ];
E: 33 38 [weight=1, ];
E: 33 108 [weight=1, ];
E: 34 35 [weight=6, ];
E: 34 36 [weight=5, ];
E: 34 37 [weight=6, ];
E: 34 38 [weight=13, ];
E: 34 40 [weight=1, ];
E: 34 50 [weight=1, ];
E: 34 51 [weight=8, ];
E: 34 62 [weight=2, ];
E: 34 68 [weight=3, ];
E: 34 128 [weight=29, ];
E: 35 36 [weight=13, ];
E: 35 37 [weight=16, ];
E: 35 38 [weight=45, ];
E: 35 62 [weight=10, ];
E: 35 68 [weight=5, ];
E: 35 128 [weight=57, ];
E: 36 38 [weight=1, ];
E: 36 62 [weight=1, ];
E: 36 68 [weight=1, ];
E: 36 128 [weight=3, ];
E: 37 38 [weight=2, ];
E: 37 55 [weight=1, ];
E: 37 57 [weight=1, ];
E: 37 128 [weight=2, ];
E: 38 68 [weight=1, ];
E: 38 128 [weight=2, ];
E: 39 40 [weight=1, ];
E: 39 43 [weight=2, ];
E: 39 108 [weight=4, ];
E: 40 50 [weight=1, ];
E: 40 51 [weight=3, ];
E: 40 53 [weight=1, ];
E: 40 61 [weight=1, ];
E: 40 128 [weight=4, ];
E: 40 133 [weight=1, ];
E: 41 42 [weight=1, ];
E: 41 43 [weight=1, ];
E: 41 107 [weight=4, ];
E: 41 108 [weight=4, ];
E: 41 109 [weight=4, ];
E: 42 50 [weight=1, ];
E: 42 51 [weight=1, ];
E: 42 67 [weight=1, ];
E: 42 128 [weight=4, ];
E: 43 51 [weight=1, ];
E: 43 108 [weight=4, ];
E: 44 51 [weight=2, ];
E: 44 128 [weight=4, ];
E: 45 51 [weight=2, ];
E: 45 68 [weight=1, ];
E: 45 128 [weight=4, ];
E: 46 50 [weight=2, ];
E: 46 51 [weight=4, ];
E: 46 68 [weight=2, ];
E: 46 128 [weight=4, ];
E: 47 49 [weight=1, ];
E: 47 50 [weight=1, ];
E: 47 51 [weight=3, ];
E: 47 68 [weight=1, ];
E: 47 128 [weight=4, ];
E: 48 50 [weight=2, ];
E: 48 51 [weight=4, ];
E: 48 68 [weight=2, ];
E: 48 128 [weight=4, ];
E: 49 50 [weight=2, ];
E: 49 51 [weight=4, ];
E: 49 68 [weight=2, ];
E: 49 128 [weight=4, ];
E: 50 68 [weight=1, ];
E: 50 128 [weight=2, ];
E: 51 68 [weight=1, ];
E: 51 128 [weight=2, ];
E: 52 53 [weight=1, ];
E: 52 60 [weight=1, ];
E: 52 107 [weight=4, ];
E: 52 108 [weight=4, ];
E: 52 109 [weight=4, ];
E: 53 67 [weight=1, ];
E: 53 68 [weight=1, ];
E: 53 117 [weight=8, ];
E: 53 128 [weight=4, ];
E: 54 55 [weight=1, ];
E: 54 60 [weight=3, ];
E: 54 108 [weight=6, ];
E: 55 61 [weight=2, ];
E: 55 67 [weight=1, ];
E: 55 68 [weight=5, ];
E: 55 128 [weight=6, ];
E: 56 57 [weight=1, ];
E: 56 60 [weight=1, ];
E: 56 108 [weight=2, ];
E: 57 67 [weight=1, ];
E: 57 68 [weight=1, ];
E: 57 128 [weight=2, ];
E: 58 59 [weight=2, ];
E: 58 60 [weight=2, ];
E: 58 107 [weight=2, ];
E: 58 108 [weight=4, ];
E: 58 109 [weight=2, ];
E: 59 60 [weight=1, ];
E: 59 62 [weight=1, ];
E: 59 108 [weight=4, ];
E: 60 68 [weight=1, ];
E: 60 108 [weight=4, ];
E: 61 68 [weight=2, ];
E: 61 128 [weight=4, ];
E: 62 68 [weight=2, ];
E: 62 128 [weight=4, ];
E: 63 67 [weight=2, ];
E: 63 68 [weight=4, ];
E: 63 128 [weight=4, ];
E: 64 66 [weight=1, ];
E: 64 67 [weight=1, ];
E: 64 68 [weight=3, ];
E: 64 128 [weight=4, ];
E: 65 67 [weight=2, ];
E: 65 68 [weight=4, ];
E: 65 128 [weight=4, ];
E: 66 67 [weight=2, ];
E: 66 68 [weight=4, ];
E: 66 128 [weight=4, ];
E: 67 128 [weight=2, ];
E: 68 128 [weight=2, ];
E: 69 70 [weight=1, ];
E: 69 79 [weight=1, ];
E: 69 107 [weight=2, ];
E: 69 108 [weight=2, ];
E: 69 109 [weight=2, ];
E: 70 72 [weight=1, ];
E: 70 86 [weight=1, ];
E: 70 87 [weight=1, ];
E: 70 97 [weight=1, ];
E: 70 128 [weight=2, ];
E: 71 72 [weight=1, ];
E: 71 89 [weight=1, ];
E: 71 107 [weight=2, ];
E: 71 108 [weight=2, ];
E: 71 109 [weight=2, ];
E: 72 96 [weight=1, ];
E: 72 97 [weight=1, ];
E: 72 114 [weight=1, ];
E: 72 128 [weight=2, ];
E: 73 74 [weight=1, ];
E: 73 79 [weight=2, ];
E: 73 108 [weight=3, ];
E: 74 76 [weight=1, ];
E: 74 78 [weight=1, ];
E: 74 87 [weight=2, ];
E: 74 127 [weight=1, ];
E: 74 128 [weight=3, ];
E: 75 76 [weight=1, ];
E: 75 77 [weight=1, ];
E: 75 79 [weight=2, ];
E: 75 108 [weight=2, ];
E: 75 111 [weight=1, ];
E: 76 78 [weight=82, ];
E: 76 80 [weight=17, ];
E: 76 87 [weight=36, ];
E: 76 128 [weight=36, ];
E: 76 138 [weight=1, ];
E: 76 139 [weight=1, ];
E: 77 78 [weight=1, ];
E: 77 79 [weight=2, ];
E: 77 108 [weight=2, ];
E: 78 87 [weight=2, ];
E: 78 128 [weight=2, ];
E: 79 87 [weight=1, ];
E: 79 108 [weight=2, ];
E: 80 87 [weight=2, ];
E: 80 97 [weight=1, ];
E: 80 128 [weight=2, ];
E: 81 87 [weight=2, ];
E: 81 128 [weight=2, ];
E: 82 86 [weight=2, ];
E: 82 87 [weight=4, ];
E: 82 97 [weight=2, ];
E: 82 128 [weight=2, ];
E: 83 85 [weight=1, ];
E: 83 86 [weight=1, ];
E: 83 87 [weight=3, ];
E: 83 97 [weight=1, ];
E: 83 128 [weight=2, ];
E: 84 86 [weight=2, ];
E: 84 87 [weight=4, ];
E: 84 97 [weight=2, ];
E: 84 128 [weight=2, ];
E: 85 86 [weight=2, ];
E: 85 87 [weight=4, ];
E: 85 97 [weight=2, ];
E: 85 128 [weight=2, ];
E: 86 97 [weight=1, ];
E: 86 128 [weight=1, ];
E: 87 97 [weight=1, ];
E: 87 128 [weight=1, ];
E: 88 89 [weight=2, ];
E: 88 97 [weight=1, ];
E: 88 108 [weight=2, ];
E: 89 97 [weight=1, ];
E: 89 108 [weight=2, ];
E: 90 97 [weight=2, ];
E: 90 128 [weight=2, ];
E: 91 97 [weight=2, ];
E: 91 128 [weight=2, ];
E: 92 96 [weight=2, ];
E: 92 97 [weight=4, ];
E: 92 128 [weight=2, ];
E: 93 95 [weight=1, ];
E: 93 96 [weight=1, ];
E: 93 97 [weight=3, ];
E: 93 128 [weight=2, ];
E: 94 96 [weight=2, ];
E: 94 97 [weight=4, ];
E: 94 128 [weight=2, ];
E: 95 96 [weight=2, ];
E: 95 97 [weight=4, ];
E: 95 128 [weight=2, ];
E: 96 128 [weight=1, ];
E: 97 128 [weight=1, ];
E: 98 111 [weight=1, ];
E: 98 112 [weight=1, ];
E: 99 107 [weight=2, ];
E: 99 108 [weight=2, ];
E: 99 109 [weight=2, ];
E: 99 113 [weight=1, ];
E: 100 107 [weight=1, ];
E: 100 108 [weight=2, ];
E: 100 109 [weight=1, ];
E: 100 114 [weight=1, ];
E: 101 107 [weight=1, ];
E: 101 108 [weight=2, ];
E: 101 109 [weight=1, ];
E: 101 116 [weight=1, ];
E: 102 107 [weight=1, ];
E: 102 108 [weight=2, ];
E: 102 109 [weight=1, ];
E: 102 115 [weight=1, ];
E: 103 107 [weight=1, ];
E: 103 108 [weight=2, ];
E: 103 109 [weight=1, ];
E: 103 117 [weight=1, ];
E: 104 107 [weight=3, ];
E: 104 108 [weight=2, ];
E: 104 109 [weight=3, ];
E: 104 118 [weight=1, ];
E: 105 107 [weight=3, ];
E: 105 108 [weight=2, ];
E: 105 109 [weight=3, ];
E: 105 119 [weight=1, ];
E: 106 107 [weight=3, ];
E: 106 108 [weight=2, ];
E: 106 109 [weight=3, ];
E: 106 120 [weight=1, ];
E: 107 108 [weight=2, ];
E: 107 111 [weight=1, ];
E: 108 128 [weight=1, ];
E: 109 110 [weight=1, ];
E: 109 111 [weight=2, ];
E: 110 111 [weight=2, ];
E: 110 139 [weight=1, ];
E: 111 139 [weight=1, ];
E: 112 138 [weight=1, ];
E: 112 139 [weight=1, ];
E: 113 115 [weight=1, ];
E: 113 120 [weight=1, ];
E: 113 128 [weight=2, ];
E: 113 133 [weight=3, ];
E: 114 116 [weight=1, ];
E: 114 117 [weight=1, ];
E: 114 119 [weight=1, ];
E: 114 128 [weight=2, ];
E: 114 133 [weight=3, ];
E: 115 120 [weight=1, ];
E: 115 128 [weight=2, ];
E: 115 133 [weight=3, ];
E: 116 119 [weight=1, ];
E: 116 128 [weight=2, ];
E: 116 133 [weight=3, ];
E: 117 128 [weight=2, ];
E: 118 128 [weight=2, ];
E: 119 128 [weight=2, ];
E: 120 128 [weight=2, ];
E: 121 128 [weight=2, ];
E: 121 139 [weight=1, ];
E: 122 128 [weight=2, ];
E: 123 127 [weight=2, ];
E: 123 128 [weight=4, ];
E: 123 139 [weight=2, ];
E: 124 126 [weight=1, ];
E: 124 127 [weight=1, ];
E: 124 128 [weight=3, ];
E: 124 139 [weight=1, ];
E: 125 127 [weight=2, ];
E: 125 128 [weight=4, ];
E: 125 139 [weight=2, ];
E: 126 127 [weight=2, ];
E: 126 128 [weight=4, ];
E: 126 139 [weight=2, ];
E: 127 139 [weight=1, ];
E: 128 139 [weight=1, ];
E: 129 139 [weight=2, ];
E: 130 139 [weight=2, ];
E: 131 139 [weight=2, ];
E: 132 139 [weight=2, ];
E: 133 139 [weight=2, ];
E: 134 138 [weight=2, ];
E: 134 139 [weight=4, ];
E: 135 137 [weight=1, ];
E: 135 138 [weight=1, ];
E: 135 139 [weight=3, ];
E: 136 138 [weight=2, ];
E: 136 139 [weight=4, ];
E: 137 138 [weight=2, ];
E: 137 139 [weight=4, ];
