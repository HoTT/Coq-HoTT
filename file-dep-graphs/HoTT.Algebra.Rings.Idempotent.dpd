N: 23 "IsIdempotent" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 11 "IsOrthogonal_ind" [body=yes, kind=cnst, prop=yes, path="Idempotent", ];
N: 10 "IsOrthogonal_rec" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 12 "IsOrthogonal_rect" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 9 "IsOrthogonal_sind" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 21 "ishprop_isidempotent" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 5 "ishprop_isorthogonal" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 18 "isidempotent_complement" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 19 "isidempotent_one" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 17 "isidempotent_op" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 2 "isidempotent_plus_orthogonal" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 15 "isidempotent_rng_homo" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 20 "isidempotent_zero" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 1 "isorthogonal_complement" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 3 "isorthogonal_op" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 4 "isorthogonal_swap" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 6 "issig_IsOrthogonal" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 22 "rng_idem" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 8 "rng_idem_orth" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 7 "rng_idem_orth'" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 16 "rng_power_idem" [body=yes, kind=cnst, prop=no, path="Idempotent", ];
N: 14 "IsOrthogonal" [kind=inductive, prop=no, path="Idempotent", ];
N: 13 "Build_IsOrthogonal" [kind=construct, prop=no, path="Idempotent", ];
E: 1 13 [weight=1, ];
E: 1 14 [weight=1, ];
E: 1 18 [weight=2, ];
E: 1 22 [weight=2, ];
E: 1 23 [weight=2, ];
E: 2 4 [weight=1, ];
E: 2 14 [weight=2, ];
E: 2 22 [weight=2, ];
E: 2 23 [weight=6, ];
E: 3 13 [weight=1, ];
E: 3 14 [weight=3, ];
E: 3 17 [weight=4, ];
E: 3 23 [weight=4, ];
E: 4 13 [weight=1, ];
E: 4 14 [weight=3, ];
E: 4 23 [weight=4, ];
E: 5 6 [weight=1, ];
E: 5 14 [weight=2, ];
E: 5 23 [weight=4, ];
E: 6 13 [weight=8, ];
E: 6 14 [weight=12, ];
E: 6 23 [weight=4, ];
E: 7 14 [weight=2, ];
E: 7 23 [weight=4, ];
E: 8 14 [weight=2, ];
E: 8 23 [weight=4, ];
E: 9 13 [weight=2, ];
E: 9 14 [weight=4, ];
E: 9 23 [weight=4, ];
E: 10 12 [weight=1, ];
E: 10 13 [weight=1, ];
E: 10 14 [weight=3, ];
E: 10 23 [weight=4, ];
E: 11 13 [weight=2, ];
E: 11 14 [weight=4, ];
E: 11 23 [weight=4, ];
E: 12 13 [weight=2, ];
E: 12 14 [weight=4, ];
E: 12 23 [weight=4, ];
E: 13 23 [weight=2, ];
E: 14 23 [weight=2, ];
E: 15 23 [weight=3, ];
E: 16 22 [weight=1, ];
E: 16 23 [weight=2, ];
E: 17 23 [weight=3, ];
E: 18 22 [weight=1, ];
E: 18 23 [weight=4, ];
E: 19 23 [weight=1, ];
E: 20 23 [weight=1, ];
E: 21 23 [weight=2, ];
E: 22 23 [weight=2, ];
