N: 107 "Approximation_ind" [body=yes, kind=cnst, prop=yes, path="premetric", ];
N: 106 "Approximation_rec" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 108 "Approximation_rect" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 105 "Approximation_sind" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 70 "BinaryDup" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 67 "BinaryDup_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 98 "CauchyComplete" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 132 "Closeness" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 72 "Continuous" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 33 "Interval" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 29 "Interval_close" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 28 "Interval_premetric" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 31 "Interval_restrict" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 30 "Interval_restrict_pr" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 101 "IsLimit" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 100 "Lim" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 76 "Lipschitz" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 78 "NonExpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 120 "PreMetric_ind" [body=yes, kind=cnst, prop=yes, path="premetric", ];
N: 119 "PreMetric_rec" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 121 "PreMetric_rect" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 118 "PreMetric_sind" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 130 "Q_close" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 24 "Q_close_symm" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 18 "Q_premetric" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 7 "Q_recip_lipschitz" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 22 "Q_triangular" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 23 "Q_triangular_one" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 14 "Qabs_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 26 "Qclose_alt" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 25 "Qclose_neg" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 19 "Qclose_rounded" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 20 "Qclose_separating" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 21 "Qclose_separating_not_lt" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 11 "Qjoin_nonexpanding_l" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 10 "Qjoin_nonexpanding_r" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 13 "Qmeet_nonexpanding_l" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 12 "Qmeet_nonexpanding_r" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 9 "Qmult_lipschitz" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 17 "Qneg_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 16 "Qplus_nonexpanding_l" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 15 "Qplus_nonexpanding_r" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 8 "Qpos_upper_close" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 125 "Rounded" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 129 "Separated" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 127 "Triangular" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 74 "Uniform" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 102 "approx_eq" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 103 "approx_equiv" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 104 "approximate" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 79 "arrow_cauchy_complete" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 80 "arrow_lim" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 97 "cauchy_complete" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 131 "close" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 83 "close_arrow" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 82 "close_arrow_apply" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 81 "close_arrow_premetric" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 93 "close_prod" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 92 "close_prod_refl" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 87 "close_prod_rounded" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 88 "close_prod_rounded'" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 90 "close_prod_separated" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 91 "close_prod_symm" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 89 "close_prod_triangular" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 63 "const_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 71 "continuous" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 50 "continuous_compose" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 3 "equiv_lim_lim" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 40 "equiv_prod_assoc_inc_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 41 "equiv_prod_assoc_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 42 "equiv_prod_symm_inv_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 43 "equiv_prod_symm_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 4 "equiv_through_approx" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 5 "equiv_through_approx0" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 45 "fst_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 68 "id_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 32 "interval_proj" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 27 "interval_proj_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 99 "lim" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 2 "lim_same_distance" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 6 "limit_unique" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 75 "lipschitz" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 56 "lipschitz_compose" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 52 "lipschitz_compose_nonexpanding_l" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 53 "lipschitz_compose_nonexpanding_l'" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 54 "lipschitz_compose_nonexpanding_r" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 55 "lipschitz_compose_nonexpanding_r'" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 62 "lipschitz_const" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 59 "lipschitz_continuous" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 1 "lipschitz_lim_lipschitz" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 64 "lipschitz_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 61 "lipschitz_uniform" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 69 "map2" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 34 "map2_continuous" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 35 "map2_continuous'" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 36 "map2_lipschitz" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 37 "map2_lipschitz'" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 38 "map2_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 39 "map2_nonexpanding'" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 77 "non_expanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 57 "nonexpanding_compose" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 58 "nonexpanding_continuous" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 65 "nonexpanding_lipschitz" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 66 "nonexpanding_lipschitz'" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 47 "pair_nonexpanding_l" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 46 "pair_nonexpanding_r" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 111 "premetric_hset" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 117 "premetric_prop" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 116 "premetric_refl" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 112 "premetric_rounded" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 114 "premetric_separated" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 115 "premetric_symm" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 113 "premetric_triangular" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 84 "prod_cauchy_complete" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 85 "prod_lim" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 86 "prod_premetric" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 124 "rounded" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 94 "rounded_le" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 95 "rounded_le'" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 96 "rounded_plus" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 128 "separated" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 44 "snd_nonexpanding" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 126 "triangular" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 49 "uncurry_lipschitz" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 48 "uncurry_uniform" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 73 "uniform" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 51 "uniform_compose" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 60 "uniform_continuous" [body=yes, kind=cnst, prop=no, path="premetric", ];
N: 110 "Approximation" [kind=inductive, prop=no, path="premetric", ];
N: 123 "PreMetric" [kind=inductive, prop=no, path="premetric", ];
N: 109 "Build_Approximation" [kind=construct, prop=no, path="premetric", ];
N: 122 "Build_PreMetric" [kind=construct, prop=no, path="premetric", ];
E: 1 2 [weight=1, ];
E: 1 75 [weight=1, ];
E: 1 76 [weight=4, ];
E: 1 80 [weight=10, ];
E: 1 82 [weight=4, ];
E: 1 83 [weight=24, ];
E: 1 96 [weight=1, ];
E: 1 98 [weight=2, ];
E: 1 99 [weight=10, ];
E: 1 100 [weight=2, ];
E: 1 103 [weight=4, ];
E: 1 104 [weight=8, ];
E: 1 109 [weight=4, ];
E: 1 110 [weight=2, ];
E: 1 123 [weight=4, ];
E: 1 124 [weight=1, ];
E: 1 131 [weight=15, ];
E: 1 132 [weight=4, ];
E: 2 3 [weight=1, ];
E: 2 98 [weight=2, ];
E: 2 99 [weight=2, ];
E: 2 100 [weight=2, ];
E: 2 110 [weight=4, ];
E: 2 123 [weight=2, ];
E: 2 131 [weight=3, ];
E: 2 132 [weight=2, ];
E: 3 4 [weight=2, ];
E: 3 98 [weight=2, ];
E: 3 99 [weight=8, ];
E: 3 100 [weight=2, ];
E: 3 110 [weight=4, ];
E: 3 123 [weight=2, ];
E: 3 131 [weight=5, ];
E: 3 132 [weight=2, ];
E: 4 5 [weight=1, ];
E: 4 97 [weight=1, ];
E: 4 98 [weight=2, ];
E: 4 99 [weight=2, ];
E: 4 100 [weight=2, ];
E: 4 110 [weight=2, ];
E: 4 123 [weight=2, ];
E: 4 131 [weight=2, ];
E: 4 132 [weight=2, ];
E: 5 101 [weight=2, ];
E: 5 110 [weight=2, ];
E: 5 123 [weight=2, ];
E: 5 124 [weight=1, ];
E: 5 126 [weight=1, ];
E: 5 131 [weight=11, ];
E: 5 132 [weight=2, ];
E: 6 101 [weight=4, ];
E: 6 110 [weight=2, ];
E: 6 123 [weight=2, ];
E: 6 126 [weight=1, ];
E: 6 128 [weight=1, ];
E: 6 131 [weight=2, ];
E: 6 132 [weight=2, ];
E: 7 11 [weight=1, ];
E: 7 24 [weight=1, ];
E: 7 26 [weight=2, ];
E: 7 76 [weight=2, ];
E: 7 77 [weight=1, ];
E: 7 130 [weight=11, ];
E: 7 131 [weight=5, ];
E: 8 130 [weight=1, ];
E: 8 131 [weight=1, ];
E: 8 132 [weight=1, ];
E: 9 26 [weight=2, ];
E: 9 76 [weight=2, ];
E: 9 130 [weight=7, ];
E: 9 131 [weight=3, ];
E: 10 11 [weight=1, ];
E: 10 77 [weight=1, ];
E: 10 78 [weight=2, ];
E: 10 130 [weight=9, ];
E: 10 131 [weight=3, ];
E: 11 26 [weight=2, ];
E: 11 78 [weight=2, ];
E: 11 130 [weight=7, ];
E: 11 131 [weight=3, ];
E: 12 13 [weight=1, ];
E: 12 77 [weight=1, ];
E: 12 78 [weight=2, ];
E: 12 130 [weight=9, ];
E: 12 131 [weight=3, ];
E: 13 26 [weight=2, ];
E: 13 78 [weight=2, ];
E: 13 130 [weight=7, ];
E: 13 131 [weight=3, ];
E: 14 26 [weight=2, ];
E: 14 78 [weight=2, ];
E: 14 130 [weight=7, ];
E: 14 131 [weight=3, ];
E: 15 78 [weight=2, ];
E: 15 130 [weight=6, ];
E: 15 131 [weight=2, ];
E: 16 78 [weight=2, ];
E: 16 130 [weight=6, ];
E: 16 131 [weight=2, ];
E: 17 25 [weight=1, ];
E: 17 78 [weight=2, ];
E: 17 130 [weight=6, ];
E: 17 131 [weight=2, ];
E: 18 19 [weight=1, ];
E: 18 20 [weight=1, ];
E: 18 22 [weight=1, ];
E: 18 24 [weight=1, ];
E: 18 26 [weight=1, ];
E: 18 122 [weight=1, ];
E: 18 123 [weight=1, ];
E: 18 130 [weight=4, ];
E: 18 131 [weight=2, ];
E: 19 26 [weight=4, ];
E: 19 125 [weight=2, ];
E: 19 130 [weight=24, ];
E: 19 131 [weight=22, ];
E: 20 21 [weight=2, ];
E: 20 24 [weight=1, ];
E: 20 129 [weight=2, ];
E: 20 130 [weight=3, ];
E: 20 131 [weight=1, ];
E: 21 24 [weight=1, ];
E: 21 26 [weight=1, ];
E: 21 130 [weight=6, ];
E: 21 131 [weight=6, ];
E: 22 23 [weight=1, ];
E: 22 24 [weight=1, ];
E: 22 127 [weight=2, ];
E: 22 130 [weight=4, ];
E: 22 131 [weight=2, ];
E: 23 130 [weight=11, ];
E: 23 131 [weight=6, ];
E: 24 130 [weight=7, ];
E: 24 131 [weight=4, ];
E: 25 26 [weight=4, ];
E: 25 130 [weight=12, ];
E: 25 131 [weight=12, ];
E: 26 130 [weight=4, ];
E: 26 131 [weight=4, ];
E: 27 29 [weight=2, ];
E: 27 32 [weight=1, ];
E: 27 33 [weight=4, ];
E: 27 78 [weight=1, ];
E: 27 131 [weight=1, ];
E: 27 132 [weight=2, ];
E: 28 29 [weight=25, ];
E: 28 32 [weight=16, ];
E: 28 33 [weight=39, ];
E: 28 122 [weight=1, ];
E: 28 123 [weight=3, ];
E: 28 124 [weight=2, ];
E: 28 125 [weight=1, ];
E: 28 126 [weight=1, ];
E: 28 127 [weight=1, ];
E: 28 128 [weight=1, ];
E: 28 129 [weight=1, ];
E: 28 131 [weight=18, ];
E: 28 132 [weight=2, ];
E: 29 32 [weight=2, ];
E: 29 33 [weight=3, ];
E: 29 131 [weight=1, ];
E: 29 132 [weight=3, ];
E: 30 31 [weight=2, ];
E: 30 33 [weight=2, ];
E: 31 33 [weight=1, ];
E: 32 33 [weight=1, ];
E: 34 35 [weight=1, ];
E: 34 69 [weight=1, ];
E: 34 72 [weight=3, ];
E: 34 93 [weight=2, ];
E: 34 125 [weight=2, ];
E: 34 132 [weight=8, ];
E: 35 69 [weight=22, ];
E: 35 71 [weight=2, ];
E: 35 72 [weight=6, ];
E: 35 93 [weight=17, ];
E: 35 94 [weight=2, ];
E: 35 125 [weight=4, ];
E: 35 131 [weight=31, ];
E: 35 132 [weight=8, ];
E: 36 37 [weight=1, ];
E: 36 69 [weight=1, ];
E: 36 76 [weight=3, ];
E: 36 93 [weight=2, ];
E: 36 125 [weight=2, ];
E: 36 132 [weight=8, ];
E: 37 69 [weight=10, ];
E: 37 75 [weight=2, ];
E: 37 76 [weight=6, ];
E: 37 93 [weight=5, ];
E: 37 94 [weight=2, ];
E: 37 125 [weight=4, ];
E: 37 131 [weight=7, ];
E: 37 132 [weight=8, ];
E: 38 39 [weight=1, ];
E: 38 69 [weight=1, ];
E: 38 78 [weight=3, ];
E: 38 93 [weight=2, ];
E: 38 132 [weight=8, ];
E: 39 69 [weight=10, ];
E: 39 77 [weight=2, ];
E: 39 78 [weight=6, ];
E: 39 93 [weight=5, ];
E: 39 131 [weight=7, ];
E: 39 132 [weight=8, ];
E: 40 78 [weight=2, ];
E: 40 93 [weight=13, ];
E: 40 131 [weight=10, ];
E: 40 132 [weight=6, ];
E: 41 78 [weight=2, ];
E: 41 93 [weight=13, ];
E: 41 131 [weight=10, ];
E: 41 132 [weight=6, ];
E: 42 78 [weight=2, ];
E: 42 93 [weight=5, ];
E: 42 131 [weight=5, ];
E: 42 132 [weight=4, ];
E: 43 78 [weight=2, ];
E: 43 93 [weight=5, ];
E: 43 131 [weight=5, ];
E: 43 132 [weight=4, ];
E: 44 78 [weight=2, ];
E: 44 93 [weight=3, ];
E: 44 131 [weight=2, ];
E: 44 132 [weight=4, ];
E: 45 78 [weight=2, ];
E: 45 93 [weight=3, ];
E: 45 131 [weight=2, ];
E: 45 132 [weight=4, ];
E: 46 78 [weight=2, ];
E: 46 93 [weight=2, ];
E: 46 131 [weight=7, ];
E: 46 132 [weight=4, ];
E: 47 78 [weight=2, ];
E: 47 93 [weight=2, ];
E: 47 131 [weight=7, ];
E: 47 132 [weight=4, ];
E: 48 73 [weight=2, ];
E: 48 74 [weight=6, ];
E: 48 93 [weight=3, ];
E: 48 94 [weight=2, ];
E: 48 125 [weight=4, ];
E: 48 126 [weight=1, ];
E: 48 127 [weight=2, ];
E: 48 131 [weight=5, ];
E: 48 132 [weight=6, ];
E: 49 75 [weight=2, ];
E: 49 76 [weight=6, ];
E: 49 93 [weight=3, ];
E: 49 126 [weight=1, ];
E: 49 127 [weight=2, ];
E: 49 131 [weight=5, ];
E: 49 132 [weight=6, ];
E: 50 71 [weight=2, ];
E: 50 72 [weight=6, ];
E: 50 131 [weight=25, ];
E: 50 132 [weight=6, ];
E: 51 73 [weight=2, ];
E: 51 74 [weight=6, ];
E: 51 131 [weight=2, ];
E: 51 132 [weight=6, ];
E: 52 53 [weight=1, ];
E: 52 76 [weight=3, ];
E: 52 78 [weight=2, ];
E: 52 132 [weight=6, ];
E: 53 56 [weight=1, ];
E: 53 65 [weight=1, ];
E: 53 76 [weight=4, ];
E: 53 78 [weight=2, ];
E: 53 132 [weight=6, ];
E: 54 55 [weight=1, ];
E: 54 76 [weight=3, ];
E: 54 78 [weight=2, ];
E: 54 132 [weight=6, ];
E: 55 56 [weight=1, ];
E: 55 65 [weight=1, ];
E: 55 76 [weight=5, ];
E: 55 78 [weight=2, ];
E: 55 132 [weight=6, ];
E: 56 76 [weight=6, ];
E: 56 131 [weight=6, ];
E: 56 132 [weight=6, ];
E: 57 77 [weight=2, ];
E: 57 78 [weight=6, ];
E: 57 131 [weight=1, ];
E: 57 132 [weight=6, ];
E: 58 60 [weight=1, ];
E: 58 61 [weight=1, ];
E: 58 65 [weight=1, ];
E: 58 72 [weight=1, ];
E: 58 78 [weight=2, ];
E: 58 132 [weight=4, ];
E: 59 60 [weight=1, ];
E: 59 61 [weight=1, ];
E: 59 72 [weight=1, ];
E: 59 76 [weight=2, ];
E: 59 132 [weight=4, ];
E: 60 72 [weight=2, ];
E: 60 73 [weight=1, ];
E: 60 74 [weight=2, ];
E: 60 131 [weight=4, ];
E: 60 132 [weight=4, ];
E: 61 74 [weight=2, ];
E: 61 75 [weight=1, ];
E: 61 76 [weight=2, ];
E: 61 131 [weight=3, ];
E: 61 132 [weight=4, ];
E: 62 76 [weight=2, ];
E: 62 131 [weight=3, ];
E: 62 132 [weight=4, ];
E: 63 78 [weight=2, ];
E: 63 131 [weight=3, ];
E: 63 132 [weight=4, ];
E: 64 75 [weight=1, ];
E: 64 76 [weight=2, ];
E: 64 78 [weight=2, ];
E: 64 131 [weight=2, ];
E: 64 132 [weight=4, ];
E: 65 66 [weight=1, ];
E: 65 76 [weight=1, ];
E: 65 78 [weight=2, ];
E: 65 132 [weight=4, ];
E: 66 76 [weight=2, ];
E: 66 77 [weight=1, ];
E: 66 78 [weight=2, ];
E: 66 131 [weight=2, ];
E: 66 132 [weight=4, ];
E: 67 70 [weight=6, ];
E: 67 78 [weight=2, ];
E: 67 93 [weight=2, ];
E: 67 131 [weight=3, ];
E: 67 132 [weight=2, ];
E: 68 78 [weight=2, ];
E: 68 131 [weight=1, ];
E: 68 132 [weight=2, ];
E: 71 72 [weight=2, ];
E: 71 131 [weight=2, ];
E: 71 132 [weight=4, ];
E: 72 131 [weight=2, ];
E: 72 132 [weight=4, ];
E: 73 74 [weight=2, ];
E: 73 131 [weight=2, ];
E: 73 132 [weight=4, ];
E: 74 131 [weight=2, ];
E: 74 132 [weight=4, ];
E: 75 76 [weight=2, ];
E: 75 131 [weight=2, ];
E: 75 132 [weight=4, ];
E: 76 131 [weight=2, ];
E: 76 132 [weight=4, ];
E: 77 78 [weight=2, ];
E: 77 131 [weight=2, ];
E: 77 132 [weight=4, ];
E: 78 131 [weight=2, ];
E: 78 132 [weight=4, ];
E: 79 80 [weight=5, ];
E: 79 82 [weight=5, ];
E: 79 83 [weight=23, ];
E: 79 97 [weight=1, ];
E: 79 98 [weight=4, ];
E: 79 99 [weight=7, ];
E: 79 100 [weight=2, ];
E: 79 101 [weight=2, ];
E: 79 103 [weight=5, ];
E: 79 104 [weight=10, ];
E: 79 109 [weight=5, ];
E: 79 110 [weight=2, ];
E: 79 123 [weight=2, ];
E: 79 131 [weight=6, ];
E: 79 132 [weight=2, ];
E: 80 82 [weight=1, ];
E: 80 83 [weight=6, ];
E: 80 99 [weight=1, ];
E: 80 100 [weight=4, ];
E: 80 103 [weight=1, ];
E: 80 104 [weight=2, ];
E: 80 109 [weight=1, ];
E: 80 110 [weight=1, ];
E: 80 123 [weight=2, ];
E: 80 132 [weight=2, ];
E: 81 82 [weight=1, ];
E: 81 83 [weight=31, ];
E: 81 96 [weight=1, ];
E: 81 122 [weight=1, ];
E: 81 123 [weight=3, ];
E: 81 125 [weight=1, ];
E: 81 126 [weight=1, ];
E: 81 127 [weight=1, ];
E: 81 128 [weight=1, ];
E: 81 129 [weight=1, ];
E: 81 131 [weight=82, ];
E: 81 132 [weight=2, ];
E: 82 83 [weight=2, ];
E: 82 96 [weight=1, ];
E: 82 123 [weight=2, ];
E: 82 131 [weight=12, ];
E: 82 132 [weight=2, ];
E: 83 131 [weight=1, ];
E: 83 132 [weight=3, ];
E: 84 85 [weight=5, ];
E: 84 93 [weight=9, ];
E: 84 97 [weight=2, ];
E: 84 98 [weight=6, ];
E: 84 99 [weight=3, ];
E: 84 100 [weight=4, ];
E: 84 101 [weight=1, ];
E: 84 109 [weight=2, ];
E: 84 110 [weight=1, ];
E: 84 131 [weight=6, ];
E: 84 132 [weight=4, ];
E: 85 93 [weight=5, ];
E: 85 99 [weight=2, ];
E: 85 100 [weight=6, ];
E: 85 109 [weight=2, ];
E: 85 110 [weight=1, ];
E: 85 131 [weight=4, ];
E: 85 132 [weight=4, ];
E: 86 87 [weight=1, ];
E: 86 89 [weight=1, ];
E: 86 90 [weight=1, ];
E: 86 91 [weight=1, ];
E: 86 92 [weight=1, ];
E: 86 93 [weight=2, ];
E: 86 122 [weight=1, ];
E: 86 123 [weight=5, ];
E: 86 131 [weight=6, ];
E: 86 132 [weight=4, ];
E: 87 88 [weight=1, ];
E: 87 93 [weight=1, ];
E: 87 125 [weight=3, ];
E: 87 131 [weight=4, ];
E: 87 132 [weight=4, ];
E: 88 93 [weight=24, ];
E: 88 94 [weight=2, ];
E: 88 96 [weight=2, ];
E: 88 124 [weight=2, ];
E: 88 125 [weight=6, ];
E: 88 131 [weight=56, ];
E: 88 132 [weight=4, ];
E: 89 93 [weight=4, ];
E: 89 126 [weight=2, ];
E: 89 127 [weight=6, ];
E: 89 131 [weight=8, ];
E: 89 132 [weight=4, ];
E: 90 93 [weight=3, ];
E: 90 128 [weight=2, ];
E: 90 129 [weight=6, ];
E: 90 131 [weight=3, ];
E: 90 132 [weight=4, ];
E: 91 93 [weight=3, ];
E: 91 131 [weight=11, ];
E: 91 132 [weight=4, ];
E: 92 93 [weight=1, ];
E: 92 131 [weight=7, ];
E: 92 132 [weight=4, ];
E: 93 131 [weight=2, ];
E: 93 132 [weight=5, ];
E: 94 95 [weight=1, ];
E: 94 125 [weight=1, ];
E: 94 131 [weight=2, ];
E: 94 132 [weight=1, ];
E: 95 96 [weight=1, ];
E: 95 125 [weight=2, ];
E: 95 131 [weight=6, ];
E: 95 132 [weight=2, ];
E: 96 124 [weight=1, ];
E: 96 125 [weight=2, ];
E: 96 131 [weight=9, ];
E: 96 132 [weight=2, ];
E: 97 98 [weight=2, ];
E: 97 99 [weight=1, ];
E: 97 100 [weight=2, ];
E: 97 101 [weight=1, ];
E: 97 110 [weight=1, ];
E: 97 132 [weight=2, ];
E: 98 99 [weight=1, ];
E: 98 100 [weight=2, ];
E: 98 101 [weight=1, ];
E: 98 110 [weight=1, ];
E: 98 132 [weight=2, ];
E: 99 100 [weight=2, ];
E: 99 110 [weight=1, ];
E: 99 132 [weight=2, ];
E: 100 110 [weight=1, ];
E: 100 132 [weight=2, ];
E: 101 110 [weight=2, ];
E: 101 131 [weight=1, ];
E: 101 132 [weight=2, ];
E: 102 109 [weight=7, ];
E: 102 110 [weight=8, ];
E: 102 131 [weight=10, ];
E: 102 132 [weight=2, ];
E: 103 110 [weight=2, ];
E: 103 131 [weight=1, ];
E: 103 132 [weight=2, ];
E: 104 110 [weight=2, ];
E: 104 132 [weight=2, ];
E: 105 109 [weight=2, ];
E: 105 110 [weight=4, ];
E: 105 131 [weight=2, ];
E: 105 132 [weight=2, ];
E: 106 108 [weight=1, ];
E: 106 109 [weight=1, ];
E: 106 110 [weight=3, ];
E: 106 131 [weight=1, ];
E: 106 132 [weight=2, ];
E: 107 109 [weight=2, ];
E: 107 110 [weight=4, ];
E: 107 131 [weight=2, ];
E: 107 132 [weight=2, ];
E: 108 109 [weight=2, ];
E: 108 110 [weight=4, ];
E: 108 131 [weight=2, ];
E: 108 132 [weight=2, ];
E: 109 131 [weight=1, ];
E: 109 132 [weight=1, ];
E: 110 131 [weight=1, ];
E: 110 132 [weight=1, ];
E: 111 123 [weight=2, ];
E: 111 128 [weight=1, ];
E: 111 131 [weight=3, ];
E: 111 132 [weight=2, ];
E: 112 123 [weight=2, ];
E: 112 125 [weight=1, ];
E: 112 132 [weight=2, ];
E: 113 123 [weight=2, ];
E: 113 127 [weight=1, ];
E: 113 132 [weight=2, ];
E: 114 123 [weight=2, ];
E: 114 129 [weight=1, ];
E: 114 132 [weight=2, ];
E: 115 123 [weight=2, ];
E: 115 131 [weight=1, ];
E: 115 132 [weight=2, ];
E: 116 123 [weight=2, ];
E: 116 131 [weight=1, ];
E: 116 132 [weight=2, ];
E: 117 123 [weight=2, ];
E: 117 131 [weight=1, ];
E: 117 132 [weight=2, ];
E: 118 122 [weight=2, ];
E: 118 123 [weight=4, ];
E: 118 125 [weight=2, ];
E: 118 127 [weight=2, ];
E: 118 129 [weight=2, ];
E: 118 131 [weight=6, ];
E: 118 132 [weight=2, ];
E: 119 121 [weight=1, ];
E: 119 122 [weight=1, ];
E: 119 123 [weight=3, ];
E: 119 125 [weight=1, ];
E: 119 127 [weight=1, ];
E: 119 129 [weight=1, ];
E: 119 131 [weight=3, ];
E: 119 132 [weight=2, ];
E: 120 122 [weight=2, ];
E: 120 123 [weight=4, ];
E: 120 125 [weight=2, ];
E: 120 127 [weight=2, ];
E: 120 129 [weight=2, ];
E: 120 131 [weight=6, ];
E: 120 132 [weight=2, ];
E: 121 122 [weight=2, ];
E: 121 123 [weight=4, ];
E: 121 125 [weight=2, ];
E: 121 127 [weight=2, ];
E: 121 129 [weight=2, ];
E: 121 131 [weight=6, ];
E: 121 132 [weight=2, ];
E: 122 125 [weight=1, ];
E: 122 127 [weight=1, ];
E: 122 129 [weight=1, ];
E: 122 131 [weight=3, ];
E: 122 132 [weight=1, ];
E: 123 125 [weight=1, ];
E: 123 127 [weight=1, ];
E: 123 129 [weight=1, ];
E: 123 131 [weight=3, ];
E: 123 132 [weight=1, ];
E: 124 125 [weight=2, ];
E: 124 131 [weight=2, ];
E: 124 132 [weight=2, ];
E: 125 131 [weight=2, ];
E: 125 132 [weight=2, ];
E: 126 127 [weight=2, ];
E: 126 131 [weight=3, ];
E: 126 132 [weight=2, ];
E: 127 131 [weight=3, ];
E: 127 132 [weight=2, ];
E: 128 129 [weight=2, ];
E: 128 131 [weight=1, ];
E: 128 132 [weight=2, ];
E: 129 131 [weight=1, ];
E: 129 132 [weight=2, ];
E: 130 132 [weight=1, ];
E: 131 132 [weight=2, ];
