N: 66 "AbSES" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 80 "AbSES'_ind" [body=yes, kind=cnst, prop=yes, path="Core", ];
N: 79 "AbSES'_rec" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 81 "AbSES'_rect" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 78 "AbSES'_sind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 23 "AbSESMorphism_ind" [body=yes, kind=cnst, prop=yes, path="Core", ];
N: 22 "AbSESMorphism_rec" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 24 "AbSESMorphism_rect" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 21 "AbSESMorphism_sind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 32 "abses_ap_fmap" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 2 "abses_cokernel_iso" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 1 "abses_cokernel_iso_inv_beta" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 29 "abses_endomorphism_trivial" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 6 "abses_from_inclusion" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 3 "abses_from_surjection" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 5 "abses_kernel_iso" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 4 "abses_kernel_iso_inv_beta" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 14 "abses_morphism_id" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 38 "abses_path_compose_beta" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 59 "abses_path_data" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 50 "abses_path_data_1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 39 "abses_path_data_V" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 49 "abses_path_data_compose" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 37 "abses_path_data_compose_beta" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 47 "abses_path_data_inverse" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 65 "abses_path_data_iso" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 58 "abses_path_data_to_iso" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 13 "absesmorphism_compose" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 20 "component1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 19 "component2" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 18 "component3" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 56 "equiv_path_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 40 "equiv_path_absesV_1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 41 "equiv_path_abses_1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 57 "equiv_path_abses_data" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 63 "equiv_path_abses_iso" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 36 "equiv_path_data_homotopy" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 30 "equiv_ptransformation_phomotopy" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 42 "hasmorext_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 27 "hom_loops_data_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 7 "iff_abses_trivial_split" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 76 "inclusion" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 48 "is01cat_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 53 "is01cat_abses_path_data" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 46 "is0gpd_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 52 "is0gpd_abses_path_data" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 44 "is1cat_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 43 "is1gpd_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 45 "is2graph_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 68 "iscomplex_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 74 "isembedding_inclusion" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 72 "isexact_inclusion_projection" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 51 "isgraph_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 54 "isgraph_abses_path_data" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 67 "ispointed_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 15 "issig_AbSESMorphism" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 69 "issig_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 71 "issig_abses_do_not_print" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 70 "issig_abses_helper" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 73 "issurjection_projection" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 62 "istrunc_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 17 "left_square" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 28 "loops_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 77 "middle" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 55 "path_abses" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 61 "path_abses_iso" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 35 "pmap_abses_const" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 33 "pmap_abses_const_to_pointed" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 75 "projection" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 8 "projection_split_beta" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 9 "projection_split_iso" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 10 "projection_split_iso1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 12 "projection_split_to_kernel" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 11 "projection_split_to_kernel_beta" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 16 "right_square" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 60 "short_five_lemma" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 64 "shuffle_abses_path_data_iso" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 34 "to_pointed" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 31 "to_pointed_compose" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 83 "AbSES'" [kind=inductive, prop=no, path="Core", ];
N: 26 "AbSESMorphism" [kind=inductive, prop=no, path="Core", ];
N: 82 "Build_AbSES" [kind=construct, prop=no, path="Core", ];
N: 25 "Build_AbSESMorphism" [kind=construct, prop=no, path="Core", ];
E: 1 2 [weight=5, ];
E: 3 66 [weight=1, ];
E: 3 82 [weight=1, ];
E: 4 5 [weight=7, ];
E: 6 66 [weight=1, ];
E: 6 82 [weight=1, ];
E: 7 8 [weight=1, ];
E: 7 9 [weight=4, ];
E: 7 63 [weight=1, ];
E: 7 65 [weight=5, ];
E: 7 66 [weight=56, ];
E: 7 67 [weight=53, ];
E: 7 83 [weight=2, ];
E: 8 9 [weight=2, ];
E: 8 10 [weight=2, ];
E: 8 11 [weight=1, ];
E: 8 12 [weight=2, ];
E: 8 66 [weight=2, ];
E: 9 10 [weight=1, ];
E: 9 66 [weight=2, ];
E: 10 12 [weight=6, ];
E: 10 66 [weight=2, ];
E: 11 12 [weight=4, ];
E: 11 66 [weight=2, ];
E: 12 66 [weight=2, ];
E: 13 25 [weight=1, ];
E: 13 26 [weight=5, ];
E: 13 66 [weight=6, ];
E: 14 25 [weight=1, ];
E: 14 26 [weight=1, ];
E: 14 66 [weight=2, ];
E: 15 25 [weight=4, ];
E: 15 26 [weight=19, ];
E: 15 66 [weight=4, ];
E: 16 26 [weight=2, ];
E: 16 66 [weight=4, ];
E: 17 26 [weight=2, ];
E: 17 66 [weight=4, ];
E: 18 26 [weight=2, ];
E: 18 66 [weight=4, ];
E: 19 26 [weight=2, ];
E: 19 66 [weight=4, ];
E: 20 26 [weight=2, ];
E: 20 66 [weight=4, ];
E: 21 25 [weight=2, ];
E: 21 26 [weight=4, ];
E: 21 66 [weight=4, ];
E: 22 24 [weight=1, ];
E: 22 25 [weight=1, ];
E: 22 26 [weight=3, ];
E: 22 66 [weight=4, ];
E: 23 25 [weight=2, ];
E: 23 26 [weight=4, ];
E: 23 66 [weight=4, ];
E: 24 25 [weight=2, ];
E: 24 26 [weight=4, ];
E: 24 66 [weight=4, ];
E: 25 66 [weight=2, ];
E: 26 66 [weight=2, ];
E: 27 59 [weight=1, ];
E: 27 66 [weight=2, ];
E: 27 68 [weight=2, ];
E: 27 83 [weight=4, ];
E: 28 29 [weight=1, ];
E: 28 56 [weight=1, ];
E: 28 59 [weight=1, ];
E: 28 66 [weight=26, ];
E: 28 67 [weight=24, ];
E: 29 66 [weight=633, ];
E: 29 67 [weight=633, ];
E: 30 34 [weight=211, ];
E: 30 36 [weight=4, ];
E: 30 37 [weight=1, ];
E: 30 39 [weight=1, ];
E: 30 43 [weight=2, ];
E: 30 44 [weight=12, ];
E: 30 45 [weight=8, ];
E: 30 46 [weight=10, ];
E: 30 47 [weight=16, ];
E: 30 48 [weight=16, ];
E: 30 49 [weight=11, ];
E: 30 51 [weight=27, ];
E: 30 63 [weight=18, ];
E: 30 65 [weight=2, ];
E: 30 66 [weight=650, ];
E: 30 67 [weight=70, ];
E: 30 83 [weight=15, ];
E: 31 32 [weight=1, ];
E: 31 34 [weight=95, ];
E: 31 37 [weight=1, ];
E: 31 42 [weight=1, ];
E: 31 44 [weight=9, ];
E: 31 45 [weight=10, ];
E: 31 48 [weight=80, ];
E: 31 49 [weight=5, ];
E: 31 51 [weight=81, ];
E: 31 52 [weight=1, ];
E: 31 53 [weight=1, ];
E: 31 63 [weight=15, ];
E: 31 65 [weight=2, ];
E: 31 66 [weight=465, ];
E: 31 67 [weight=89, ];
E: 31 83 [weight=11, ];
E: 32 41 [weight=1, ];
E: 32 42 [weight=1, ];
E: 32 44 [weight=9, ];
E: 32 45 [weight=7, ];
E: 32 46 [weight=2, ];
E: 32 48 [weight=16, ];
E: 32 50 [weight=1, ];
E: 32 51 [weight=15, ];
E: 32 52 [weight=1, ];
E: 32 63 [weight=28, ];
E: 32 65 [weight=15, ];
E: 32 66 [weight=41, ];
E: 32 83 [weight=35, ];
E: 33 34 [weight=9, ];
E: 33 35 [weight=9, ];
E: 33 41 [weight=1, ];
E: 33 66 [weight=74, ];
E: 33 83 [weight=3, ];
E: 34 48 [weight=4, ];
E: 34 51 [weight=4, ];
E: 34 63 [weight=1, ];
E: 34 66 [weight=11, ];
E: 34 67 [weight=6, ];
E: 35 48 [weight=6, ];
E: 35 51 [weight=6, ];
E: 35 66 [weight=11, ];
E: 35 67 [weight=7, ];
E: 36 51 [weight=3, ];
E: 36 63 [weight=1, ];
E: 36 66 [weight=8, ];
E: 37 38 [weight=1, ];
E: 37 49 [weight=6, ];
E: 37 63 [weight=38, ];
E: 37 65 [weight=14, ];
E: 37 66 [weight=6, ];
E: 37 83 [weight=20, ];
E: 38 41 [weight=1, ];
E: 38 49 [weight=8, ];
E: 38 50 [weight=5, ];
E: 38 63 [weight=23, ];
E: 38 65 [weight=1, ];
E: 38 66 [weight=34, ];
E: 38 83 [weight=5, ];
E: 39 40 [weight=1, ];
E: 39 41 [weight=1, ];
E: 39 42 [weight=1, ];
E: 39 43 [weight=1, ];
E: 39 44 [weight=1, ];
E: 39 45 [weight=1, ];
E: 39 46 [weight=3, ];
E: 39 47 [weight=9, ];
E: 39 48 [weight=7, ];
E: 39 51 [weight=4, ];
E: 39 63 [weight=30, ];
E: 39 65 [weight=9, ];
E: 39 66 [weight=5, ];
E: 39 83 [weight=41, ];
E: 40 41 [weight=1, ];
E: 40 48 [weight=3, ];
E: 40 63 [weight=7, ];
E: 40 65 [weight=5, ];
E: 40 66 [weight=2, ];
E: 40 83 [weight=8, ];
E: 41 50 [weight=7, ];
E: 41 63 [weight=11, ];
E: 41 65 [weight=3, ];
E: 41 66 [weight=2, ];
E: 41 83 [weight=12, ];
E: 42 44 [weight=14, ];
E: 42 45 [weight=11, ];
E: 42 48 [weight=2, ];
E: 42 51 [weight=24, ];
E: 42 52 [weight=3, ];
E: 42 53 [weight=3, ];
E: 42 65 [weight=10, ];
E: 42 66 [weight=10, ];
E: 42 83 [weight=3, ];
E: 43 44 [weight=6, ];
E: 43 45 [weight=4, ];
E: 43 46 [weight=6, ];
E: 43 48 [weight=10, ];
E: 43 51 [weight=8, ];
E: 43 66 [weight=8, ];
E: 44 45 [weight=13, ];
E: 44 48 [weight=20, ];
E: 44 51 [weight=41, ];
E: 44 52 [weight=4, ];
E: 44 53 [weight=4, ];
E: 44 65 [weight=5, ];
E: 44 66 [weight=53, ];
E: 44 83 [weight=8, ];
E: 45 51 [weight=1, ];
E: 45 54 [weight=1, ];
E: 45 66 [weight=3, ];
E: 46 47 [weight=1, ];
E: 46 48 [weight=2, ];
E: 46 51 [weight=2, ];
E: 46 66 [weight=4, ];
E: 47 51 [weight=3, ];
E: 47 66 [weight=4, ];
E: 48 49 [weight=1, ];
E: 48 50 [weight=1, ];
E: 48 51 [weight=4, ];
E: 48 66 [weight=5, ];
E: 49 51 [weight=5, ];
E: 49 66 [weight=6, ];
E: 50 51 [weight=1, ];
E: 50 66 [weight=2, ];
E: 51 65 [weight=1, ];
E: 51 66 [weight=2, ];
E: 52 53 [weight=1, ];
E: 52 54 [weight=1, ];
E: 52 65 [weight=1, ];
E: 52 66 [weight=4, ];
E: 53 54 [weight=1, ];
E: 53 65 [weight=1, ];
E: 53 66 [weight=4, ];
E: 54 65 [weight=1, ];
E: 54 66 [weight=4, ];
E: 55 56 [weight=1, ];
E: 55 66 [weight=5, ];
E: 56 57 [weight=1, ];
E: 56 59 [weight=2, ];
E: 56 63 [weight=1, ];
E: 56 65 [weight=1, ];
E: 56 66 [weight=5, ];
E: 56 83 [weight=1, ];
E: 57 58 [weight=4, ];
E: 57 59 [weight=6, ];
E: 57 65 [weight=10, ];
E: 57 66 [weight=4, ];
E: 58 59 [weight=2, ];
E: 58 60 [weight=1, ];
E: 58 65 [weight=1, ];
E: 58 66 [weight=4, ];
E: 59 66 [weight=4, ];
E: 60 66 [weight=4, ];
E: 60 73 [weight=1, ];
E: 61 63 [weight=1, ];
E: 61 66 [weight=5, ];
E: 62 63 [weight=1, ];
E: 62 65 [weight=1, ];
E: 62 66 [weight=4, ];
E: 62 83 [weight=1, ];
E: 63 64 [weight=1, ];
E: 63 65 [weight=2, ];
E: 63 69 [weight=94, ];
E: 63 83 [weight=8, ];
E: 64 65 [weight=1, ];
E: 64 66 [weight=4, ];
E: 65 66 [weight=4, ];
E: 66 67 [weight=1, ];
E: 66 83 [weight=1, ];
E: 67 82 [weight=1, ];
E: 67 83 [weight=1, ];
E: 68 83 [weight=2, ];
E: 69 70 [weight=1, ];
E: 69 71 [weight=1, ];
E: 69 83 [weight=2, ];
E: 71 82 [weight=8, ];
E: 71 83 [weight=12, ];
E: 72 83 [weight=2, ];
E: 73 83 [weight=2, ];
E: 74 83 [weight=2, ];
E: 75 83 [weight=2, ];
E: 76 83 [weight=2, ];
E: 77 83 [weight=2, ];
E: 78 82 [weight=2, ];
E: 78 83 [weight=4, ];
E: 79 81 [weight=1, ];
E: 79 82 [weight=1, ];
E: 79 83 [weight=3, ];
E: 80 82 [weight=2, ];
E: 80 83 [weight=4, ];
E: 81 82 [weight=2, ];
E: 81 83 [weight=4, ];
