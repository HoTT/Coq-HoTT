N: 7 "contr_interval" [body=yes, kind=cnst, prop=no, path="Interval", ];
N: 2 "interval_ind" [body=yes, kind=cnst, prop=no, path="Interval.Interval", ];
N: 1 "interval_ind_beta_seg" [body=no, kind=cnst, prop=no, path="Interval.Interval", ];
N: 9 "interval_rec" [body=yes, kind=cnst, prop=no, path="Interval", ];
N: 8 "interval_rec_beta_seg" [body=yes, kind=cnst, prop=no, path="Interval", ];
N: 3 "seg" [body=no, kind=cnst, prop=no, path="Interval.Interval", ];
N: 6 "interval" [kind=inductive, prop=no, path="Interval.Interval", ];
N: 5 "zero" [kind=construct, prop=no, path="Interval.Interval", ];
N: 4 "one" [kind=construct, prop=no, path="Interval.Interval", ];
E: 1 2 [weight=3, ];
E: 1 3 [weight=3, ];
E: 1 4 [weight=7, ];
E: 1 5 [weight=5, ];
E: 1 6 [weight=4, ];
E: 2 3 [weight=5, ];
E: 2 4 [weight=12, ];
E: 2 5 [weight=7, ];
E: 2 6 [weight=10, ];
E: 3 4 [weight=1, ];
E: 3 5 [weight=1, ];
E: 3 6 [weight=1, ];
E: 7 2 [weight=1, ];
E: 7 3 [weight=6, ];
E: 7 4 [weight=5, ];
E: 7 5 [weight=14, ];
E: 7 6 [weight=14, ];
E: 8 1 [weight=1, ];
E: 8 2 [weight=17, ];
E: 8 3 [weight=53, ];
E: 8 4 [weight=62, ];
E: 8 5 [weight=62, ];
E: 8 6 [weight=99, ];
E: 8 9 [weight=6, ];
E: 9 2 [weight=1, ];
E: 9 3 [weight=2, ];
E: 9 4 [weight=2, ];
E: 9 5 [weight=2, ];
E: 9 6 [weight=5, ];
