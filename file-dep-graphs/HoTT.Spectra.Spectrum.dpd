N: 12 "IsSpectrum" [body=yes, kind=cnst, prop=no, path="Spectrum", ];
N: 17 "Prespectrum_ind" [body=yes, kind=cnst, prop=yes, path="Spectrum", ];
N: 16 "Prespectrum_rec" [body=yes, kind=cnst, prop=no, path="Spectrum", ];
N: 18 "Prespectrum_rect" [body=yes, kind=cnst, prop=no, path="Spectrum", ];
N: 15 "Prespectrum_sind" [body=yes, kind=cnst, prop=no, path="Spectrum", ];
N: 6 "Spectrum_ind" [body=yes, kind=cnst, prop=yes, path="Spectrum", ];
N: 5 "Spectrum_rec" [body=yes, kind=cnst, prop=no, path="Spectrum", ];
N: 7 "Spectrum_rect" [body=yes, kind=cnst, prop=no, path="Spectrum", ];
N: 4 "Spectrum_sind" [body=yes, kind=cnst, prop=no, path="Spectrum", ];
N: 14 "deloop" [body=yes, kind=cnst, prop=no, path="Spectrum", ];
N: 10 "equiv_glue" [body=yes, kind=cnst, prop=no, path="Spectrum", ];
N: 13 "glue" [body=yes, kind=cnst, prop=no, path="Spectrum", ];
N: 11 "is_equiv_glue" [body=yes, kind=cnst, prop=no, path="Spectrum", ];
N: 1 "strunc" [body=yes, kind=cnst, prop=no, path="Spectrum", ];
N: 2 "to_is_spectrum" [body=yes, kind=cnst, prop=no, path="Spectrum", ];
N: 3 "to_prespectrum" [body=yes, kind=cnst, prop=no, path="Spectrum", ];
N: 20 "Prespectrum" [kind=inductive, prop=no, path="Spectrum", ];
N: 9 "Spectrum" [kind=inductive, prop=no, path="Spectrum", ];
N: 19 "Build_Prespectrum" [kind=construct, prop=no, path="Spectrum", ];
N: 8 "Build_Spectrum" [kind=construct, prop=no, path="Spectrum", ];
E: 1 8 [weight=1, ];
E: 1 9 [weight=3, ];
E: 1 10 [weight=9, ];
E: 1 12 [weight=1, ];
E: 1 19 [weight=7, ];
E: 2 9 [weight=2, ];
E: 2 12 [weight=1, ];
E: 3 9 [weight=2, ];
E: 3 20 [weight=1, ];
E: 4 8 [weight=2, ];
E: 4 9 [weight=4, ];
E: 4 12 [weight=2, ];
E: 4 20 [weight=2, ];
E: 5 7 [weight=1, ];
E: 5 8 [weight=1, ];
E: 5 9 [weight=3, ];
E: 5 12 [weight=1, ];
E: 5 20 [weight=1, ];
E: 6 8 [weight=2, ];
E: 6 9 [weight=4, ];
E: 6 12 [weight=2, ];
E: 6 20 [weight=2, ];
E: 7 8 [weight=2, ];
E: 7 9 [weight=4, ];
E: 7 12 [weight=2, ];
E: 7 20 [weight=2, ];
E: 8 12 [weight=1, ];
E: 8 20 [weight=1, ];
E: 9 12 [weight=1, ];
E: 9 20 [weight=1, ];
E: 10 11 [weight=1, ];
E: 10 12 [weight=2, ];
E: 10 20 [weight=2, ];
E: 11 12 [weight=2, ];
E: 11 20 [weight=2, ];
E: 12 20 [weight=2, ];
E: 13 20 [weight=2, ];
E: 14 20 [weight=2, ];
E: 15 19 [weight=2, ];
E: 15 20 [weight=4, ];
E: 16 18 [weight=1, ];
E: 16 19 [weight=1, ];
E: 16 20 [weight=3, ];
E: 17 19 [weight=2, ];
E: 17 20 [weight=4, ];
E: 18 19 [weight=2, ];
E: 18 20 [weight=4, ];
