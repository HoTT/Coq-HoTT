N: 11 "contr_aut_hprop" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 12 "contr_equiv_contr_contr" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 26 "contr_map_isequiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 20 "contr_retr_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 21 "contr_sect_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 18 "equiv_contr_map_isequiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 4 "equiv_equiv_inverse" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 8 "equiv_functor_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 6 "equiv_functor_postcompose_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 7 "equiv_functor_precompose_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 17 "equiv_path_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 22 "equiv_total_iff_equiv_fiberwise" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 10 "functor_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 19 "hprop_isequiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 14 "isequiv_ap_equiv_fun" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 25 "isequiv_contr_map" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 5 "isequiv_equiv_inverse" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 23 "isequiv_from_functor_sigma" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 9 "isequiv_functor_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 24 "isequiv_inhab_codomain" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 15 "isequiv_path_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 13 "istrunc_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 16 "path_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 3 "transport_equiv" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 2 "transport_equiv'" [body=yes, kind=cnst, prop=no, path="Equiv", ];
N: 1 "transport_equiv''" [body=yes, kind=cnst, prop=no, path="Equiv", ];
E: 1 16 [weight=1, ];
E: 4 5 [weight=1, ];
E: 5 16 [weight=2, ];
E: 6 8 [weight=1, ];
E: 7 8 [weight=1, ];
E: 8 9 [weight=1, ];
E: 8 10 [weight=1, ];
E: 9 10 [weight=23, ];
E: 9 16 [weight=2, ];
E: 11 16 [weight=1, ];
E: 12 16 [weight=1, ];
E: 13 17 [weight=1, ];
E: 14 17 [weight=3, ];
E: 15 16 [weight=1, ];
E: 15 17 [weight=1, ];
E: 16 17 [weight=1, ];
E: 17 19 [weight=1, ];
E: 18 19 [weight=1, ];
E: 18 25 [weight=1, ];
E: 18 26 [weight=1, ];
E: 19 21 [weight=4, ];
E: 20 26 [weight=1, ];
E: 21 26 [weight=1, ];
E: 22 23 [weight=1, ];
E: 23 25 [weight=1, ];
E: 23 26 [weight=1, ];
E: 24 25 [weight=1, ];
E: 24 26 [weight=1, ];
