N: 8 "ChooseProp" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 26 "HasQuotientChoice" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 25 "RelClassEquiv" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 18 "RelUnit" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 19 "choose" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 5 "choose_quotient_ind" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 2 "choose_quotient_ind_compute" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 4 "choose_quotient_ind_prop" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 3 "choose_quotient_rec" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 1 "choose_quotient_rec_compute" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 6 "chooseprop_quotient_ind" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 10 "equiv_has_tr0_choice_has_quotient_choice" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 12 "has_quotient_choice_tr0choice" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 13 "has_tr0_choice_quotientchoice" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 21 "hprop_choose_cod" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 11 "isequiv_has_tr0_choice_to_has_quotient_choice" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 7 "ishprop_choose_quotient_ind_chooseprop" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 14 "ishprop_quotient_relunit" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 20 "prechoose" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 9 "qglue_forall" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 24 "reflexive_relclass" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 17 "reflexive_relunit" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 23 "symmetric_relclass" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 16 "symmetric_relunit" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 22 "transitive_relclass" [body=yes, kind=cnst, prop=no, path="Choice", ];
N: 15 "transitive_relunit" [body=yes, kind=cnst, prop=no, path="Choice", ];
E: 1 2 [weight=1, ];
E: 1 3 [weight=1, ];
E: 1 9 [weight=2, ];
E: 2 5 [weight=1, ];
E: 2 7 [weight=3, ];
E: 2 8 [weight=6, ];
E: 2 9 [weight=54, ];
E: 2 12 [weight=1, ];
E: 3 5 [weight=1, ];
E: 3 9 [weight=2, ];
E: 4 5 [weight=1, ];
E: 4 9 [weight=1, ];
E: 5 6 [weight=1, ];
E: 5 9 [weight=2, ];
E: 6 7 [weight=1, ];
E: 6 8 [weight=3, ];
E: 6 9 [weight=6, ];
E: 6 12 [weight=1, ];
E: 7 8 [weight=1, ];
E: 7 9 [weight=58, ];
E: 8 9 [weight=1, ];
E: 10 11 [weight=1, ];
E: 10 12 [weight=1, ];
E: 10 26 [weight=2, ];
E: 11 12 [weight=2, ];
E: 11 13 [weight=1, ];
E: 11 26 [weight=2, ];
E: 12 26 [weight=2, ];
E: 13 14 [weight=1, ];
E: 13 15 [weight=1, ];
E: 13 16 [weight=1, ];
E: 13 17 [weight=1, ];
E: 13 18 [weight=15, ];
E: 13 26 [weight=2, ];
E: 14 18 [weight=20, ];
E: 15 18 [weight=3, ];
E: 16 18 [weight=2, ];
E: 17 18 [weight=1, ];
E: 19 20 [weight=1, ];
E: 19 25 [weight=1, ];
E: 20 21 [weight=1, ];
E: 20 22 [weight=6, ];
E: 20 23 [weight=6, ];
E: 20 25 [weight=16, ];
E: 21 22 [weight=19, ];
E: 21 23 [weight=19, ];
E: 21 24 [weight=1, ];
E: 21 25 [weight=55, ];
E: 22 25 [weight=4, ];
E: 23 25 [weight=3, ];
E: 24 25 [weight=2, ];
