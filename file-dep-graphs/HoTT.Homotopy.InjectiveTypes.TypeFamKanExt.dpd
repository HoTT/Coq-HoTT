N: 31 "LeftKanFam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 21 "MapFam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 30 "RightKanFam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 20 "compose_mapfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 24 "contr_rightkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 13 "contr_univ_property_leftkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 11 "contr_univ_property_rightkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 16 "counit_leftkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 17 "counit_rightkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 23 "equiv_leftkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 22 "equiv_rightkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 5 "isembed_leftkanfam_ext" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 1 "isembed_rightkanfam_ext" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 25 "isempty_leftkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 8 "isequiv_counit_leftkanfam_leftkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 6 "isequiv_leftkanfam_counit_equiv" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 2 "isequiv_rightkanfam_unit_equiv" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 4 "isequiv_unit_rightkanfam_rightkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 29 "isext_equiv_leftkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 28 "isext_equiv_rightkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 27 "isext_leftkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 26 "isext_rightkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 10 "leftadjoint_leftkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 7 "leftkanfam_counit_equiv" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 9 "rightadjoint_rightkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 3 "rightkanfam_unit_equiv" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 19 "transform_leftkanfam_rightkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 18 "unit_leftkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 15 "unit_rightkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 14 "univ_property_leftkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
N: 12 "univ_property_rightkanfam" [body=yes, kind=cnst, prop=no, path="TypeFamKanExt", ];
E: 1 2 [weight=1, ];
E: 1 3 [weight=2, ];
E: 1 15 [weight=7, ];
E: 1 30 [weight=8, ];
E: 2 3 [weight=8, ];
E: 2 15 [weight=25, ];
E: 2 26 [weight=1, ];
E: 2 30 [weight=28, ];
E: 3 4 [weight=1, ];
E: 3 15 [weight=2, ];
E: 3 30 [weight=3, ];
E: 4 15 [weight=12, ];
E: 4 30 [weight=66, ];
E: 5 6 [weight=1, ];
E: 5 7 [weight=2, ];
E: 5 16 [weight=7, ];
E: 5 31 [weight=8, ];
E: 6 7 [weight=8, ];
E: 6 16 [weight=25, ];
E: 6 27 [weight=1, ];
E: 6 31 [weight=27, ];
E: 7 8 [weight=1, ];
E: 7 16 [weight=2, ];
E: 7 31 [weight=3, ];
E: 8 16 [weight=7, ];
E: 8 31 [weight=75, ];
E: 9 21 [weight=36, ];
E: 9 30 [weight=25, ];
E: 10 21 [weight=36, ];
E: 10 31 [weight=32, ];
E: 11 12 [weight=20, ];
E: 11 17 [weight=137, ];
E: 11 20 [weight=73, ];
E: 11 21 [weight=105, ];
E: 11 30 [weight=289, ];
E: 12 17 [weight=3, ];
E: 12 20 [weight=3, ];
E: 12 21 [weight=9, ];
E: 12 30 [weight=15, ];
E: 13 14 [weight=16, ];
E: 13 18 [weight=70, ];
E: 13 20 [weight=70, ];
E: 13 21 [weight=101, ];
E: 13 31 [weight=454, ];
E: 14 18 [weight=3, ];
E: 14 20 [weight=3, ];
E: 14 21 [weight=9, ];
E: 14 31 [weight=15, ];
E: 15 21 [weight=2, ];
E: 15 30 [weight=3, ];
E: 16 21 [weight=2, ];
E: 16 31 [weight=3, ];
E: 17 21 [weight=1, ];
E: 17 30 [weight=2, ];
E: 18 21 [weight=1, ];
E: 18 31 [weight=1, ];
E: 19 21 [weight=2, ];
E: 19 30 [weight=3, ];
E: 19 31 [weight=3, ];
E: 20 21 [weight=5, ];
E: 22 30 [weight=20, ];
E: 23 31 [weight=45, ];
E: 24 30 [weight=1, ];
E: 25 31 [weight=2, ];
E: 26 28 [weight=1, ];
E: 26 30 [weight=2, ];
E: 27 29 [weight=1, ];
E: 27 31 [weight=2, ];
E: 28 30 [weight=1, ];
E: 29 31 [weight=1, ];
