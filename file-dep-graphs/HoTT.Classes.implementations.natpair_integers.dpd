N: 122 "N_fullpartial" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 93 "Npair_splits" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 105 "R_dec" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 21 "SR0" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 20 "SR1" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 5 "Symmetric_instance_0" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 33 "T_ind" [body=yes, kind=cnst, prop=yes, path="natpair_integers.NatPair.PairT", ];
N: 32 "T_rec" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 34 "T_rect" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 28 "T_set" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 31 "T_sind" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 14 "Tapart" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 11 "Tapart_hprop" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 16 "Tle" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 13 "Tle_hprop" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 15 "Tlt" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 12 "Tlt_hprop" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 121 "Z" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 104 "Z0" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 103 "Z1" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 40 "Z_abs" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 41 "Z_abs'" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 46 "Z_abs_aux_0" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 45 "Z_abs_aux_neg" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 44 "Z_abs_aux_pos" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 43 "Z_abs_def" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 42 "Z_abs_respects'" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 115 "Z_compute" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 114 "Z_compute_path" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 52 "Z_full_pseudo_srorder" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 55 "Z_full_psorder" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 56 "Z_full_psorder'" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 113 "Z_ind" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 112 "Z_ind2" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 111 "Z_ind3" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 47 "Z_integers" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 57 "Z_is_apart" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 58 "Z_is_apart'" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 100 "Z_mult" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 99 "Z_mult_compute" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 98 "Z_negate" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 97 "Z_negate_compute" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 119 "Z_of_N" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 94 "Z_of_N_injective" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 95 "Z_of_N_morphism" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 120 "Z_of_pair" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 80 "Z_order" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 87 "Z_partial_order" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 88 "Z_partial_order'" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 118 "Z_path" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 102 "Z_plus" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 101 "Z_plus_compute" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 110 "Z_rec" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 108 "Z_rec2" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 107 "Z_rec2_compute" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 109 "Z_rec_compute" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 116 "Z_rect" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 96 "Z_ring" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 67 "Z_strict_srorder" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 51 "Z_to_ring" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 49 "Z_to_ring_morphism" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 50 "Z_to_ring_morphism'" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 48 "Z_to_ring_unique" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 59 "Z_trivial_apart" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 60 "Z_trivial_apart'" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 37 "Z_zero_product" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 38 "Z_zero_product'" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 64 "Zapart" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 65 "Zapart_HProp" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 62 "Zapart_def" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 63 "Zapart_def'" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 91 "Zle" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 92 "Zle_HProp" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 85 "Zle_cast_embedding" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 86 "Zle_cast_embedding'" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 79 "Zle_dec" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 89 "Zle_def" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 83 "Zle_plus_preserving_l" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 84 "Zle_plus_preserving_l'" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 77 "Zlt" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 78 "Zlt_HProp" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 66 "Zlt_dec" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 74 "Zlt_def" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 75 "Zlt_def'" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 72 "Zlt_strict" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 73 "Zlt_strict'" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 81 "Zmult_nonneg" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 82 "Zmult_nonneg'" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 68 "Zmult_pos" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 69 "Zmult_pos'" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 53 "Zmult_strong_ext_l" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 54 "Zmult_strong_ext_l'" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 70 "Zplus_strict_order_preserving_l" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 6 "apart_cotrans" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 3 "apart_respects" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 4 "apart_respects_aux" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 106 "dec_Z_of_pair" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 26 "equiv" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 25 "equiv_is_equiv_rel" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 27 "inject" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 61 "ishprop_Zapart" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 90 "ishprop_Zle" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 76 "ishprop_Zlt" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 9 "le_respects" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 10 "le_respects_aux" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 7 "lt_respects" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 8 "lt_respects_aux" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 23 "ml" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 18 "ml_respects" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 29 "neg" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 22 "opp" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 17 "opp_respects" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 24 "pl" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 19 "pl_respects" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 71 "plus_strict_order_preserving_l'" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 30 "pos" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 117 "related_path" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 2 "to_ring" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 1 "to_ring_respects" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 39 "zero_product_aux" [body=yes, kind=cnst, prop=no, path="natpair_integers.NatPair", ];
N: 36 "T" [kind=inductive, prop=no, path="natpair_integers.NatPair.PairT", ];
N: 35 "C" [kind=construct, prop=no, path="natpair_integers.NatPair.PairT", ];
E: 1 2 [weight=6, ];
E: 1 26 [weight=2, ];
E: 1 35 [weight=10, ];
E: 1 36 [weight=6, ];
E: 2 36 [weight=2, ];
E: 3 4 [weight=2, ];
E: 3 11 [weight=2, ];
E: 3 14 [weight=8, ];
E: 3 25 [weight=2, ];
E: 3 26 [weight=6, ];
E: 3 36 [weight=10, ];
E: 4 5 [weight=2, ];
E: 4 14 [weight=9, ];
E: 4 25 [weight=2, ];
E: 4 26 [weight=8, ];
E: 4 36 [weight=18, ];
E: 5 14 [weight=4, ];
E: 5 36 [weight=6, ];
E: 6 14 [weight=5, ];
E: 6 36 [weight=8, ];
E: 7 8 [weight=2, ];
E: 7 12 [weight=2, ];
E: 7 15 [weight=8, ];
E: 7 25 [weight=2, ];
E: 7 26 [weight=6, ];
E: 7 36 [weight=10, ];
E: 8 15 [weight=4, ];
E: 8 26 [weight=4, ];
E: 8 35 [weight=16, ];
E: 8 36 [weight=12, ];
E: 9 10 [weight=2, ];
E: 9 13 [weight=2, ];
E: 9 16 [weight=8, ];
E: 9 25 [weight=2, ];
E: 9 26 [weight=6, ];
E: 9 36 [weight=10, ];
E: 10 16 [weight=4, ];
E: 10 26 [weight=4, ];
E: 10 35 [weight=16, ];
E: 10 36 [weight=12, ];
E: 11 14 [weight=2, ];
E: 11 36 [weight=4, ];
E: 12 15 [weight=2, ];
E: 12 36 [weight=4, ];
E: 13 16 [weight=2, ];
E: 13 36 [weight=4, ];
E: 14 36 [weight=3, ];
E: 15 36 [weight=3, ];
E: 16 36 [weight=3, ];
E: 17 22 [weight=8, ];
E: 17 26 [weight=4, ];
E: 17 36 [weight=8, ];
E: 18 23 [weight=17, ];
E: 18 25 [weight=1, ];
E: 18 26 [weight=7, ];
E: 18 36 [weight=25, ];
E: 19 24 [weight=8, ];
E: 19 26 [weight=6, ];
E: 19 36 [weight=24, ];
E: 20 35 [weight=1, ];
E: 20 36 [weight=1, ];
E: 21 35 [weight=1, ];
E: 21 36 [weight=1, ];
E: 22 35 [weight=1, ];
E: 22 36 [weight=2, ];
E: 23 35 [weight=1, ];
E: 23 36 [weight=3, ];
E: 24 35 [weight=1, ];
E: 24 36 [weight=3, ];
E: 25 26 [weight=10, ];
E: 25 36 [weight=16, ];
E: 26 36 [weight=4, ];
E: 27 35 [weight=1, ];
E: 27 36 [weight=1, ];
E: 28 35 [weight=8, ];
E: 28 36 [weight=14, ];
E: 29 36 [weight=2, ];
E: 30 36 [weight=2, ];
E: 31 35 [weight=2, ];
E: 31 36 [weight=4, ];
E: 32 34 [weight=1, ];
E: 32 35 [weight=1, ];
E: 32 36 [weight=3, ];
E: 33 35 [weight=2, ];
E: 33 36 [weight=4, ];
E: 34 35 [weight=2, ];
E: 34 36 [weight=4, ];
E: 37 38 [weight=1, ];
E: 37 100 [weight=1, ];
E: 37 104 [weight=1, ];
E: 37 121 [weight=1, ];
E: 38 39 [weight=4, ];
E: 38 40 [weight=3, ];
E: 38 47 [weight=101, ];
E: 38 51 [weight=3, ];
E: 38 64 [weight=3, ];
E: 38 77 [weight=3, ];
E: 38 91 [weight=3, ];
E: 38 98 [weight=180, ];
E: 38 100 [weight=235, ];
E: 38 102 [weight=199, ];
E: 38 103 [weight=199, ];
E: 38 104 [weight=300, ];
E: 38 121 [weight=575, ];
E: 39 47 [weight=20, ];
E: 39 94 [weight=1, ];
E: 39 95 [weight=5, ];
E: 39 98 [weight=20, ];
E: 39 100 [weight=45, ];
E: 39 102 [weight=43, ];
E: 39 103 [weight=43, ];
E: 39 104 [weight=69, ];
E: 39 119 [weight=23, ];
E: 39 121 [weight=129, ];
E: 40 41 [weight=1, ];
E: 40 47 [weight=1, ];
E: 40 51 [weight=1, ];
E: 40 64 [weight=1, ];
E: 40 77 [weight=1, ];
E: 40 91 [weight=1, ];
E: 40 98 [weight=1, ];
E: 40 100 [weight=1, ];
E: 40 102 [weight=1, ];
E: 40 103 [weight=1, ];
E: 40 104 [weight=1, ];
E: 40 121 [weight=1, ];
E: 41 26 [weight=2, ];
E: 41 36 [weight=6, ];
E: 41 42 [weight=1, ];
E: 41 43 [weight=1, ];
E: 41 47 [weight=10, ];
E: 41 51 [weight=2, ];
E: 41 64 [weight=2, ];
E: 41 77 [weight=2, ];
E: 41 91 [weight=2, ];
E: 41 98 [weight=14, ];
E: 41 100 [weight=18, ];
E: 41 102 [weight=18, ];
E: 41 103 [weight=18, ];
E: 41 104 [weight=18, ];
E: 41 116 [weight=1, ];
E: 41 121 [weight=32, ];
E: 41 122 [weight=2, ];
E: 42 26 [weight=7, ];
E: 42 35 [weight=990, ];
E: 42 36 [weight=390, ];
E: 42 43 [weight=4, ];
E: 42 44 [weight=49, ];
E: 42 45 [weight=56, ];
E: 42 46 [weight=60, ];
E: 42 47 [weight=639, ];
E: 42 98 [weight=916, ];
E: 42 100 [weight=1278, ];
E: 42 102 [weight=1278, ];
E: 42 103 [weight=1278, ];
E: 42 104 [weight=1278, ];
E: 42 118 [weight=106, ];
E: 42 120 [weight=780, ];
E: 42 121 [weight=2816, ];
E: 42 122 [weight=5, ];
E: 43 35 [weight=13, ];
E: 43 36 [weight=17, ];
E: 43 44 [weight=1, ];
E: 43 45 [weight=1, ];
E: 43 46 [weight=1, ];
E: 43 47 [weight=15, ];
E: 43 98 [weight=22, ];
E: 43 100 [weight=30, ];
E: 43 102 [weight=30, ];
E: 43 103 [weight=30, ];
E: 43 104 [weight=30, ];
E: 43 120 [weight=15, ];
E: 43 121 [weight=67, ];
E: 44 26 [weight=1, ];
E: 44 27 [weight=4, ];
E: 44 35 [weight=6, ];
E: 44 36 [weight=2, ];
E: 44 47 [weight=3, ];
E: 44 95 [weight=1, ];
E: 44 98 [weight=3, ];
E: 44 100 [weight=6, ];
E: 44 102 [weight=6, ];
E: 44 103 [weight=6, ];
E: 44 104 [weight=6, ];
E: 44 118 [weight=1, ];
E: 44 119 [weight=2, ];
E: 44 120 [weight=2, ];
E: 44 121 [weight=14, ];
E: 45 22 [weight=4, ];
E: 45 26 [weight=1, ];
E: 45 27 [weight=4, ];
E: 45 35 [weight=6, ];
E: 45 36 [weight=2, ];
E: 45 47 [weight=3, ];
E: 45 95 [weight=1, ];
E: 45 98 [weight=5, ];
E: 45 100 [weight=6, ];
E: 45 102 [weight=6, ];
E: 45 103 [weight=6, ];
E: 45 104 [weight=6, ];
E: 45 118 [weight=1, ];
E: 45 119 [weight=2, ];
E: 45 120 [weight=2, ];
E: 45 121 [weight=16, ];
E: 46 26 [weight=1, ];
E: 46 27 [weight=4, ];
E: 46 35 [weight=7, ];
E: 46 36 [weight=3, ];
E: 46 47 [weight=4, ];
E: 46 98 [weight=4, ];
E: 46 100 [weight=9, ];
E: 46 102 [weight=9, ];
E: 46 103 [weight=9, ];
E: 46 104 [weight=11, ];
E: 46 118 [weight=1, ];
E: 46 120 [weight=3, ];
E: 46 121 [weight=19, ];
E: 47 48 [weight=1, ];
E: 47 49 [weight=1, ];
E: 47 51 [weight=2, ];
E: 47 52 [weight=1, ];
E: 47 64 [weight=2, ];
E: 47 77 [weight=2, ];
E: 47 91 [weight=2, ];
E: 47 96 [weight=1, ];
E: 47 98 [weight=2, ];
E: 47 100 [weight=2, ];
E: 47 102 [weight=2, ];
E: 47 103 [weight=2, ];
E: 47 104 [weight=2, ];
E: 47 121 [weight=2, ];
E: 48 35 [weight=5, ];
E: 48 36 [weight=6, ];
E: 48 51 [weight=5, ];
E: 48 93 [weight=1, ];
E: 48 95 [weight=2, ];
E: 48 96 [weight=1, ];
E: 48 98 [weight=8, ];
E: 48 100 [weight=8, ];
E: 48 102 [weight=10, ];
E: 48 103 [weight=8, ];
E: 48 104 [weight=8, ];
E: 48 113 [weight=1, ];
E: 48 119 [weight=25, ];
E: 48 120 [weight=5, ];
E: 48 121 [weight=67, ];
E: 49 50 [weight=1, ];
E: 49 51 [weight=1, ];
E: 49 100 [weight=1, ];
E: 49 102 [weight=1, ];
E: 49 103 [weight=1, ];
E: 49 104 [weight=1, ];
E: 49 121 [weight=2, ];
E: 50 35 [weight=16, ];
E: 50 36 [weight=20, ];
E: 50 51 [weight=36, ];
E: 50 100 [weight=8, ];
E: 50 102 [weight=8, ];
E: 50 103 [weight=6, ];
E: 50 104 [weight=6, ];
E: 50 112 [weight=2, ];
E: 50 120 [weight=16, ];
E: 50 121 [weight=80, ];
E: 51 1 [weight=1, ];
E: 51 2 [weight=1, ];
E: 51 110 [weight=1, ];
E: 51 121 [weight=2, ];
E: 52 53 [weight=1, ];
E: 52 55 [weight=1, ];
E: 52 57 [weight=2, ];
E: 52 64 [weight=4, ];
E: 52 68 [weight=1, ];
E: 52 70 [weight=1, ];
E: 52 77 [weight=1, ];
E: 52 78 [weight=3, ];
E: 52 91 [weight=1, ];
E: 52 92 [weight=1, ];
E: 52 96 [weight=1, ];
E: 52 98 [weight=3, ];
E: 52 100 [weight=5, ];
E: 52 102 [weight=4, ];
E: 52 103 [weight=4, ];
E: 52 104 [weight=6, ];
E: 52 121 [weight=23, ];
E: 53 54 [weight=1, ];
E: 53 64 [weight=2, ];
E: 53 100 [weight=1, ];
E: 53 121 [weight=4, ];
E: 54 14 [weight=5, ];
E: 54 23 [weight=12, ];
E: 54 35 [weight=42, ];
E: 54 36 [weight=11, ];
E: 54 61 [weight=1, ];
E: 54 62 [weight=2, ];
E: 54 64 [weight=11, ];
E: 54 100 [weight=8, ];
E: 54 111 [weight=1, ];
E: 54 120 [weight=8, ];
E: 54 121 [weight=35, ];
E: 55 56 [weight=1, ];
E: 55 64 [weight=1, ];
E: 55 77 [weight=1, ];
E: 55 91 [weight=1, ];
E: 55 121 [weight=1, ];
E: 56 14 [weight=4, ];
E: 56 15 [weight=21, ];
E: 56 16 [weight=3, ];
E: 56 35 [weight=154, ];
E: 56 36 [weight=45, ];
E: 56 57 [weight=1, ];
E: 56 61 [weight=1, ];
E: 56 62 [weight=1, ];
E: 56 64 [weight=9, ];
E: 56 72 [weight=2, ];
E: 56 74 [weight=8, ];
E: 56 76 [weight=3, ];
E: 56 77 [weight=54, ];
E: 56 89 [weight=1, ];
E: 56 90 [weight=2, ];
E: 56 91 [weight=8, ];
E: 56 111 [weight=1, ];
E: 56 112 [weight=3, ];
E: 56 120 [weight=36, ];
E: 56 121 [weight=129, ];
E: 57 58 [weight=1, ];
E: 57 64 [weight=1, ];
E: 57 121 [weight=1, ];
E: 58 14 [weight=16, ];
E: 58 26 [weight=4, ];
E: 58 35 [weight=28, ];
E: 58 36 [weight=43, ];
E: 58 61 [weight=2, ];
E: 58 62 [weight=6, ];
E: 58 64 [weight=33, ];
E: 58 111 [weight=1, ];
E: 58 112 [weight=2, ];
E: 58 117 [weight=1, ];
E: 58 118 [weight=1, ];
E: 58 120 [weight=30, ];
E: 58 121 [weight=95, ];
E: 58 122 [weight=2, ];
E: 59 60 [weight=1, ];
E: 59 64 [weight=1, ];
E: 59 121 [weight=1, ];
E: 60 14 [weight=2, ];
E: 60 26 [weight=2, ];
E: 60 35 [weight=40, ];
E: 60 36 [weight=20, ];
E: 60 61 [weight=2, ];
E: 60 62 [weight=1, ];
E: 60 64 [weight=8, ];
E: 60 112 [weight=1, ];
E: 60 117 [weight=1, ];
E: 60 118 [weight=1, ];
E: 60 120 [weight=18, ];
E: 60 121 [weight=46, ];
E: 61 64 [weight=2, ];
E: 61 65 [weight=1, ];
E: 61 121 [weight=6, ];
E: 62 14 [weight=1, ];
E: 62 36 [weight=4, ];
E: 62 63 [weight=1, ];
E: 62 64 [weight=1, ];
E: 62 120 [weight=2, ];
E: 62 121 [weight=3, ];
E: 63 14 [weight=2, ];
E: 63 36 [weight=6, ];
E: 63 64 [weight=1, ];
E: 63 120 [weight=2, ];
E: 63 121 [weight=3, ];
E: 64 65 [weight=1, ];
E: 64 121 [weight=3, ];
E: 65 3 [weight=1, ];
E: 65 14 [weight=5, ];
E: 65 26 [weight=2, ];
E: 65 36 [weight=6, ];
E: 65 108 [weight=1, ];
E: 65 121 [weight=2, ];
E: 66 15 [weight=1, ];
E: 66 36 [weight=2, ];
E: 66 76 [weight=1, ];
E: 66 77 [weight=3, ];
E: 66 112 [weight=1, ];
E: 66 121 [weight=9, ];
E: 67 68 [weight=1, ];
E: 67 70 [weight=1, ];
E: 67 72 [weight=1, ];
E: 67 77 [weight=1, ];
E: 67 78 [weight=3, ];
E: 67 96 [weight=1, ];
E: 67 98 [weight=2, ];
E: 67 100 [weight=3, ];
E: 67 102 [weight=3, ];
E: 67 103 [weight=3, ];
E: 67 104 [weight=5, ];
E: 67 121 [weight=16, ];
E: 68 69 [weight=1, ];
E: 68 77 [weight=3, ];
E: 68 100 [weight=1, ];
E: 68 104 [weight=3, ];
E: 68 121 [weight=9, ];
E: 69 15 [weight=9, ];
E: 69 23 [weight=6, ];
E: 69 27 [weight=21, ];
E: 69 35 [weight=32, ];
E: 69 36 [weight=13, ];
E: 69 74 [weight=3, ];
E: 69 76 [weight=1, ];
E: 69 77 [weight=20, ];
E: 69 100 [weight=8, ];
E: 69 104 [weight=18, ];
E: 69 112 [weight=1, ];
E: 69 120 [weight=11, ];
E: 69 121 [weight=65, ];
E: 70 71 [weight=1, ];
E: 70 77 [weight=2, ];
E: 70 102 [weight=1, ];
E: 70 121 [weight=4, ];
E: 71 15 [weight=5, ];
E: 71 24 [weight=12, ];
E: 71 35 [weight=42, ];
E: 71 36 [weight=11, ];
E: 71 74 [weight=2, ];
E: 71 76 [weight=1, ];
E: 71 77 [weight=11, ];
E: 71 102 [weight=10, ];
E: 71 111 [weight=1, ];
E: 71 120 [weight=8, ];
E: 71 121 [weight=37, ];
E: 72 73 [weight=1, ];
E: 72 77 [weight=1, ];
E: 72 121 [weight=1, ];
E: 73 15 [weight=11, ];
E: 73 35 [weight=60, ];
E: 73 36 [weight=18, ];
E: 73 74 [weight=4, ];
E: 73 76 [weight=2, ];
E: 73 77 [weight=20, ];
E: 73 111 [weight=1, ];
E: 73 113 [weight=1, ];
E: 73 120 [weight=14, ];
E: 73 121 [weight=45, ];
E: 74 15 [weight=1, ];
E: 74 36 [weight=4, ];
E: 74 75 [weight=1, ];
E: 74 77 [weight=1, ];
E: 74 120 [weight=2, ];
E: 74 121 [weight=3, ];
E: 75 15 [weight=2, ];
E: 75 36 [weight=6, ];
E: 75 77 [weight=1, ];
E: 75 120 [weight=2, ];
E: 75 121 [weight=3, ];
E: 76 77 [weight=2, ];
E: 76 78 [weight=1, ];
E: 76 121 [weight=6, ];
E: 77 78 [weight=1, ];
E: 77 121 [weight=3, ];
E: 78 7 [weight=1, ];
E: 78 15 [weight=5, ];
E: 78 26 [weight=2, ];
E: 78 36 [weight=6, ];
E: 78 108 [weight=1, ];
E: 78 121 [weight=2, ];
E: 79 16 [weight=1, ];
E: 79 36 [weight=2, ];
E: 79 90 [weight=1, ];
E: 79 91 [weight=3, ];
E: 79 112 [weight=1, ];
E: 79 121 [weight=9, ];
E: 80 81 [weight=1, ];
E: 80 83 [weight=1, ];
E: 80 87 [weight=1, ];
E: 80 91 [weight=1, ];
E: 80 92 [weight=3, ];
E: 80 96 [weight=1, ];
E: 80 98 [weight=2, ];
E: 80 100 [weight=3, ];
E: 80 102 [weight=3, ];
E: 80 103 [weight=3, ];
E: 80 104 [weight=5, ];
E: 80 121 [weight=16, ];
E: 81 82 [weight=1, ];
E: 81 91 [weight=3, ];
E: 81 100 [weight=1, ];
E: 81 104 [weight=3, ];
E: 81 121 [weight=9, ];
E: 82 16 [weight=9, ];
E: 82 23 [weight=6, ];
E: 82 27 [weight=21, ];
E: 82 35 [weight=32, ];
E: 82 36 [weight=13, ];
E: 82 89 [weight=3, ];
E: 82 90 [weight=1, ];
E: 82 91 [weight=20, ];
E: 82 100 [weight=8, ];
E: 82 104 [weight=18, ];
E: 82 112 [weight=1, ];
E: 82 120 [weight=11, ];
E: 82 121 [weight=65, ];
E: 83 84 [weight=1, ];
E: 83 91 [weight=2, ];
E: 83 102 [weight=1, ];
E: 83 121 [weight=4, ];
E: 84 16 [weight=5, ];
E: 84 24 [weight=12, ];
E: 84 35 [weight=42, ];
E: 84 36 [weight=11, ];
E: 84 89 [weight=2, ];
E: 84 90 [weight=1, ];
E: 84 91 [weight=11, ];
E: 84 102 [weight=10, ];
E: 84 111 [weight=1, ];
E: 84 120 [weight=8, ];
E: 84 121 [weight=37, ];
E: 85 86 [weight=1, ];
E: 85 91 [weight=1, ];
E: 85 119 [weight=1, ];
E: 85 121 [weight=2, ];
E: 86 16 [weight=4, ];
E: 86 27 [weight=24, ];
E: 86 36 [weight=4, ];
E: 86 89 [weight=2, ];
E: 86 91 [weight=6, ];
E: 86 119 [weight=4, ];
E: 86 120 [weight=4, ];
E: 86 121 [weight=14, ];
E: 87 88 [weight=1, ];
E: 87 91 [weight=1, ];
E: 87 121 [weight=1, ];
E: 88 16 [weight=15, ];
E: 88 26 [weight=3, ];
E: 88 35 [weight=92, ];
E: 88 36 [weight=38, ];
E: 88 89 [weight=5, ];
E: 88 90 [weight=3, ];
E: 88 91 [weight=29, ];
E: 88 111 [weight=1, ];
E: 88 112 [weight=1, ];
E: 88 113 [weight=1, ];
E: 88 118 [weight=1, ];
E: 88 120 [weight=26, ];
E: 88 121 [weight=81, ];
E: 88 122 [weight=4, ];
E: 89 16 [weight=1, ];
E: 89 36 [weight=8, ];
E: 89 91 [weight=2, ];
E: 89 120 [weight=4, ];
E: 89 121 [weight=6, ];
E: 90 91 [weight=2, ];
E: 90 92 [weight=1, ];
E: 90 121 [weight=6, ];
E: 91 92 [weight=1, ];
E: 91 121 [weight=3, ];
E: 92 9 [weight=1, ];
E: 92 13 [weight=5, ];
E: 92 16 [weight=5, ];
E: 92 26 [weight=2, ];
E: 92 36 [weight=6, ];
E: 92 108 [weight=1, ];
E: 92 121 [weight=2, ];
E: 93 22 [weight=4, ];
E: 93 24 [weight=4, ];
E: 93 26 [weight=1, ];
E: 93 27 [weight=8, ];
E: 93 35 [weight=5, ];
E: 93 36 [weight=1, ];
E: 93 98 [weight=1, ];
E: 93 102 [weight=1, ];
E: 93 118 [weight=1, ];
E: 93 119 [weight=2, ];
E: 93 120 [weight=1, ];
E: 93 121 [weight=6, ];
E: 94 26 [weight=1, ];
E: 94 27 [weight=4, ];
E: 94 117 [weight=1, ];
E: 94 119 [weight=4, ];
E: 94 121 [weight=7, ];
E: 95 23 [weight=4, ];
E: 95 24 [weight=4, ];
E: 95 26 [weight=2, ];
E: 95 27 [weight=24, ];
E: 95 100 [weight=4, ];
E: 95 102 [weight=4, ];
E: 95 103 [weight=4, ];
E: 95 104 [weight=4, ];
E: 95 118 [weight=2, ];
E: 95 119 [weight=6, ];
E: 95 121 [weight=24, ];
E: 96 22 [weight=8, ];
E: 96 23 [weight=44, ];
E: 96 24 [weight=48, ];
E: 96 26 [weight=24, ];
E: 96 27 [weight=24, ];
E: 96 35 [weight=52, ];
E: 96 36 [weight=58, ];
E: 96 98 [weight=10, ];
E: 96 100 [weight=32, ];
E: 96 102 [weight=37, ];
E: 96 103 [weight=10, ];
E: 96 104 [weight=17, ];
E: 96 111 [weight=3, ];
E: 96 112 [weight=2, ];
E: 96 113 [weight=6, ];
E: 96 118 [weight=11, ];
E: 96 121 [weight=197, ];
E: 96 122 [weight=13, ];
E: 97 22 [weight=1, ];
E: 97 36 [weight=5, ];
E: 97 98 [weight=2, ];
E: 97 120 [weight=3, ];
E: 97 121 [weight=7, ];
E: 98 17 [weight=1, ];
E: 98 22 [weight=3, ];
E: 98 26 [weight=2, ];
E: 98 36 [weight=7, ];
E: 98 110 [weight=1, ];
E: 98 118 [weight=1, ];
E: 98 120 [weight=1, ];
E: 98 121 [weight=4, ];
E: 98 122 [weight=1, ];
E: 99 23 [weight=1, ];
E: 99 36 [weight=9, ];
E: 99 100 [weight=2, ];
E: 99 120 [weight=5, ];
E: 99 121 [weight=9, ];
E: 100 18 [weight=1, ];
E: 100 23 [weight=3, ];
E: 100 26 [weight=3, ];
E: 100 36 [weight=10, ];
E: 100 108 [weight=1, ];
E: 100 118 [weight=1, ];
E: 100 120 [weight=1, ];
E: 100 121 [weight=3, ];
E: 100 122 [weight=1, ];
E: 101 24 [weight=1, ];
E: 101 36 [weight=9, ];
E: 101 102 [weight=2, ];
E: 101 120 [weight=5, ];
E: 101 121 [weight=9, ];
E: 102 19 [weight=1, ];
E: 102 24 [weight=3, ];
E: 102 26 [weight=3, ];
E: 102 36 [weight=10, ];
E: 102 108 [weight=1, ];
E: 102 118 [weight=1, ];
E: 102 120 [weight=1, ];
E: 102 121 [weight=3, ];
E: 102 122 [weight=1, ];
E: 103 119 [weight=1, ];
E: 103 121 [weight=2, ];
E: 104 119 [weight=1, ];
E: 104 121 [weight=2, ];
E: 105 26 [weight=1, ];
E: 105 36 [weight=3, ];
E: 105 106 [weight=1, ];
E: 105 112 [weight=1, ];
E: 105 121 [weight=9, ];
E: 105 122 [weight=1, ];
E: 106 26 [weight=7, ];
E: 106 36 [weight=20, ];
E: 106 117 [weight=1, ];
E: 106 118 [weight=1, ];
E: 106 120 [weight=16, ];
E: 106 121 [weight=24, ];
E: 107 26 [weight=4, ];
E: 107 36 [weight=20, ];
E: 107 108 [weight=2, ];
E: 107 120 [weight=4, ];
E: 107 121 [weight=4, ];
E: 108 25 [weight=1, ];
E: 108 26 [weight=3, ];
E: 108 36 [weight=9, ];
E: 108 121 [weight=2, ];
E: 108 122 [weight=1, ];
E: 109 26 [weight=2, ];
E: 109 36 [weight=10, ];
E: 109 110 [weight=2, ];
E: 109 120 [weight=2, ];
E: 109 121 [weight=2, ];
E: 110 26 [weight=2, ];
E: 110 36 [weight=6, ];
E: 110 121 [weight=1, ];
E: 110 122 [weight=1, ];
E: 111 36 [weight=17, ];
E: 111 112 [weight=1, ];
E: 111 113 [weight=1, ];
E: 111 120 [weight=8, ];
E: 111 121 [weight=32, ];
E: 112 36 [weight=12, ];
E: 112 113 [weight=2, ];
E: 112 120 [weight=6, ];
E: 112 121 [weight=20, ];
E: 113 26 [weight=1, ];
E: 113 36 [weight=6, ];
E: 113 116 [weight=1, ];
E: 113 118 [weight=1, ];
E: 113 120 [weight=6, ];
E: 113 121 [weight=9, ];
E: 114 26 [weight=5, ];
E: 114 36 [weight=15, ];
E: 114 116 [weight=3, ];
E: 114 118 [weight=4, ];
E: 114 120 [weight=15, ];
E: 114 121 [weight=10, ];
E: 114 122 [weight=1, ];
E: 115 26 [weight=2, ];
E: 115 36 [weight=10, ];
E: 115 116 [weight=2, ];
E: 115 118 [weight=2, ];
E: 115 120 [weight=12, ];
E: 115 121 [weight=8, ];
E: 116 26 [weight=3, ];
E: 116 36 [weight=11, ];
E: 116 118 [weight=2, ];
E: 116 120 [weight=8, ];
E: 116 121 [weight=9, ];
E: 116 122 [weight=1, ];
E: 117 25 [weight=3, ];
E: 117 26 [weight=2, ];
E: 117 36 [weight=7, ];
E: 117 120 [weight=2, ];
E: 117 121 [weight=1, ];
E: 117 122 [weight=1, ];
E: 118 26 [weight=2, ];
E: 118 36 [weight=7, ];
E: 118 120 [weight=2, ];
E: 118 121 [weight=1, ];
E: 118 122 [weight=1, ];
E: 119 27 [weight=1, ];
E: 119 36 [weight=1, ];
E: 119 120 [weight=1, ];
E: 119 121 [weight=2, ];
E: 120 26 [weight=1, ];
E: 120 36 [weight=4, ];
E: 120 121 [weight=1, ];
E: 120 122 [weight=1, ];
E: 121 26 [weight=1, ];
E: 121 36 [weight=3, ];
E: 121 122 [weight=1, ];
