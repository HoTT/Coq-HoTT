N: 35 "BinIntSucc" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 36 "NatSucc" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 32 "Stratified" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 34 "StratifiedType" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 41 "SuccStr_ind" [body=yes, kind=cnst, prop=yes, path="SuccessorStructure", ];
N: 40 "SuccStr_rec" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 42 "SuccStr_rect" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 39 "SuccStr_sind" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 21 "dss_succ" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 4 "is01cat_ss" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 3 "is01cat_ssforall" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 2 "is0gpd_ssforall" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 1 "is1cat_ss" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 6 "is2graph_ss" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 7 "is2graph_ssforall" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 5 "is3graph_ss" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 9 "isgraph_ss" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 8 "isgraph_ssforall" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 25 "ssFam_ind" [body=yes, kind=cnst, prop=yes, path="SuccessorStructure", ];
N: 24 "ssFam_rec" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 26 "ssFam_rect" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 23 "ssFam_sind" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 17 "ssForall_ind" [body=yes, kind=cnst, prop=yes, path="SuccessorStructure", ];
N: 16 "ssForall_rec" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 18 "ssForall_rect" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 15 "ssForall_sind" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 10 "ssHomotopy" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 31 "ss_add" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 30 "ss_add_succ" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 29 "ss_add_sum" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 38 "ss_carrier" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 22 "ss_fam" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 14 "ss_fun" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 13 "ss_fun_succ" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 37 "ss_succ" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 12 "ssfam_const" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 11 "ssfam_sshomotopy" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 33 "stratified_succ" [body=yes, kind=cnst, prop=no, path="SuccessorStructure", ];
N: 44 "SuccStr" [kind=inductive, prop=no, path="SuccessorStructure", ];
N: 28 "ssFam" [kind=inductive, prop=no, path="SuccessorStructure", ];
N: 20 "ssForall" [kind=inductive, prop=no, path="SuccessorStructure", ];
N: 43 "Build_SuccStr" [kind=construct, prop=no, path="SuccessorStructure", ];
N: 27 "Build_ssFam" [kind=construct, prop=no, path="SuccessorStructure", ];
N: 19 "Build_ssForall" [kind=construct, prop=no, path="SuccessorStructure", ];
E: 1 2 [weight=1, ];
E: 1 3 [weight=1, ];
E: 1 4 [weight=46, ];
E: 1 6 [weight=8, ];
E: 1 9 [weight=37, ];
E: 1 11 [weight=28, ];
E: 1 12 [weight=312, ];
E: 1 19 [weight=249, ];
E: 1 44 [weight=40, ];
E: 2 3 [weight=2, ];
E: 2 8 [weight=3, ];
E: 2 11 [weight=8, ];
E: 2 19 [weight=35, ];
E: 2 20 [weight=4, ];
E: 2 28 [weight=2, ];
E: 2 44 [weight=2, ];
E: 3 8 [weight=4, ];
E: 3 11 [weight=16, ];
E: 3 19 [weight=54, ];
E: 3 20 [weight=6, ];
E: 3 28 [weight=2, ];
E: 3 44 [weight=2, ];
E: 4 9 [weight=4, ];
E: 4 12 [weight=7, ];
E: 4 19 [weight=2, ];
E: 4 44 [weight=6, ];
E: 5 6 [weight=1, ];
E: 5 7 [weight=1, ];
E: 5 9 [weight=1, ];
E: 5 12 [weight=1, ];
E: 5 44 [weight=3, ];
E: 6 8 [weight=1, ];
E: 6 9 [weight=1, ];
E: 6 12 [weight=1, ];
E: 6 44 [weight=3, ];
E: 7 8 [weight=2, ];
E: 7 11 [weight=1, ];
E: 7 20 [weight=3, ];
E: 7 28 [weight=2, ];
E: 7 44 [weight=2, ];
E: 8 10 [weight=1, ];
E: 8 20 [weight=2, ];
E: 8 28 [weight=2, ];
E: 8 44 [weight=2, ];
E: 9 12 [weight=1, ];
E: 9 20 [weight=1, ];
E: 9 44 [weight=4, ];
E: 10 11 [weight=1, ];
E: 10 20 [weight=5, ];
E: 10 28 [weight=2, ];
E: 10 44 [weight=2, ];
E: 11 20 [weight=4, ];
E: 11 27 [weight=1, ];
E: 11 28 [weight=3, ];
E: 11 44 [weight=2, ];
E: 12 27 [weight=1, ];
E: 12 28 [weight=1, ];
E: 12 44 [weight=4, ];
E: 13 20 [weight=2, ];
E: 13 28 [weight=2, ];
E: 13 44 [weight=2, ];
E: 14 20 [weight=2, ];
E: 14 28 [weight=2, ];
E: 14 44 [weight=2, ];
E: 15 19 [weight=2, ];
E: 15 20 [weight=4, ];
E: 15 28 [weight=2, ];
E: 15 44 [weight=2, ];
E: 16 18 [weight=1, ];
E: 16 19 [weight=1, ];
E: 16 20 [weight=3, ];
E: 16 28 [weight=2, ];
E: 16 44 [weight=2, ];
E: 17 19 [weight=2, ];
E: 17 20 [weight=4, ];
E: 17 28 [weight=2, ];
E: 17 44 [weight=2, ];
E: 18 19 [weight=2, ];
E: 18 20 [weight=4, ];
E: 18 28 [weight=2, ];
E: 18 44 [weight=2, ];
E: 19 28 [weight=1, ];
E: 19 44 [weight=1, ];
E: 20 28 [weight=1, ];
E: 20 44 [weight=1, ];
E: 21 28 [weight=2, ];
E: 21 44 [weight=2, ];
E: 22 28 [weight=2, ];
E: 22 44 [weight=2, ];
E: 23 27 [weight=2, ];
E: 23 28 [weight=4, ];
E: 23 44 [weight=2, ];
E: 24 26 [weight=1, ];
E: 24 27 [weight=1, ];
E: 24 28 [weight=3, ];
E: 24 44 [weight=2, ];
E: 25 27 [weight=2, ];
E: 25 28 [weight=4, ];
E: 25 44 [weight=2, ];
E: 26 27 [weight=2, ];
E: 26 28 [weight=4, ];
E: 26 44 [weight=2, ];
E: 27 44 [weight=1, ];
E: 28 44 [weight=1, ];
E: 29 31 [weight=3, ];
E: 29 44 [weight=2, ];
E: 30 31 [weight=2, ];
E: 30 44 [weight=2, ];
E: 31 44 [weight=2, ];
E: 32 33 [weight=1, ];
E: 32 34 [weight=1, ];
E: 32 43 [weight=1, ];
E: 32 44 [weight=3, ];
E: 33 34 [weight=6, ];
E: 33 44 [weight=2, ];
E: 34 44 [weight=2, ];
E: 35 43 [weight=1, ];
E: 35 44 [weight=1, ];
E: 36 43 [weight=1, ];
E: 36 44 [weight=1, ];
E: 37 44 [weight=2, ];
E: 38 44 [weight=2, ];
E: 39 43 [weight=2, ];
E: 39 44 [weight=4, ];
E: 40 42 [weight=1, ];
E: 40 43 [weight=1, ];
E: 40 44 [weight=3, ];
E: 41 43 [weight=2, ];
E: 41 44 [weight=4, ];
E: 42 43 [weight=2, ];
E: 42 44 [weight=4, ];
