N: 11 "PathSplit" [body=yes, kind=cnst, prop=no, path="PathSplit", ];
N: 3 "contr_oopathsplit_isequiv" [body=yes, kind=cnst, prop=no, path="PathSplit", ];
N: 9 "contr_pathsplit_isequiv" [body=yes, kind=cnst, prop=no, path="PathSplit", ];
N: 6 "equiv_functor_pathsplit" [body=yes, kind=cnst, prop=no, path="PathSplit", ];
N: 1 "equiv_oopathsplit_isequiv" [body=yes, kind=cnst, prop=no, path="PathSplit", ];
N: 7 "equiv_pathsplit_isequiv" [body=yes, kind=cnst, prop=no, path="PathSplit", ];
N: 4 "isequiv_oopathsplit" [body=yes, kind=cnst, prop=no, path="PathSplit", ];
N: 10 "isequiv_pathsplit" [body=yes, kind=cnst, prop=no, path="PathSplit", ];
N: 2 "ishprop_oopathsplit" [body=yes, kind=cnst, prop=no, path="PathSplit", ];
N: 8 "ishprop_pathsplit" [body=yes, kind=cnst, prop=no, path="PathSplit", ];
N: 5 "ooPathSplit" [body=yes, kind=cnst, prop=no, path="PathSplit", ];
E: 1 2 [weight=1, ];
E: 1 3 [weight=1, ];
E: 1 4 [weight=1, ];
E: 1 5 [weight=3, ];
E: 2 3 [weight=1, ];
E: 2 4 [weight=1, ];
E: 2 5 [weight=3, ];
E: 3 5 [weight=1, ];
E: 3 9 [weight=1, ];
E: 3 11 [weight=1, ];
E: 4 5 [weight=2, ];
E: 4 10 [weight=1, ];
E: 5 11 [weight=1, ];
E: 6 7 [weight=2, ];
E: 6 11 [weight=13, ];
E: 7 8 [weight=1, ];
E: 7 9 [weight=1, ];
E: 7 10 [weight=1, ];
E: 7 11 [weight=3, ];
E: 8 9 [weight=1, ];
E: 8 10 [weight=1, ];
E: 8 11 [weight=3, ];
E: 9 11 [weight=4, ];
E: 10 11 [weight=3, ];
