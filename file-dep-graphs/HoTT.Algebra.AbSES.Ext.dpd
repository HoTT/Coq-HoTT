N: 19 "Ext" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 15 "Ext'" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 11 "ab_ext" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 1 "abext_projective_trivial" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 3 "abext_trivial_projective" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 4 "abses_pushout_ext" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 2 "contr_abext_projective" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 12 "grp_ext" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 16 "iff_ab_ext_trivial_split" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 6 "is0bifunctor_abext" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 18 "is0bifunctor_ext" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 14 "is0bifunctor_ext'" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 10 "is0functor_abext01" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 9 "is0functor_abext10" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 5 "is1bifunctor_abext" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 17 "is1bifunctor_ext" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 13 "is1bifunctor_ext'" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 8 "is1functor_abext01" [body=yes, kind=cnst, prop=no, path="Ext", ];
N: 7 "is1functor_abext10" [body=yes, kind=cnst, prop=no, path="Ext", ];
E: 1 16 [weight=1, ];
E: 1 19 [weight=4, ];
E: 2 3 [weight=1, ];
E: 2 19 [weight=14, ];
E: 3 16 [weight=1, ];
E: 3 19 [weight=4, ];
E: 4 11 [weight=7, ];
E: 4 14 [weight=5, ];
E: 4 15 [weight=5, ];
E: 5 6 [weight=1, ];
E: 5 7 [weight=1, ];
E: 5 8 [weight=1, ];
E: 5 9 [weight=1, ];
E: 5 10 [weight=1, ];
E: 5 11 [weight=2, ];
E: 5 17 [weight=1, ];
E: 5 18 [weight=1, ];
E: 5 19 [weight=1, ];
E: 6 9 [weight=1, ];
E: 6 10 [weight=1, ];
E: 6 11 [weight=2, ];
E: 7 9 [weight=2, ];
E: 7 11 [weight=2, ];
E: 8 10 [weight=2, ];
E: 8 11 [weight=2, ];
E: 9 11 [weight=4, ];
E: 9 12 [weight=33, ];
E: 10 11 [weight=35, ];
E: 11 12 [weight=34, ];
E: 12 19 [weight=401, ];
E: 13 14 [weight=1, ];
E: 13 15 [weight=1, ];
E: 14 15 [weight=1, ];
E: 16 19 [weight=2, ];
E: 17 18 [weight=1, ];
E: 17 19 [weight=1, ];
E: 18 19 [weight=1, ];
