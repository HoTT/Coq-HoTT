N: 15 "Build_IsCocommutativeComonoidObject" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 23 "Build_IsComonoidObject" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 17 "IsCocommutativeComonoidObject" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 30 "IsCommutativeMonoidObject_ind" [body=yes, kind=cnst, prop=yes, path="MonoidObject", ];
N: 29 "IsCommutativeMonoidObject_rec" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 31 "IsCommutativeMonoidObject_rect" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 28 "IsCommutativeMonoidObject_sind" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 25 "IsComonoidObject" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 41 "IsMonoidObject_ind" [body=yes, kind=cnst, prop=yes, path="MonoidObject", ];
N: 40 "IsMonoidObject_rec" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 42 "IsMonoidObject_rect" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 39 "IsMonoidObject_sind" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 8 "associative_hom" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 13 "cco_cocomm" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 11 "cmo_coco_op" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 26 "cmo_comm" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 27 "cmo_mo" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 14 "co_cco" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 20 "co_coassoc" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 22 "co_comult" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 21 "co_counit" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 19 "co_left_counit" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 18 "co_right_counit" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 3 "commutative_hom" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 16 "iscommuatativemonoid_cocomutativemonoid_op" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 2 "iscommutativemonoid_hom" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 24 "ismonoid_comonoid_op" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 4 "ismonoid_hom" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 5 "issemigroup_hom" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 7 "leftidentity_hom" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 36 "mo_assoc" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 12 "mo_co_op" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 35 "mo_left_unit" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 38 "mo_mult" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 1 "mo_preserved" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 34 "mo_right_unit" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 37 "mo_unit" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 9 "monunit_hom" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 6 "rightidentity_hom" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 10 "sgop_hom" [body=yes, kind=cnst, prop=no, path="MonoidObject", ];
N: 33 "IsCommutativeMonoidObject" [kind=inductive, prop=no, path="MonoidObject", ];
N: 44 "IsMonoidObject" [kind=inductive, prop=no, path="MonoidObject", ];
N: 32 "Build_IsCommutativeMonoidObject" [kind=construct, prop=no, path="MonoidObject", ];
N: 43 "Build_IsMonoidObject" [kind=construct, prop=no, path="MonoidObject", ];
E: 1 43 [weight=1, ];
E: 1 44 [weight=3, ];
E: 2 3 [weight=1, ];
E: 2 4 [weight=1, ];
E: 2 9 [weight=2, ];
E: 2 10 [weight=2, ];
E: 2 33 [weight=2, ];
E: 3 10 [weight=4, ];
E: 3 33 [weight=2, ];
E: 4 5 [weight=1, ];
E: 4 6 [weight=1, ];
E: 4 7 [weight=1, ];
E: 4 9 [weight=2, ];
E: 4 10 [weight=2, ];
E: 4 44 [weight=2, ];
E: 5 8 [weight=1, ];
E: 5 10 [weight=2, ];
E: 5 44 [weight=2, ];
E: 6 9 [weight=4, ];
E: 6 10 [weight=3, ];
E: 6 44 [weight=2, ];
E: 7 9 [weight=4, ];
E: 7 10 [weight=3, ];
E: 7 44 [weight=2, ];
E: 8 10 [weight=6, ];
E: 8 44 [weight=2, ];
E: 9 44 [weight=2, ];
E: 10 44 [weight=2, ];
E: 11 12 [weight=1, ];
E: 11 13 [weight=1, ];
E: 11 14 [weight=1, ];
E: 11 17 [weight=2, ];
E: 11 32 [weight=1, ];
E: 11 33 [weight=1, ];
E: 12 18 [weight=1, ];
E: 12 19 [weight=1, ];
E: 12 20 [weight=1, ];
E: 12 21 [weight=13, ];
E: 12 22 [weight=29, ];
E: 12 25 [weight=2, ];
E: 12 43 [weight=1, ];
E: 12 44 [weight=1, ];
E: 13 14 [weight=2, ];
E: 13 16 [weight=1, ];
E: 13 17 [weight=2, ];
E: 13 22 [weight=2, ];
E: 14 16 [weight=1, ];
E: 14 17 [weight=2, ];
E: 14 25 [weight=1, ];
E: 14 27 [weight=1, ];
E: 15 17 [weight=1, ];
E: 15 22 [weight=4, ];
E: 15 24 [weight=1, ];
E: 15 25 [weight=2, ];
E: 15 32 [weight=1, ];
E: 16 17 [weight=2, ];
E: 16 33 [weight=1, ];
E: 17 33 [weight=1, ];
E: 18 21 [weight=6, ];
E: 18 22 [weight=6, ];
E: 18 24 [weight=1, ];
E: 18 25 [weight=2, ];
E: 19 21 [weight=6, ];
E: 19 22 [weight=6, ];
E: 19 24 [weight=1, ];
E: 19 25 [weight=2, ];
E: 20 22 [weight=20, ];
E: 20 24 [weight=1, ];
E: 20 25 [weight=2, ];
E: 21 24 [weight=1, ];
E: 21 25 [weight=2, ];
E: 22 24 [weight=1, ];
E: 22 25 [weight=2, ];
E: 23 25 [weight=1, ];
E: 23 43 [weight=1, ];
E: 24 25 [weight=2, ];
E: 24 44 [weight=1, ];
E: 25 44 [weight=1, ];
E: 26 33 [weight=2, ];
E: 27 33 [weight=2, ];
E: 27 44 [weight=1, ];
E: 28 32 [weight=2, ];
E: 28 33 [weight=4, ];
E: 28 44 [weight=2, ];
E: 29 31 [weight=1, ];
E: 29 32 [weight=1, ];
E: 29 33 [weight=3, ];
E: 29 44 [weight=1, ];
E: 30 32 [weight=2, ];
E: 30 33 [weight=4, ];
E: 30 44 [weight=2, ];
E: 31 32 [weight=2, ];
E: 31 33 [weight=4, ];
E: 31 44 [weight=2, ];
E: 32 44 [weight=1, ];
E: 33 44 [weight=1, ];
E: 34 44 [weight=2, ];
E: 35 44 [weight=2, ];
E: 36 44 [weight=2, ];
E: 37 44 [weight=2, ];
E: 38 44 [weight=2, ];
E: 39 43 [weight=2, ];
E: 39 44 [weight=4, ];
E: 40 42 [weight=1, ];
E: 40 43 [weight=1, ];
E: 40 44 [weight=3, ];
E: 41 43 [weight=2, ];
E: 41 44 [weight=4, ];
E: 42 43 [weight=2, ];
E: 42 44 [weight=4, ];
