N: 10 "ListEq" [body=yes, kind=cnst, prop=no, path="Paths", ];
N: 7 "decode" [body=yes, kind=cnst, prop=no, path="Paths", ];
N: 5 "decode_encode" [body=yes, kind=cnst, prop=no, path="Paths", ];
N: 6 "decode_refl" [body=yes, kind=cnst, prop=no, path="Paths", ];
N: 8 "encode" [body=yes, kind=cnst, prop=no, path="Paths", ];
N: 2 "encode_decode" [body=yes, kind=cnst, prop=no, path="Paths", ];
N: 1 "equiv_path_list" [body=yes, kind=cnst, prop=no, path="Paths", ];
N: 3 "istrunc_list" [body=yes, kind=cnst, prop=no, path="Paths", ];
N: 4 "istrunc_listeq" [body=yes, kind=cnst, prop=no, path="Paths", ];
N: 9 "reflexive_listeq" [body=yes, kind=cnst, prop=no, path="Paths", ];
E: 1 2 [weight=1, ];
E: 1 5 [weight=1, ];
E: 1 7 [weight=1, ];
E: 1 8 [weight=1, ];
E: 1 10 [weight=2, ];
E: 2 7 [weight=16, ];
E: 2 8 [weight=21, ];
E: 2 10 [weight=41, ];
E: 3 4 [weight=1, ];
E: 3 5 [weight=1, ];
E: 3 7 [weight=1, ];
E: 3 8 [weight=1, ];
E: 3 10 [weight=2, ];
E: 4 10 [weight=6, ];
E: 5 6 [weight=1, ];
E: 5 7 [weight=2, ];
E: 5 8 [weight=2, ];
E: 6 7 [weight=4, ];
E: 6 9 [weight=4, ];
E: 6 10 [weight=4, ];
E: 7 10 [weight=13, ];
E: 8 9 [weight=1, ];
E: 8 10 [weight=2, ];
E: 9 10 [weight=5, ];
