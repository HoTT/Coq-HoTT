N: 42 "ap_fst_path_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 41 "ap_fst_path_prod'" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 26 "ap_functor_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 37 "ap_path_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 40 "ap_snd_path_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 39 "ap_snd_path_prod'" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 3 "ap_uncurry" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 5 "contr_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 4 "decidable_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 24 "equiv_functor_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 23 "equiv_functor_prod'" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 22 "equiv_functor_prod_l" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 21 "equiv_functor_prod_r" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 32 "equiv_path_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 18 "equiv_prod_assoc" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 7 "equiv_prod_coind" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 12 "equiv_prod_ind" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 19 "equiv_prod_symm" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 11 "equiv_uncurry" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 38 "eta_path_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 46 "eta_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 27 "functor_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 2 "hfiber_functor_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 20 "iff_functor_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 25 "isequiv_functor_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 33 "isequiv_path_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 8 "isequiv_prod_coind" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 13 "isequiv_prod_ind" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 6 "istrunc_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 1 "istruncmap_functor_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 47 "pack_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 44 "path_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 43 "path_prod'" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 29 "path_prod_V" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 31 "path_prod_pp" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 30 "path_prod_pp_p" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 45 "path_prod_uncurried" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 9 "prod_coind" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 10 "prod_coind_uncurried" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 16 "prod_empty_l" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 17 "prod_empty_r" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 49 "prod_ind" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 14 "prod_unit_l" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 15 "prod_unit_r" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 35 "transport_path_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 34 "transport_path_prod'" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 36 "transport_path_prod_uncurried" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 28 "transport_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
N: 48 "unpack_prod" [body=yes, kind=cnst, prop=no, path="Prod", ];
E: 1 2 [weight=1, ];
E: 1 6 [weight=1, ];
E: 1 27 [weight=3, ];
E: 2 27 [weight=2, ];
E: 2 44 [weight=24, ];
E: 3 43 [weight=3, ];
E: 5 6 [weight=1, ];
E: 6 32 [weight=1, ];
E: 6 44 [weight=1, ];
E: 7 8 [weight=1, ];
E: 7 10 [weight=1, ];
E: 8 10 [weight=11, ];
E: 9 10 [weight=1, ];
E: 11 12 [weight=1, ];
E: 12 13 [weight=1, ];
E: 12 49 [weight=1, ];
E: 13 49 [weight=10, ];
E: 20 27 [weight=2, ];
E: 21 23 [weight=1, ];
E: 22 23 [weight=1, ];
E: 23 25 [weight=1, ];
E: 23 27 [weight=1, ];
E: 24 25 [weight=1, ];
E: 24 27 [weight=1, ];
E: 25 26 [weight=1, ];
E: 25 27 [weight=77, ];
E: 25 43 [weight=10, ];
E: 25 44 [weight=4, ];
E: 26 27 [weight=19, ];
E: 26 44 [weight=7, ];
E: 29 44 [weight=9, ];
E: 30 31 [weight=34, ];
E: 30 44 [weight=331, ];
E: 31 44 [weight=20, ];
E: 32 33 [weight=1, ];
E: 32 45 [weight=1, ];
E: 33 38 [weight=3, ];
E: 33 40 [weight=4, ];
E: 33 42 [weight=4, ];
E: 33 43 [weight=4, ];
E: 33 44 [weight=8, ];
E: 33 45 [weight=25, ];
E: 34 35 [weight=1, ];
E: 34 43 [weight=1, ];
E: 35 36 [weight=1, ];
E: 35 44 [weight=1, ];
E: 36 45 [weight=2, ];
E: 37 44 [weight=4, ];
E: 38 44 [weight=2, ];
E: 39 40 [weight=1, ];
E: 39 43 [weight=1, ];
E: 40 44 [weight=3, ];
E: 41 42 [weight=1, ];
E: 41 43 [weight=1, ];
E: 42 44 [weight=3, ];
E: 43 44 [weight=1, ];
E: 44 45 [weight=1, ];
