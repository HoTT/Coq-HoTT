N: 100 "Build_IsNormalSubgroup'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 169 "Build_IsSubgroup'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 152 "Build_Subgroup'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 78 "IsMaximalSubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 112 "IsNormalSubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 63 "IsSimpleGroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 177 "IsSubgroup_ind" [body=yes, kind=cnst, prop=yes, path="Subgroup", ];
N: 176 "IsSubgroup_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 178 "IsSubgroup_rect" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 175 "IsSubgroup_sind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 88 "IsTrivialGroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 107 "NormalSubgroup_ind" [body=yes, kind=cnst, prop=yes, path="Subgroup", ];
N: 106 "NormalSubgroup_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 108 "NormalSubgroup_rect" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 105 "NormalSubgroup_sind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 158 "Subgroup_ind" [body=yes, kind=cnst, prop=yes, path="Subgroup", ];
N: 157 "Subgroup_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 159 "Subgroup_rect" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 156 "Subgroup_sind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 4 "equiv_grp_kernel_corec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 96 "equiv_in_cosetL_in_cosetR_normalsubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 116 "equiv_in_cosetL_symm" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 115 "equiv_in_cosetR_symm" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 98 "equiv_isnormal_conjugate" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 1 "equiv_istrivial_kernel_isembedding" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 140 "equiv_path_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 139 "equiv_path_subgroup'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 114 "equiv_sigma_in_cosetL_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 113 "equiv_sigma_in_cosetR_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 131 "equiv_subgroup_corec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 136 "equiv_subgroup_group" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 142 "equiv_subgroup_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 141 "equiv_subgroup_op_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 102 "equiv_symmetric_in_normalsubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 46 "functor_subgroup_generated" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 45 "functor_subgroup_generated'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 41 "functor_subgroup_generated_merely" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 130 "functor_subgroup_group" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 65 "functor_subgroup_preimage" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 22 "functor_subgroup_product" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 17 "grp_homo_image_in" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 133 "grp_homo_restr" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 11 "grp_homo_subgroup_image_in" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 19 "grp_image" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 16 "grp_image_embedding" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 18 "grp_image_in" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 15 "grp_image_in_embedding" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 97 "grp_iso_normal_conj" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 39 "grp_iso_subgroup_generated_merely" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 129 "grp_iso_subgroup_group" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 80 "grp_iso_subgroup_group_maximal" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 83 "grp_iso_trivial_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 6 "grp_kernel" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 5 "grp_kernel_corec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 8 "iff_subgroup_image_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 128 "in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 93 "in_cosetL_cong" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 95 "in_cosetL_inverse" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 118 "in_cosetL_unit" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 127 "in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 92 "in_cosetR_cong" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 94 "in_cosetR_inverse" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 117 "in_cosetR_unit" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 62 "is_simple_group" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 3 "isembedding_istrivial_kernel" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 134 "isembedding_subgroup_incl" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 143 "isequiv_subgroup_in_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 126 "ishprop_in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 125 "ishprop_in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 76 "ishprop_ismaximalsubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 99 "ishprop_isnormalsubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 163 "ishprop_issubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 86 "ishprop_istrivialgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 138 "ishset_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 14 "ismaximal_image_issurj" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 77 "ismaximalsubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 75 "ismaximalsubgroup_maximalsubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 111 "isnormal" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 101 "isnormal_conj" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 79 "isnormal_maximal_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 72 "isnormal_subgroup_grp_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 7 "isnormal_subgroup_image" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 66 "isnormal_subgroup_preimage" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 24 "isnormal_subgroup_product" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 89 "isnormal_trivial_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 170 "issig_issubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 153 "issig_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 162 "issubgroup_equiv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 74 "issubgroup_grp_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 171 "issubgroup_in_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 167 "issubgroup_in_inv'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 166 "issubgroup_in_inv_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 172 "issubgroup_in_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 168 "issubgroup_in_op_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 165 "issubgroup_in_op_l" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 164 "issubgroup_in_op_r" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 173 "issubgroup_in_unit" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 174 "issubgroup_predicate" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 68 "issubgroup_preimage" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 10 "issurj_grp_homo_subgroup_image_in" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 82 "istrivial_grp_iso" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 84 "istrivial_iff_grp_iso_trivial" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 2 "istrivial_kernel_isembedding" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 85 "istrivial_trivial_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 87 "istrivialgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 81 "maximal_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 71 "normalsubgroup_grp_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 103 "normalsubgroup_isnormal" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 23 "normalsubgroup_product" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 104 "normalsubgroup_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 38 "path_subgroup_generated" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 124 "reflexive_in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 123 "reflexive_in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 53 "sgt_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 52 "sgt_inv'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 51 "sgt_op'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 132 "subgroup_corec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 44 "subgroup_eq_functor_subgroup_generated" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 40 "subgroup_eq_functor_subgroup_generated_merely" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 21 "subgroup_eq_functor_subgroup_product" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 20 "subgroup_eq_product_grp_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 43 "subgroup_eq_subgroup_generated_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 50 "subgroup_generated" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 48 "subgroup_generated_gen_incl" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 49 "subgroup_generated_in" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 42 "subgroup_generated_merely" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 47 "subgroup_generated_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 56 "subgroup_generated_type_ind" [body=yes, kind=cnst, prop=yes, path="Subgroup", ];
N: 55 "subgroup_generated_type_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 57 "subgroup_generated_type_rect" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 54 "subgroup_generated_type_sind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 137 "subgroup_group" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 73 "subgroup_grp_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 13 "subgroup_image" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 12 "subgroup_image_in" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 9 "subgroup_image_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 150 "subgroup_in_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 149 "subgroup_in_inv'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 146 "subgroup_in_inv_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 148 "subgroup_in_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 147 "subgroup_in_op_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 145 "subgroup_in_op_l" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 144 "subgroup_in_op_r" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 151 "subgroup_in_unit" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 135 "subgroup_incl" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 70 "subgroup_intersection" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 69 "subgroup_intersection_family" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 154 "subgroup_issubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 155 "subgroup_pred" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 67 "subgroup_preimage" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 64 "subgroup_preimage_intersection" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 37 "subgroup_product" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 32 "subgroup_product_comm" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 25 "subgroup_product_eq" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 36 "subgroup_product_incl_l" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 35 "subgroup_product_incl_r" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 34 "subgroup_product_ind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 29 "subgroup_product_self" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 33 "subgroup_product_smallest" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 26 "subgroup_product_subset_pres" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 28 "subgroup_product_subset_pres_l" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 27 "subgroup_product_subset_pres_r" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 31 "subgroup_product_trivial_l" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 30 "subgroup_product_trivial_r" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 122 "symmetric_in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 121 "symmetric_in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 120 "transitive_in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 119 "transitive_in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 91 "trivial_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 90 "trivial_subgroup_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 180 "IsSubgroup" [kind=inductive, prop=no, path="Subgroup", ];
N: 110 "NormalSubgroup" [kind=inductive, prop=no, path="Subgroup", ];
N: 161 "Subgroup" [kind=inductive, prop=no, path="Subgroup", ];
N: 61 "subgroup_generated_type" [kind=inductive, prop=no, path="Subgroup", ];
N: 179 "Build_IsSubgroup" [kind=construct, prop=no, path="Subgroup", ];
N: 109 "Build_NormalSubgroup" [kind=construct, prop=no, path="Subgroup", ];
N: 160 "Build_Subgroup" [kind=construct, prop=no, path="Subgroup", ];
N: 60 "sgt_in" [kind=construct, prop=no, path="Subgroup", ];
N: 59 "sgt_unit" [kind=construct, prop=no, path="Subgroup", ];
N: 58 "sgt_op" [kind=construct, prop=no, path="Subgroup", ];
E: 1 2 [weight=1, ];
E: 1 3 [weight=1, ];
E: 1 6 [weight=6, ];
E: 1 86 [weight=1, ];
E: 1 88 [weight=5, ];
E: 2 6 [weight=3, ];
E: 2 88 [weight=2, ];
E: 3 6 [weight=3, ];
E: 3 88 [weight=2, ];
E: 4 6 [weight=2, ];
E: 4 131 [weight=1, ];
E: 4 137 [weight=1, ];
E: 5 6 [weight=2, ];
E: 5 132 [weight=1, ];
E: 5 137 [weight=1, ];
E: 6 66 [weight=1, ];
E: 6 67 [weight=1, ];
E: 6 89 [weight=1, ];
E: 6 91 [weight=2, ];
E: 6 109 [weight=1, ];
E: 6 110 [weight=1, ];
E: 7 9 [weight=1, ];
E: 7 12 [weight=1, ];
E: 7 13 [weight=6, ];
E: 7 67 [weight=3, ];
E: 7 100 [weight=1, ];
E: 7 101 [weight=1, ];
E: 7 112 [weight=3, ];
E: 7 133 [weight=1, ];
E: 7 137 [weight=2, ];
E: 7 161 [weight=2, ];
E: 8 9 [weight=1, ];
E: 8 13 [weight=4, ];
E: 8 67 [weight=4, ];
E: 8 133 [weight=2, ];
E: 8 137 [weight=4, ];
E: 8 161 [weight=4, ];
E: 9 13 [weight=2, ];
E: 9 67 [weight=2, ];
E: 9 133 [weight=4, ];
E: 9 137 [weight=5, ];
E: 9 161 [weight=4, ];
E: 10 11 [weight=1, ];
E: 10 13 [weight=1, ];
E: 10 133 [weight=1, ];
E: 10 137 [weight=3, ];
E: 10 161 [weight=2, ];
E: 11 12 [weight=1, ];
E: 11 13 [weight=2, ];
E: 11 130 [weight=1, ];
E: 11 137 [weight=2, ];
E: 11 161 [weight=2, ];
E: 12 13 [weight=1, ];
E: 12 133 [weight=3, ];
E: 12 137 [weight=2, ];
E: 12 161 [weight=2, ];
E: 13 19 [weight=1, ];
E: 13 133 [weight=1, ];
E: 13 137 [weight=1, ];
E: 13 161 [weight=3, ];
E: 14 18 [weight=1, ];
E: 14 19 [weight=2, ];
E: 14 78 [weight=1, ];
E: 15 16 [weight=16, ];
E: 15 132 [weight=5, ];
E: 15 137 [weight=6, ];
E: 16 160 [weight=1, ];
E: 16 161 [weight=1, ];
E: 16 179 [weight=1, ];
E: 17 18 [weight=1, ];
E: 17 19 [weight=2, ];
E: 17 132 [weight=1, ];
E: 17 137 [weight=1, ];
E: 18 19 [weight=1, ];
E: 19 152 [weight=1, ];
E: 19 161 [weight=1, ];
E: 20 37 [weight=4, ];
E: 20 43 [weight=1, ];
E: 20 73 [weight=10, ];
E: 20 161 [weight=4, ];
E: 21 37 [weight=2, ];
E: 21 44 [weight=1, ];
E: 21 161 [weight=8, ];
E: 22 37 [weight=2, ];
E: 22 46 [weight=1, ];
E: 22 161 [weight=8, ];
E: 23 24 [weight=1, ];
E: 23 37 [weight=1, ];
E: 23 109 [weight=1, ];
E: 23 110 [weight=5, ];
E: 24 37 [weight=2, ];
E: 24 46 [weight=1, ];
E: 24 100 [weight=1, ];
E: 24 101 [weight=2, ];
E: 24 112 [weight=5, ];
E: 24 161 [weight=4, ];
E: 25 26 [weight=2, ];
E: 25 37 [weight=4, ];
E: 25 161 [weight=8, ];
E: 26 27 [weight=1, ];
E: 26 28 [weight=1, ];
E: 26 37 [weight=5, ];
E: 26 161 [weight=8, ];
E: 27 33 [weight=1, ];
E: 27 35 [weight=1, ];
E: 27 36 [weight=1, ];
E: 27 37 [weight=4, ];
E: 27 161 [weight=6, ];
E: 28 33 [weight=1, ];
E: 28 35 [weight=1, ];
E: 28 36 [weight=1, ];
E: 28 37 [weight=4, ];
E: 28 161 [weight=6, ];
E: 29 33 [weight=1, ];
E: 29 36 [weight=1, ];
E: 29 37 [weight=2, ];
E: 29 161 [weight=2, ];
E: 30 33 [weight=1, ];
E: 30 36 [weight=1, ];
E: 30 37 [weight=2, ];
E: 30 90 [weight=1, ];
E: 30 91 [weight=4, ];
E: 30 161 [weight=2, ];
E: 31 33 [weight=1, ];
E: 31 35 [weight=1, ];
E: 31 37 [weight=2, ];
E: 31 90 [weight=1, ];
E: 31 91 [weight=4, ];
E: 31 161 [weight=2, ];
E: 32 33 [weight=2, ];
E: 32 35 [weight=2, ];
E: 32 36 [weight=2, ];
E: 32 37 [weight=6, ];
E: 32 161 [weight=4, ];
E: 33 37 [weight=1, ];
E: 33 47 [weight=1, ];
E: 33 161 [weight=6, ];
E: 34 35 [weight=2, ];
E: 34 36 [weight=2, ];
E: 34 37 [weight=6, ];
E: 34 57 [weight=1, ];
E: 34 58 [weight=2, ];
E: 34 59 [weight=2, ];
E: 34 60 [weight=1, ];
E: 34 61 [weight=21, ];
E: 34 161 [weight=4, ];
E: 35 37 [weight=1, ];
E: 35 49 [weight=1, ];
E: 35 50 [weight=1, ];
E: 35 161 [weight=4, ];
E: 36 37 [weight=1, ];
E: 36 49 [weight=1, ];
E: 36 50 [weight=1, ];
E: 36 161 [weight=4, ];
E: 37 50 [weight=1, ];
E: 37 161 [weight=5, ];
E: 38 40 [weight=1, ];
E: 38 50 [weight=4, ];
E: 38 139 [weight=1, ];
E: 38 161 [weight=1, ];
E: 39 40 [weight=1, ];
E: 39 50 [weight=4, ];
E: 39 129 [weight=1, ];
E: 39 137 [weight=2, ];
E: 40 41 [weight=2, ];
E: 40 50 [weight=4, ];
E: 41 42 [weight=2, ];
E: 41 45 [weight=1, ];
E: 41 50 [weight=12, ];
E: 42 45 [weight=1, ];
E: 42 50 [weight=15, ];
E: 42 57 [weight=1, ];
E: 42 58 [weight=1, ];
E: 42 59 [weight=1, ];
E: 42 60 [weight=1, ];
E: 42 61 [weight=19, ];
E: 42 125 [weight=2, ];
E: 43 47 [weight=2, ];
E: 43 50 [weight=12, ];
E: 43 60 [weight=2, ];
E: 43 61 [weight=2, ];
E: 43 73 [weight=4, ];
E: 44 46 [weight=2, ];
E: 44 50 [weight=6, ];
E: 44 155 [weight=1, ];
E: 45 46 [weight=1, ];
E: 45 50 [weight=2, ];
E: 46 47 [weight=1, ];
E: 46 49 [weight=1, ];
E: 46 50 [weight=5, ];
E: 46 67 [weight=2, ];
E: 46 155 [weight=1, ];
E: 47 50 [weight=2, ];
E: 47 57 [weight=1, ];
E: 47 61 [weight=5, ];
E: 47 147 [weight=1, ];
E: 47 151 [weight=1, ];
E: 47 161 [weight=2, ];
E: 48 50 [weight=2, ];
E: 48 60 [weight=1, ];
E: 48 61 [weight=1, ];
E: 48 137 [weight=1, ];
E: 49 50 [weight=1, ];
E: 49 60 [weight=1, ];
E: 49 61 [weight=4, ];
E: 50 58 [weight=1, ];
E: 50 59 [weight=1, ];
E: 50 61 [weight=18, ];
E: 50 152 [weight=1, ];
E: 50 161 [weight=1, ];
E: 51 53 [weight=1, ];
E: 51 58 [weight=1, ];
E: 51 61 [weight=6, ];
E: 52 53 [weight=1, ];
E: 52 61 [weight=4, ];
E: 53 58 [weight=1, ];
E: 53 59 [weight=1, ];
E: 53 61 [weight=4, ];
E: 54 58 [weight=2, ];
E: 54 59 [weight=2, ];
E: 54 60 [weight=2, ];
E: 54 61 [weight=10, ];
E: 55 57 [weight=1, ];
E: 55 58 [weight=1, ];
E: 55 59 [weight=1, ];
E: 55 60 [weight=1, ];
E: 55 61 [weight=5, ];
E: 56 58 [weight=2, ];
E: 56 59 [weight=2, ];
E: 56 60 [weight=2, ];
E: 56 61 [weight=10, ];
E: 57 58 [weight=2, ];
E: 57 59 [weight=2, ];
E: 57 60 [weight=2, ];
E: 57 61 [weight=10, ];
E: 62 63 [weight=2, ];
E: 62 78 [weight=1, ];
E: 62 88 [weight=1, ];
E: 62 112 [weight=1, ];
E: 62 161 [weight=1, ];
E: 63 78 [weight=1, ];
E: 63 88 [weight=1, ];
E: 63 112 [weight=1, ];
E: 63 161 [weight=1, ];
E: 64 67 [weight=4, ];
E: 64 70 [weight=3, ];
E: 64 161 [weight=4, ];
E: 65 67 [weight=2, ];
E: 65 161 [weight=4, ];
E: 66 67 [weight=4, ];
E: 66 111 [weight=1, ];
E: 66 112 [weight=4, ];
E: 66 161 [weight=2, ];
E: 67 68 [weight=1, ];
E: 67 155 [weight=1, ];
E: 67 160 [weight=1, ];
E: 67 161 [weight=3, ];
E: 68 169 [weight=1, ];
E: 68 180 [weight=3, ];
E: 69 147 [weight=1, ];
E: 69 151 [weight=1, ];
E: 69 152 [weight=1, ];
E: 69 161 [weight=3, ];
E: 70 147 [weight=2, ];
E: 70 151 [weight=2, ];
E: 70 152 [weight=1, ];
E: 70 161 [weight=5, ];
E: 71 72 [weight=1, ];
E: 71 73 [weight=1, ];
E: 71 109 [weight=1, ];
E: 71 110 [weight=3, ];
E: 72 73 [weight=4, ];
E: 72 111 [weight=1, ];
E: 72 112 [weight=4, ];
E: 72 161 [weight=2, ];
E: 73 74 [weight=1, ];
E: 73 160 [weight=1, ];
E: 73 161 [weight=3, ];
E: 74 166 [weight=1, ];
E: 74 169 [weight=1, ];
E: 74 180 [weight=3, ];
E: 75 78 [weight=1, ];
E: 75 81 [weight=1, ];
E: 76 78 [weight=1, ];
E: 76 161 [weight=2, ];
E: 77 78 [weight=2, ];
E: 77 161 [weight=2, ];
E: 78 161 [weight=2, ];
E: 79 81 [weight=3, ];
E: 79 112 [weight=2, ];
E: 80 81 [weight=10, ];
E: 80 137 [weight=6, ];
E: 81 160 [weight=1, ];
E: 81 161 [weight=1, ];
E: 81 179 [weight=1, ];
E: 82 84 [weight=2, ];
E: 82 88 [weight=5, ];
E: 82 137 [weight=11, ];
E: 82 161 [weight=8, ];
E: 83 84 [weight=2, ];
E: 83 85 [weight=2, ];
E: 83 88 [weight=2, ];
E: 83 91 [weight=7, ];
E: 83 137 [weight=7, ];
E: 83 161 [weight=4, ];
E: 84 88 [weight=5, ];
E: 84 137 [weight=44, ];
E: 84 151 [weight=1, ];
E: 84 161 [weight=2, ];
E: 85 88 [weight=1, ];
E: 85 91 [weight=2, ];
E: 86 88 [weight=1, ];
E: 86 91 [weight=3, ];
E: 86 161 [weight=2, ];
E: 87 88 [weight=2, ];
E: 87 91 [weight=1, ];
E: 87 161 [weight=2, ];
E: 88 91 [weight=1, ];
E: 88 161 [weight=2, ];
E: 89 91 [weight=4, ];
E: 89 112 [weight=2, ];
E: 90 91 [weight=1, ];
E: 90 155 [weight=2, ];
E: 90 161 [weight=2, ];
E: 91 152 [weight=1, ];
E: 91 161 [weight=1, ];
E: 92 110 [weight=2, ];
E: 92 111 [weight=2, ];
E: 92 127 [weight=6, ];
E: 92 148 [weight=1, ];
E: 93 110 [weight=2, ];
E: 93 111 [weight=2, ];
E: 93 128 [weight=6, ];
E: 93 148 [weight=1, ];
E: 94 96 [weight=1, ];
E: 94 110 [weight=2, ];
E: 94 127 [weight=6, ];
E: 94 128 [weight=1, ];
E: 95 96 [weight=1, ];
E: 95 110 [weight=2, ];
E: 95 127 [weight=2, ];
E: 95 128 [weight=5, ];
E: 96 102 [weight=1, ];
E: 96 110 [weight=2, ];
E: 96 115 [weight=1, ];
E: 96 127 [weight=3, ];
E: 96 128 [weight=1, ];
E: 97 101 [weight=1, ];
E: 97 112 [weight=2, ];
E: 97 129 [weight=1, ];
E: 97 137 [weight=2, ];
E: 97 161 [weight=2, ];
E: 98 99 [weight=1, ];
E: 98 100 [weight=1, ];
E: 98 101 [weight=1, ];
E: 98 112 [weight=3, ];
E: 98 125 [weight=1, ];
E: 98 161 [weight=2, ];
E: 99 112 [weight=2, ];
E: 99 161 [weight=2, ];
E: 100 112 [weight=2, ];
E: 100 161 [weight=2, ];
E: 101 102 [weight=1, ];
E: 101 112 [weight=2, ];
E: 101 161 [weight=2, ];
E: 102 111 [weight=2, ];
E: 102 112 [weight=2, ];
E: 102 161 [weight=2, ];
E: 103 110 [weight=2, ];
E: 103 112 [weight=1, ];
E: 104 110 [weight=2, ];
E: 104 161 [weight=1, ];
E: 105 109 [weight=2, ];
E: 105 110 [weight=4, ];
E: 105 112 [weight=2, ];
E: 105 161 [weight=2, ];
E: 106 108 [weight=1, ];
E: 106 109 [weight=1, ];
E: 106 110 [weight=3, ];
E: 106 112 [weight=1, ];
E: 106 161 [weight=1, ];
E: 107 109 [weight=2, ];
E: 107 110 [weight=4, ];
E: 107 112 [weight=2, ];
E: 107 161 [weight=2, ];
E: 108 109 [weight=2, ];
E: 108 110 [weight=4, ];
E: 108 112 [weight=2, ];
E: 108 161 [weight=2, ];
E: 109 112 [weight=1, ];
E: 109 161 [weight=1, ];
E: 110 112 [weight=1, ];
E: 110 161 [weight=1, ];
E: 111 112 [weight=2, ];
E: 111 161 [weight=2, ];
E: 112 161 [weight=2, ];
E: 113 127 [weight=3, ];
E: 113 141 [weight=1, ];
E: 113 161 [weight=2, ];
E: 114 128 [weight=2, ];
E: 114 161 [weight=2, ];
E: 115 121 [weight=2, ];
E: 115 125 [weight=2, ];
E: 115 127 [weight=6, ];
E: 115 161 [weight=2, ];
E: 116 122 [weight=2, ];
E: 116 126 [weight=2, ];
E: 116 128 [weight=6, ];
E: 116 161 [weight=2, ];
E: 117 127 [weight=4, ];
E: 117 161 [weight=2, ];
E: 118 122 [weight=2, ];
E: 118 126 [weight=2, ];
E: 118 128 [weight=4, ];
E: 118 161 [weight=2, ];
E: 119 127 [weight=5, ];
E: 119 161 [weight=2, ];
E: 120 128 [weight=5, ];
E: 120 161 [weight=2, ];
E: 121 127 [weight=4, ];
E: 121 161 [weight=2, ];
E: 122 128 [weight=4, ];
E: 122 161 [weight=2, ];
E: 123 127 [weight=3, ];
E: 123 161 [weight=2, ];
E: 124 128 [weight=3, ];
E: 124 161 [weight=2, ];
E: 125 127 [weight=2, ];
E: 125 161 [weight=2, ];
E: 126 128 [weight=2, ];
E: 126 161 [weight=2, ];
E: 127 161 [weight=2, ];
E: 128 161 [weight=2, ];
E: 129 130 [weight=10, ];
E: 129 135 [weight=2, ];
E: 129 137 [weight=46, ];
E: 129 161 [weight=4, ];
E: 130 132 [weight=1, ];
E: 130 133 [weight=2, ];
E: 130 137 [weight=3, ];
E: 130 161 [weight=4, ];
E: 131 132 [weight=8, ];
E: 131 135 [weight=6, ];
E: 131 137 [weight=30, ];
E: 131 161 [weight=2, ];
E: 132 137 [weight=6, ];
E: 132 161 [weight=2, ];
E: 133 135 [weight=1, ];
E: 133 137 [weight=2, ];
E: 133 161 [weight=2, ];
E: 134 135 [weight=1, ];
E: 134 137 [weight=1, ];
E: 134 161 [weight=2, ];
E: 135 137 [weight=6, ];
E: 135 161 [weight=2, ];
E: 136 137 [weight=5, ];
E: 136 161 [weight=7, ];
E: 137 161 [weight=2, ];
E: 138 153 [weight=1, ];
E: 138 161 [weight=2, ];
E: 138 170 [weight=1, ];
E: 138 180 [weight=3, ];
E: 139 140 [weight=1, ];
E: 139 161 [weight=6, ];
E: 140 153 [weight=7, ];
E: 140 161 [weight=15, ];
E: 140 163 [weight=1, ];
E: 140 180 [weight=21, ];
E: 141 142 [weight=1, ];
E: 141 161 [weight=2, ];
E: 142 143 [weight=1, ];
E: 142 150 [weight=1, ];
E: 142 161 [weight=2, ];
E: 143 149 [weight=1, ];
E: 143 150 [weight=2, ];
E: 143 161 [weight=2, ];
E: 144 161 [weight=2, ];
E: 144 164 [weight=1, ];
E: 145 161 [weight=2, ];
E: 145 165 [weight=1, ];
E: 146 161 [weight=2, ];
E: 146 166 [weight=1, ];
E: 147 161 [weight=2, ];
E: 147 168 [weight=1, ];
E: 148 161 [weight=2, ];
E: 149 161 [weight=2, ];
E: 149 167 [weight=1, ];
E: 150 161 [weight=2, ];
E: 151 161 [weight=2, ];
E: 152 160 [weight=1, ];
E: 152 161 [weight=1, ];
E: 152 169 [weight=1, ];
E: 153 160 [weight=8, ];
E: 153 161 [weight=12, ];
E: 153 180 [weight=21, ];
E: 154 161 [weight=2, ];
E: 154 180 [weight=1, ];
E: 155 161 [weight=2, ];
E: 156 160 [weight=2, ];
E: 156 161 [weight=4, ];
E: 156 180 [weight=2, ];
E: 157 159 [weight=1, ];
E: 157 160 [weight=1, ];
E: 157 161 [weight=3, ];
E: 157 180 [weight=1, ];
E: 158 160 [weight=2, ];
E: 158 161 [weight=4, ];
E: 158 180 [weight=2, ];
E: 159 160 [weight=2, ];
E: 159 161 [weight=4, ];
E: 159 180 [weight=2, ];
E: 160 180 [weight=1, ];
E: 161 180 [weight=1, ];
E: 162 179 [weight=1, ];
E: 162 180 [weight=3, ];
E: 163 170 [weight=1, ];
E: 163 180 [weight=2, ];
E: 164 166 [weight=1, ];
E: 164 180 [weight=2, ];
E: 165 168 [weight=1, ];
E: 165 180 [weight=2, ];
E: 166 168 [weight=1, ];
E: 166 180 [weight=2, ];
E: 167 180 [weight=2, ];
E: 168 180 [weight=2, ];
E: 169 179 [weight=1, ];
E: 169 180 [weight=1, ];
E: 170 179 [weight=8, ];
E: 170 180 [weight=12, ];
E: 171 180 [weight=2, ];
E: 172 180 [weight=2, ];
E: 173 180 [weight=2, ];
E: 174 180 [weight=2, ];
E: 175 179 [weight=2, ];
E: 175 180 [weight=4, ];
E: 176 178 [weight=1, ];
E: 176 179 [weight=1, ];
E: 176 180 [weight=3, ];
E: 177 179 [weight=2, ];
E: 177 180 [weight=4, ];
E: 178 179 [weight=2, ];
E: 178 180 [weight=4, ];
