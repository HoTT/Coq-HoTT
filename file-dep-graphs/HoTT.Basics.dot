digraph HoTT_Basics {
  graph [ratio=0.5]
  node [style=filled]
Numerals_Hexadecimal_HexadecimalExp [label="HexadecimalExp", URL=<Numerals.html#Hexadecimal.HexadecimalExp>, fillcolor="#7FAAFF"] ;
Numerals_Hexadecimal_Hexadecimal [label="Hexadecimal", URL=<Numerals.html#Hexadecimal.Hexadecimal>, fillcolor="#7FAAFF"] ;
Numerals_Hexadecimal_Little_succ_double [label="succ_double", URL=<Numerals.html#Hexadecimal.Little.succ_double>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_hexadecimal [label="hexadecimal", URL=<Numerals.html#Hexadecimal.hexadecimal>, fillcolor="#E2CDFA"] ;
Numerals_Hexadecimal_Little_double [label="double", URL=<Numerals.html#Hexadecimal.Little.double>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_Little_succ [label="succ", URL=<Numerals.html#Hexadecimal.Little.succ>, peripheries=3, fillcolor="#F070D1"] ;
Hexadecimal_int_sind [label="int_sind", URL=<Hexadecimal.html#int_sind>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_Little_succ_double [label="succ_double", URL=<Numerals.html#Decimal.Little.succ_double>, peripheries=3, fillcolor="#F070D1"] ;
Hexadecimal_int_rec [label="int_rec", URL=<Hexadecimal.html#int_rec>, peripheries=3, fillcolor="#F070D1"] ;
Hexadecimal_int_ind [label="int_ind", URL=<Hexadecimal.html#int_ind>, peripheries=3, fillcolor="#7FFFD4"] ;
Numerals_Decimal_Little_double [label="double", URL=<Numerals.html#Decimal.Little.double>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_Little_succ [label="succ", URL=<Numerals.html#Decimal.Little.succ>, fillcolor="#F070D1"] ;
Hexadecimal_int_rect [label="int_rect", URL=<Hexadecimal.html#int_rect>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_Neg [label="Neg", URL=<Numerals.html#Hexadecimal.Neg>, fillcolor="#7FAAFF"] ;
Trunc_istrunc_inhabited_istrunc [label="istrunc_inhabited_istrunc", URL=<Trunc.html#istrunc_inhabited_istrunc>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_Pos [label="Pos", URL=<Numerals.html#Hexadecimal.Pos>, fillcolor="#7FAAFF"] ;
Trunc_equiv_contr_hprop [label="equiv_contr_hprop", URL=<Trunc.html#equiv_contr_hprop>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_int [label="int", URL=<Numerals.html#Hexadecimal.int>, fillcolor="#E2CDFA"] ;
Trunc_contr_istrunc [label="contr_istrunc", URL=<Trunc.html#contr_istrunc>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_uint_sind [label="uint_sind", URL=<Numerals.html#Hexadecimal.uint_sind>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_ishprop_istruncmap [label="ishprop_istruncmap", URL=<Trunc.html#ishprop_istruncmap>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_uint_rec [label="uint_rec", URL=<Numerals.html#Hexadecimal.uint_rec>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_ishprop_istrunc [label="ishprop_istrunc", URL=<Trunc.html#ishprop_istrunc>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_uint_ind [label="uint_ind", URL=<Numerals.html#Hexadecimal.uint_ind>, peripheries=3, fillcolor="#7FFFD4"] ;
Trunc_istrunc_forall [label="istrunc_forall", URL=<Trunc.html#istrunc_forall>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_uint_rect [label="uint_rect", URL=<Numerals.html#Hexadecimal.uint_rect>, fillcolor="#F070D1"] ;
Trunc_contr_forall [label="contr_forall", URL=<Trunc.html#contr_forall>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_Df [label="Df", URL=<Numerals.html#Hexadecimal.Df>, fillcolor="#7FAAFF"] ;
Trunc_iff_contr_hprop [label="iff_contr_hprop", URL=<Trunc.html#iff_contr_hprop>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_De [label="De", URL=<Numerals.html#Hexadecimal.De>, fillcolor="#7FAAFF"] ;
Trunc_equiv_iff_hprop [label="equiv_iff_hprop", URL=<Trunc.html#equiv_iff_hprop>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_Dd [label="Dd", URL=<Numerals.html#Hexadecimal.Dd>, fillcolor="#7FAAFF"] ;
Trunc_equiv_iff_hprop_uncurried [label="equiv_iff_hprop_uncurried", URL=<Trunc.html#equiv_iff_hprop_uncurried>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_Dc [label="Dc", URL=<Numerals.html#Hexadecimal.Dc>, fillcolor="#7FAAFF"] ;
Trunc_isequiv_iff_hprop [label="isequiv_iff_hprop", URL=<Trunc.html#isequiv_iff_hprop>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_Db [label="Db", URL=<Numerals.html#Hexadecimal.Db>, fillcolor="#7FAAFF"] ;
Trunc_hprop_allpath [label="hprop_allpath", URL=<Trunc.html#hprop_allpath>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_Da [label="Da", URL=<Numerals.html#Hexadecimal.Da>, fillcolor="#7FAAFF"] ;
Trunc_path_ishprop [label="path_ishprop", URL=<Trunc.html#path_ishprop>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_D9 [label="D9", URL=<Numerals.html#Hexadecimal.D9>, fillcolor="#7FAAFF"] ;
Trunc_hprop_inhabited_contr [label="hprop_inhabited_contr", URL=<Trunc.html#hprop_inhabited_contr>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_D8 [label="D8", URL=<Numerals.html#Hexadecimal.D8>, fillcolor="#7FAAFF"] ;
Trunc_contr_inhabited_hprop [label="contr_inhabited_hprop", URL=<Trunc.html#contr_inhabited_hprop>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_D7 [label="D7", URL=<Numerals.html#Hexadecimal.D7>, fillcolor="#7FAAFF"] ;
Trunc_smallntype [label="smallntype", URL=<Trunc.html#smallntype>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_D6 [label="D6", URL=<Numerals.html#Hexadecimal.D6>, fillcolor="#7FAAFF"] ;
Trunc_default_TruncType [label="default_TruncType", URL=<Trunc.html#default_TruncType>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_D5 [label="D5", URL=<Numerals.html#Hexadecimal.D5>, fillcolor="#7FAAFF"] ;
Trunc_trunctype_istrunc [label="trunctype_istrunc", URL=<Trunc.html#trunctype_istrunc>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_D4 [label="D4", URL=<Numerals.html#Hexadecimal.D4>, fillcolor="#7FAAFF"] ;
Trunc_trunctype_type [label="trunctype_type", URL=<Trunc.html#trunctype_type>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_D3 [label="D3", URL=<Numerals.html#Hexadecimal.D3>, fillcolor="#7FAAFF"] ;
Trunc_TruncType_sind [label="TruncType_sind", URL=<Trunc.html#TruncType_sind>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_D2 [label="D2", URL=<Numerals.html#Hexadecimal.D2>, fillcolor="#7FAAFF"] ;
Trunc_TruncType_rec [label="TruncType_rec", URL=<Trunc.html#TruncType_rec>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_D1 [label="D1", URL=<Numerals.html#Hexadecimal.D1>, fillcolor="#7FAAFF"] ;
Trunc_TruncType_ind [label="TruncType_ind", URL=<Trunc.html#TruncType_ind>, peripheries=3, fillcolor="#7FFFD4"] ;
Numerals_Hexadecimal_D0 [label="D0", URL=<Numerals.html#Hexadecimal.D0>, fillcolor="#7FAAFF"] ;
Trunc_TruncType_rect [label="TruncType_rect", URL=<Trunc.html#TruncType_rect>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_Nil [label="Nil", URL=<Numerals.html#Hexadecimal.Nil>, fillcolor="#7FAAFF"] ;
Trunc_Build_TruncType [label="Build_TruncType", URL=<Trunc.html#Build_TruncType>, fillcolor="#7FAAFF"] ;
Numerals_Hexadecimal_uint [label="uint", URL=<Numerals.html#Hexadecimal.uint>, fillcolor="#E2CDFA"] ;
Trunc_TruncType [label="TruncType", URL=<Trunc.html#TruncType>, fillcolor="#E2CDFA"] ;
Trunc_istruncmap_fiber [label="istruncmap_fiber", URL=<Trunc.html#istruncmap_fiber>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_equiv_composeR_ [label="equiv_composeR'", URL=<Equivalences.html#equiv_composeR'>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_equiv_path_ind [label="equiv_path_ind", URL=<Equivalences.html#equiv_path_ind>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_IsTruncMap [label="IsTruncMap", URL=<Trunc.html#IsTruncMap>, fillcolor="#F070D1"] ;
Trunc_istrunc_equiv_istrunc [label="istrunc_equiv_istrunc", URL=<Trunc.html#istrunc_equiv_istrunc>, fillcolor="#F070D1"] ;
Equivalences_equiv_ind_comp [label="equiv_ind_comp", URL=<Equivalences.html#equiv_ind_comp>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_istrunc_isequiv_istrunc [label="istrunc_isequiv_istrunc", URL=<Trunc.html#istrunc_isequiv_istrunc>, fillcolor="#F070D1"] ;
Equivalences_equiv_ind [label="equiv_ind", URL=<Equivalences.html#equiv_ind>, fillcolor="#F070D1"] ;
Trunc_istrunc_hset [label="istrunc_hset", URL=<Trunc.html#istrunc_hset>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_contr_basedhomotopy_ [label="contr_basedhomotopy'", URL=<Equivalences.html#contr_basedhomotopy'>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_istrunc_hprop [label="istrunc_hprop", URL=<Trunc.html#istrunc_hprop>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_contr_basedhomotopy [label="contr_basedhomotopy", URL=<Equivalences.html#contr_basedhomotopy>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_istrunc_contr [label="istrunc_contr", URL=<Trunc.html#istrunc_contr>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_isequiv_commsq_ [label="isequiv_commsq'", URL=<Equivalences.html#isequiv_commsq'>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_istrunc_leq [label="istrunc_leq", URL=<Trunc.html#istrunc_leq>, fillcolor="#F070D1"] ;
Equivalences_isequiv_commsq [label="isequiv_commsq", URL=<Equivalences.html#isequiv_commsq>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_istrunc_succ [label="istrunc_succ", URL=<Trunc.html#istrunc_succ>, fillcolor="#F070D1"] ;
Equivalences_cancelL_equiv [label="cancelL_equiv", URL=<Equivalences.html#cancelL_equiv>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_istrunc_paths_ [label="istrunc_paths'", URL=<Trunc.html#istrunc_paths'>, fillcolor="#F070D1"] ;
Equivalences_cancelL_isequiv [label="cancelL_isequiv", URL=<Equivalences.html#cancelL_isequiv>, fillcolor="#F070D1"] ;
Trunc_contr_istrunc_minus_two [label="contr_istrunc_minus_two", URL=<Trunc.html#contr_istrunc_minus_two>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_cancelR_equiv [label="cancelR_equiv", URL=<Equivalences.html#cancelR_equiv>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_trunc_index_min_leq_right [label="trunc_index_min_leq_right", URL=<Trunc.html#trunc_index_min_leq_right>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_cancelR_isequiv [label="cancelR_isequiv", URL=<Equivalences.html#cancelR_isequiv>, fillcolor="#F070D1"] ;
Trunc_trunc_index_min_leq_left [label="trunc_index_min_leq_left", URL=<Trunc.html#trunc_index_min_leq_left>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_equiv_ap_inv_ [label="equiv_ap_inv'", URL=<Equivalences.html#equiv_ap_inv'>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_trunc_index_min_path [label="trunc_index_min_path", URL=<Trunc.html#trunc_index_min_path>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_equiv_ap_inv [label="equiv_ap_inv", URL=<Equivalences.html#equiv_ap_inv>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_trunc_index_min_swap [label="trunc_index_min_swap", URL=<Trunc.html#trunc_index_min_swap>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_equiv_inverse_homotopy [label="equiv_inverse_homotopy", URL=<Equivalences.html#equiv_inverse_homotopy>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_trunc_index_min_minus_two [label="trunc_index_min_minus_two", URL=<Trunc.html#trunc_index_min_minus_two>, fillcolor="#F070D1"] ;
Equivalences_equiv_inverse_compose [label="equiv_inverse_compose", URL=<Equivalences.html#equiv_inverse_compose>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_trunc_index_min [label="trunc_index_min", URL=<Trunc.html#trunc_index_min>, fillcolor="#F070D1"] ;
Equivalences_symmetric_equiv [label="symmetric_equiv", URL=<Equivalences.html#symmetric_equiv>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_trunc_index_leq_add_ [label="trunc_index_leq_add'", URL=<Trunc.html#trunc_index_leq_add'>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_equiv_inverse [label="equiv_inverse", URL=<Equivalences.html#equiv_inverse>, fillcolor="#F070D1"] ;
Trunc_trunc_index_leq_add [label="trunc_index_leq_add", URL=<Trunc.html#trunc_index_leq_add>, fillcolor="#F070D1"] ;
Equivalences_isequiv_inverse [label="isequiv_inverse", URL=<Equivalences.html#isequiv_inverse>, fillcolor="#F070D1"] ;
Trunc_trunc_index_leq_transitive [label="trunc_index_leq_transitive", URL=<Trunc.html#trunc_index_leq_transitive>, fillcolor="#F070D1"] ;
Equivalences_isequiv_isequiv_postcompose [label="isequiv_isequiv_postcompose", URL=<Equivalences.html#isequiv_isequiv_postcompose>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_trunc_index_leq_refl [label="trunc_index_leq_refl", URL=<Trunc.html#trunc_index_leq_refl>, fillcolor="#F070D1"] ;
Equivalences_isequiv_isequiv_precompose [label="isequiv_isequiv_precompose", URL=<Equivalences.html#isequiv_isequiv_precompose>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_trunc_index_leq_succ_ [label="trunc_index_leq_succ'", URL=<Trunc.html#trunc_index_leq_succ'>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_equiv_postcompose_ [label="equiv_postcompose'", URL=<Equivalences.html#equiv_postcompose'>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_trunc_index_leq_minus_two [label="trunc_index_leq_minus_two", URL=<Trunc.html#trunc_index_leq_minus_two>, fillcolor="#F070D1"] ;
Equivalences_equiv_postcompose [label="equiv_postcompose", URL=<Equivalences.html#equiv_postcompose>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_trunc_index_add_pred_ [label="trunc_index_add_pred'", URL=<Trunc.html#trunc_index_add_pred'>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_isequiv_postcompose [label="isequiv_postcompose", URL=<Equivalences.html#isequiv_postcompose>, fillcolor="#F070D1"] ;
Trunc_trunc_index_add_pred [label="trunc_index_add_pred", URL=<Trunc.html#trunc_index_add_pred>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_equiv_precompose_ [label="equiv_precompose'", URL=<Equivalences.html#equiv_precompose'>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_trunc_index_succ_pred_ [label="trunc_index_succ_pred'", URL=<Trunc.html#trunc_index_succ_pred'>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_equiv_precompose [label="equiv_precompose", URL=<Equivalences.html#equiv_precompose>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_trunc_index_succ_pred [label="trunc_index_succ_pred", URL=<Trunc.html#trunc_index_succ_pred>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_isequiv_precompose [label="isequiv_precompose", URL=<Equivalences.html#isequiv_precompose>, fillcolor="#F070D1"] ;
Trunc_trunc_index_pred [label="trunc_index_pred", URL=<Trunc.html#trunc_index_pred>, fillcolor="#F070D1"] ;
Equivalences_equiv_inj [label="equiv_inj", URL=<Equivalences.html#equiv_inj>, fillcolor="#F070D1"] ;
Trunc_trunc_index_leq_succ [label="trunc_index_leq_succ", URL=<Trunc.html#trunc_index_leq_succ>, fillcolor="#F070D1"] ;
Equivalences_equiv_ap_ [label="equiv_ap'", URL=<Equivalences.html#equiv_ap'>, fillcolor="#F070D1"] ;
Trunc_trunc_index_leq_minus_two_n [label="trunc_index_leq_minus_two_n", URL=<Trunc.html#trunc_index_leq_minus_two_n>, fillcolor="#F070D1"] ;
Equivalences_equiv_ap [label="equiv_ap", URL=<Equivalences.html#equiv_ap>, fillcolor="#F070D1"] ;
Trunc_trunc_index_leq [label="trunc_index_leq", URL=<Trunc.html#trunc_index_leq>, fillcolor="#F070D1"] ;
Equivalences_isequiv_ap [label="isequiv_ap", URL=<Equivalences.html#isequiv_ap>, fillcolor="#F070D1"] ;
Trunc_trunc_index_add_comm [label="trunc_index_add_comm", URL=<Trunc.html#trunc_index_add_comm>, fillcolor="#F070D1"] ;
Equivalences_equiv_pr1 [label="equiv_pr1", URL=<Equivalences.html#equiv_pr1>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_trunc_index_add_succ [label="trunc_index_add_succ", URL=<Trunc.html#trunc_index_add_succ>, fillcolor="#F070D1"] ;
Equivalences_isequiv_pr1 [label="isequiv_pr1", URL=<Equivalences.html#isequiv_pr1>, fillcolor="#F070D1"] ;
Trunc_trunc_index_add_minus_two [label="trunc_index_add_minus_two", URL=<Trunc.html#trunc_index_add_minus_two>, fillcolor="#F070D1"] ;
Equivalences_equiv_contr_contr [label="equiv_contr_contr", URL=<Equivalences.html#equiv_contr_contr>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_trunc_index_add [label="trunc_index_add", URL=<Trunc.html#trunc_index_add>, fillcolor="#F070D1"] ;
Equivalences_isequiv_contr_contr [label="isequiv_contr_contr", URL=<Equivalences.html#isequiv_contr_contr>, fillcolor="#F070D1"] ;
Trunc_trunc_index_to_nat [label="trunc_index_to_nat", URL=<Trunc.html#trunc_index_to_nat>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_contr_equiv_ [label="contr_equiv'", URL=<Equivalences.html#contr_equiv'>, fillcolor="#F070D1"] ;
Trunc_trunc_index_to_num_int [label="trunc_index_to_num_int", URL=<Trunc.html#trunc_index_to_num_int>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_contr_equiv [label="contr_equiv", URL=<Equivalences.html#contr_equiv>, fillcolor="#F070D1"] ;
Trunc_trunc_index_to_int [label="trunc_index_to_int", URL=<Trunc.html#trunc_index_to_int>, fillcolor="#F070D1"] ;
Equivalences_moveL_equiv_V_ [label="moveL_equiv_V'", URL=<Equivalences.html#moveL_equiv_V'>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_trunc_index_to_little_uint [label="trunc_index_to_little_uint", URL=<Trunc.html#trunc_index_to_little_uint>, fillcolor="#F070D1"] ;
Equivalences_moveL_equiv_V [label="moveL_equiv_V", URL=<Equivalences.html#moveL_equiv_V>, fillcolor="#F070D1"] ;
Trunc_num_int_to_trunc_index [label="num_int_to_trunc_index", URL=<Trunc.html#num_int_to_trunc_index>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_moveR_equiv_V_ [label="moveR_equiv_V'", URL=<Equivalences.html#moveR_equiv_V'>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_moveR_equiv_V [label="moveR_equiv_V", URL=<Equivalences.html#moveR_equiv_V>, fillcolor="#F070D1"] ;
Trunc_int_to_trunc_index [label="int_to_trunc_index", URL=<Trunc.html#int_to_trunc_index>, fillcolor="#F070D1"] ;
Trunc_trunc_index_inc__0n [label="trunc_index_inc'_0n", URL=<Trunc.html#trunc_index_inc'_0n>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_moveL_equiv_M_ [label="moveL_equiv_M'", URL=<Equivalences.html#moveL_equiv_M'>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_nat_to_trunc_index [label="nat_to_trunc_index", URL=<Trunc.html#nat_to_trunc_index>, fillcolor="#F070D1"] ;
Equivalences_moveL_equiv_M [label="moveL_equiv_M", URL=<Equivalences.html#moveL_equiv_M>, fillcolor="#F070D1"] ;
Trunc_trunc_index_inc_agree [label="trunc_index_inc_agree", URL=<Trunc.html#trunc_index_inc_agree>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_moveR_equiv_M_ [label="moveR_equiv_M'", URL=<Equivalences.html#moveR_equiv_M'>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_trunc_index_inc__succ [label="trunc_index_inc'_succ", URL=<Trunc.html#trunc_index_inc'_succ>, fillcolor="#F070D1"] ;
Equivalences_moveR_equiv_M [label="moveR_equiv_M", URL=<Equivalences.html#moveR_equiv_M>, fillcolor="#F070D1"] ;
Trunc_trunc_index_inc_ [label="trunc_index_inc'", URL=<Trunc.html#trunc_index_inc'>, fillcolor="#F070D1"] ;
Equivalences_equiv_involution [label="equiv_involution", URL=<Equivalences.html#equiv_involution>, peripheries=3, fillcolor="#F070D1"] ;
Trunc_trunc_index_inc [label="trunc_index_inc", URL=<Trunc.html#trunc_index_inc>, fillcolor="#F070D1"] ;
Equivalences_isequiv_involution [label="isequiv_involution", URL=<Equivalences.html#isequiv_involution>, peripheries=3, fillcolor="#F070D1"] ;
Tactics_issig_isequiv [label="issig_isequiv", URL=<Tactics.html#issig_isequiv>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_equiv_homotopic_inverse [label="equiv_homotopic_inverse", URL=<Equivalences.html#equiv_homotopic_inverse>, peripheries=3, fillcolor="#F070D1"] ;
Tactics_issig_equiv [label="issig_equiv", URL=<Tactics.html#issig_equiv>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_equiv_homotopic [label="equiv_homotopic", URL=<Equivalences.html#equiv_homotopic>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_isequiv_homotopic_ [label="isequiv_homotopic'", URL=<Equivalences.html#isequiv_homotopic'>, peripheries=3, fillcolor="#F070D1"] ;
Tactics_is_global_axiom_propresizing [label="is_global_axiom_propresizing", URL=<Tactics.html#is_global_axiom_propresizing>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_isequiv_homotopic [label="isequiv_homotopic", URL=<Equivalences.html#isequiv_homotopic>, fillcolor="#F070D1"] ;
Tactics_is_global_axiom_funext [label="is_global_axiom_funext", URL=<Tactics.html#is_global_axiom_funext>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_equiv_adjointify [label="equiv_adjointify", URL=<Equivalences.html#equiv_adjointify>, fillcolor="#F070D1"] ;
Tactics_IsGlobalAxiom_sind [label="IsGlobalAxiom_sind", URL=<Tactics.html#IsGlobalAxiom_sind>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_isequiv_adjointify [label="isequiv_adjointify", URL=<Equivalences.html#isequiv_adjointify>, fillcolor="#F070D1"] ;
Tactics_IsGlobalAxiom_rec [label="IsGlobalAxiom_rec", URL=<Tactics.html#IsGlobalAxiom_rec>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_is_adjoint_ [label="is_adjoint'", URL=<Equivalences.html#is_adjoint'>, fillcolor="#F070D1"] ;
Tactics_IsGlobalAxiom_ind [label="IsGlobalAxiom_ind", URL=<Tactics.html#IsGlobalAxiom_ind>, peripheries=3, fillcolor="#7FFFD4"] ;
Equivalences_equiv_transportDD [label="equiv_transportDD", URL=<Equivalences.html#equiv_transportDD>, peripheries=3, fillcolor="#F070D1"] ;
Tactics_IsGlobalAxiom_rect [label="IsGlobalAxiom_rect", URL=<Tactics.html#IsGlobalAxiom_rect>, fillcolor="#F070D1"] ;
Tactics_Build_IsGlobalAxiom [label="Build_IsGlobalAxiom", URL=<Tactics.html#Build_IsGlobalAxiom>, fillcolor="#7FAAFF"] ;
Equivalences_equiv_transportD [label="equiv_transportD", URL=<Equivalences.html#equiv_transportD>, peripheries=3, fillcolor="#F070D1"] ;
Tactics_IsGlobalAxiom [label="IsGlobalAxiom", URL=<Tactics.html#IsGlobalAxiom>, fillcolor="#E2CDFA"] ;
Equivalences_isequiv_transportD [label="isequiv_transportD", URL=<Equivalences.html#isequiv_transportD>, fillcolor="#F070D1"] ;
Tactics_fix_proto [label="fix_proto", URL=<Tactics.html#fix_proto>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_equiv_transport [label="equiv_transport", URL=<Equivalences.html#equiv_transport>, peripheries=3, fillcolor="#F070D1"] ;
Settings_reverse_coercion [label="reverse_coercion", URL=<Settings.html#reverse_coercion>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_isequiv_transport [label="isequiv_transport", URL=<Equivalences.html#isequiv_transport>, fillcolor="#F070D1"] ;
Equivalences_transitive_equiv [label="transitive_equiv", URL=<Equivalences.html#transitive_equiv>, peripheries=3, fillcolor="#F070D1"] ;
Settings_ReverseCoercionTarget [label="ReverseCoercionTarget", URL=<Settings.html#ReverseCoercionTarget>, fillcolor="#F070D1"] ;
Equivalences_equiv_compose_ [label="equiv_compose'", URL=<Equivalences.html#equiv_compose'>, fillcolor="#F070D1"] ;
Settings_ReverseCoercionSource [label="ReverseCoercionSource", URL=<Settings.html#ReverseCoercionSource>, fillcolor="#F070D1"] ;
Predicate_pred_and_unit_r [label="pred_and_unit_r", URL=<Predicate.html#pred_and_unit_r>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_equiv_compose [label="equiv_compose", URL=<Equivalences.html#equiv_compose>, fillcolor="#F070D1"] ;
Predicate_pred_and_unit_l [label="pred_and_unit_l", URL=<Predicate.html#pred_and_unit_l>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_isequiv_compose [label="isequiv_compose", URL=<Equivalences.html#isequiv_compose>, fillcolor="#F070D1"] ;
Equivalences_reflexive_equiv [label="reflexive_equiv", URL=<Equivalences.html#reflexive_equiv>, peripheries=3, fillcolor="#F070D1"] ;
Predicate_pred_or_comm [label="pred_or_comm", URL=<Predicate.html#pred_or_comm>, peripheries=3, fillcolor="#F070D1"] ;
Predicate_pred_or_comm_ [label="pred_or_comm'", URL=<Predicate.html#pred_or_comm'>, fillcolor="#F070D1"] ;
Equivalences_equiv_idmap [label="equiv_idmap", URL=<Equivalences.html#equiv_idmap>, fillcolor="#F070D1"] ;
Predicate_pred_or_is_join [label="pred_or_is_join", URL=<Predicate.html#pred_or_is_join>, peripheries=3, fillcolor="#F070D1"] ;
Equivalences_isequiv_idmap [label="isequiv_idmap", URL=<Equivalences.html#isequiv_idmap>, fillcolor="#F070D1"] ;
Predicate_pred_and_comm [label="pred_and_comm", URL=<Predicate.html#pred_and_comm>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_int_of_int [label="int_of_int", URL=<Numerals.html#Decimal.int_of_int>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_uint_of_uint [label="uint_of_uint", URL=<Numerals.html#Decimal.uint_of_uint>, peripheries=3, fillcolor="#F070D1"] ;
Predicate_pred_and_comm_ [label="pred_and_comm'", URL=<Predicate.html#pred_and_comm'>, fillcolor="#F070D1"] ;
Predicate_pred_and_is_meet [label="pred_and_is_meet", URL=<Predicate.html#pred_and_is_meet>, fillcolor="#F070D1"] ;
Numerals_Decimal_nztail_int [label="nztail_int", URL=<Numerals.html#Decimal.nztail_int>, peripheries=3, fillcolor="#F070D1"] ;
Predicate_pred_and_subset_r [label="pred_and_subset_r", URL=<Predicate.html#pred_and_subset_r>, fillcolor="#F070D1"] ;
Numerals_Decimal_nztail [label="nztail", URL=<Numerals.html#Decimal.nztail>, fillcolor="#F070D1"] ;
Predicate_pred_and_subset_l [label="pred_and_subset_l", URL=<Predicate.html#pred_and_subset_l>, fillcolor="#F070D1"] ;
Numerals_Decimal_app_int [label="app_int", URL=<Numerals.html#Decimal.app_int>, peripheries=3, fillcolor="#F070D1"] ;
Predicate_pred_unit_subset [label="pred_unit_subset", URL=<Predicate.html#pred_unit_subset>, fillcolor="#F070D1"] ;
Numerals_Decimal_app [label="app", URL=<Numerals.html#Decimal.app>, fillcolor="#F070D1"] ;
Numerals_Decimal_rev [label="rev", URL=<Numerals.html#Decimal.rev>, fillcolor="#F070D1"] ;
Predicate_pred_empty_subset [label="pred_empty_subset", URL=<Predicate.html#pred_empty_subset>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_revapp [label="revapp", URL=<Numerals.html#Decimal.revapp>, fillcolor="#F070D1"] ;
Predicate_pred_empty [label="pred_empty", URL=<Predicate.html#pred_empty>, fillcolor="#F070D1"] ;
Predicate_pred_unit [label="pred_unit", URL=<Predicate.html#pred_unit>, fillcolor="#F070D1"] ;
Numerals_Decimal_opp [label="opp", URL=<Numerals.html#Decimal.opp>, peripheries=3, fillcolor="#F070D1"] ;
Predicate_pred_or [label="pred_or", URL=<Predicate.html#pred_or>, fillcolor="#F070D1"] ;
Numerals_Decimal_norm [label="norm", URL=<Numerals.html#Decimal.norm>, fillcolor="#F070D1"] ;
Numerals_Decimal_unorm [label="unorm", URL=<Numerals.html#Decimal.unorm>, fillcolor="#F070D1"] ;
Predicate_pred_and [label="pred_and", URL=<Predicate.html#pred_and>, fillcolor="#F070D1"] ;
Predicate_pred_subset_moveR_equiv [label="pred_subset_moveR_equiv", URL=<Predicate.html#pred_subset_moveR_equiv>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_nzhead [label="nzhead", URL=<Numerals.html#Decimal.nzhead>, fillcolor="#F070D1"] ;
Predicate_pred_subset_moveL_equiv [label="pred_subset_moveL_equiv", URL=<Predicate.html#pred_subset_moveL_equiv>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_nb_digits [label="nb_digits", URL=<Numerals.html#Decimal.nb_digits>, peripheries=3, fillcolor="#F070D1"] ;
Predicate_pred_subset_postcomp [label="pred_subset_postcomp", URL=<Predicate.html#pred_subset_postcomp>, peripheries=3, fillcolor="#F070D1"] ;
Decimal_decimal_sind [label="decimal_sind", URL=<Decimal.html#decimal_sind>, peripheries=3, fillcolor="#F070D1"] ;
Predicate_pred_subset_precomp [label="pred_subset_precomp", URL=<Predicate.html#pred_subset_precomp>, peripheries=3, fillcolor="#F070D1"] ;
Decimal_decimal_rec [label="decimal_rec", URL=<Decimal.html#decimal_rec>, peripheries=3, fillcolor="#F070D1"] ;
Predicate_pred_subset_antisymm [label="pred_subset_antisymm", URL=<Predicate.html#pred_subset_antisymm>, fillcolor="#F070D1"] ;
Decimal_decimal_ind [label="decimal_ind", URL=<Decimal.html#decimal_ind>, peripheries=3, fillcolor="#7FFFD4"] ;
Predicate_pred_subset_pred_eq_ [label="pred_subset_pred_eq'", URL=<Predicate.html#pred_subset_pred_eq'>, peripheries=3, fillcolor="#F070D1"] ;
Decimal_decimal_rect [label="decimal_rect", URL=<Decimal.html#decimal_rect>, fillcolor="#F070D1"] ;
Numerals_Decimal_DecimalExp [label="DecimalExp", URL=<Numerals.html#Decimal.DecimalExp>, fillcolor="#7FAAFF"] ;
Predicate_pred_subset_pred_eq [label="pred_subset_pred_eq", URL=<Predicate.html#pred_subset_pred_eq>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_Decimal [label="Decimal", URL=<Numerals.html#Decimal.Decimal>, fillcolor="#7FAAFF"] ;
Predicate_pred_subset [label="pred_subset", URL=<Predicate.html#pred_subset>, fillcolor="#F070D1"] ;
Numerals_Decimal_decimal [label="decimal", URL=<Numerals.html#Decimal.decimal>, fillcolor="#E2CDFA"] ;
Predicate_pred_eq [label="pred_eq", URL=<Predicate.html#pred_eq>, fillcolor="#F070D1"] ;
Decimal_int_sind [label="int_sind", URL=<Decimal.html#int_sind>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap_transport_pV_idmap [label="ap_transport_pV_idmap", URL=<PathGroupoids.html#ap_transport_pV_idmap>, peripheries=3, fillcolor="#F070D1"] ;
Decimal_int_rec [label="int_rec", URL=<Decimal.html#int_rec>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap_transport_Vp_idmap [label="ap_transport_Vp_idmap", URL=<PathGroupoids.html#ap_transport_Vp_idmap>, peripheries=3, fillcolor="#F070D1"] ;
Decimal_int_ind [label="int_ind", URL=<Decimal.html#int_ind>, peripheries=3, fillcolor="#7FFFD4"] ;
PathGroupoids_ap022 [label="ap022", URL=<PathGroupoids.html#ap022>, peripheries=3, fillcolor="#F070D1"] ;
Decimal_int_rect [label="int_rect", URL=<Decimal.html#int_rect>, fillcolor="#F070D1"] ;
PathGroupoids_apD02_pp [label="apD02_pp", URL=<PathGroupoids.html#apD02_pp>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_Neg [label="Neg", URL=<Numerals.html#Decimal.Neg>, fillcolor="#7FAAFF"] ;
PathGroupoids_apD02_const [label="apD02_const", URL=<PathGroupoids.html#apD02_const>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_Pos [label="Pos", URL=<Numerals.html#Decimal.Pos>, fillcolor="#7FAAFF"] ;
PathGroupoids_apD02 [label="apD02", URL=<PathGroupoids.html#apD02>, fillcolor="#F070D1"] ;
Numerals_Decimal_int [label="int", URL=<Numerals.html#Decimal.int>, fillcolor="#E2CDFA"] ;
PathGroupoids_ap02_p2p [label="ap02_p2p", URL=<PathGroupoids.html#ap02_p2p>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_uint_sind [label="uint_sind", URL=<Numerals.html#Decimal.uint_sind>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap02_pp [label="ap02_pp", URL=<PathGroupoids.html#ap02_pp>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_uint_rec [label="uint_rec", URL=<Numerals.html#Decimal.uint_rec>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap02 [label="ap02", URL=<PathGroupoids.html#ap02>, fillcolor="#F070D1"] ;
Numerals_Decimal_uint_ind [label="uint_ind", URL=<Numerals.html#Decimal.uint_ind>, peripheries=3, fillcolor="#7FFFD4"] ;
PathGroupoids_eckmann_hilton [label="eckmann_hilton", URL=<PathGroupoids.html#eckmann_hilton>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_uint_rect [label="uint_rect", URL=<Numerals.html#Decimal.uint_rect>, fillcolor="#F070D1"] ;
PathGroupoids_triangulator [label="triangulator", URL=<PathGroupoids.html#triangulator>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_D9 [label="D9", URL=<Numerals.html#Decimal.D9>, fillcolor="#7FAAFF"] ;
PathGroupoids_pentagon [label="pentagon", URL=<PathGroupoids.html#pentagon>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_D8 [label="D8", URL=<Numerals.html#Decimal.D8>, fillcolor="#7FAAFF"] ;
PathGroupoids_concat_whisker [label="concat_whisker", URL=<PathGroupoids.html#concat_whisker>, fillcolor="#F070D1"] ;
Numerals_Decimal_D7 [label="D7", URL=<Numerals.html#Decimal.D7>, fillcolor="#7FAAFF"] ;
PathGroupoids_concat_concat2 [label="concat_concat2", URL=<PathGroupoids.html#concat_concat2>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_D6 [label="D6", URL=<Numerals.html#Decimal.D6>, fillcolor="#7FAAFF"] ;
PathGroupoids_concat_p_pp_nat_r [label="concat_p_pp_nat_r", URL=<PathGroupoids.html#concat_p_pp_nat_r>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_D5 [label="D5", URL=<Numerals.html#Decimal.D5>, fillcolor="#7FAAFF"] ;
PathGroupoids_concat_p_pp_nat_m [label="concat_p_pp_nat_m", URL=<PathGroupoids.html#concat_p_pp_nat_m>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_D4 [label="D4", URL=<Numerals.html#Decimal.D4>, fillcolor="#7FAAFF"] ;
PathGroupoids_concat_p_pp_nat_l [label="concat_p_pp_nat_l", URL=<PathGroupoids.html#concat_p_pp_nat_l>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_D3 [label="D3", URL=<Numerals.html#Decimal.D3>, fillcolor="#7FAAFF"] ;
PathGroupoids_whiskerR_VpR [label="whiskerR_VpR", URL=<PathGroupoids.html#whiskerR_VpR>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_D2 [label="D2", URL=<Numerals.html#Decimal.D2>, fillcolor="#7FAAFF"] ;
PathGroupoids_whiskerR_pVR [label="whiskerR_pVR", URL=<PathGroupoids.html#whiskerR_pVR>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_D1 [label="D1", URL=<Numerals.html#Decimal.D1>, fillcolor="#7FAAFF"] ;
PathGroupoids_whiskerL_pVL [label="whiskerL_pVL", URL=<PathGroupoids.html#whiskerL_pVL>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_D0 [label="D0", URL=<Numerals.html#Decimal.D0>, fillcolor="#7FAAFF"] ;
PathGroupoids_whiskerL_VpL [label="whiskerL_VpL", URL=<PathGroupoids.html#whiskerL_VpL>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_Nil [label="Nil", URL=<Numerals.html#Decimal.Nil>, fillcolor="#7FAAFF"] ;
PathGroupoids_whiskerR_pp [label="whiskerR_pp", URL=<PathGroupoids.html#whiskerR_pp>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Decimal_uint [label="uint", URL=<Numerals.html#Decimal.uint>, fillcolor="#E2CDFA"] ;
PathGroupoids_whiskerL_pp [label="whiskerL_pp", URL=<PathGroupoids.html#whiskerL_pp>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_iff_not_prod_ [label="iff_not_prod'", URL=<Decidable.html#iff_not_prod'>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_cancel2R [label="cancel2R", URL=<PathGroupoids.html#cancel2R>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_iff_not_prod [label="iff_not_prod", URL=<Decidable.html#iff_not_prod>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_cancel2L [label="cancel2L", URL=<PathGroupoids.html#cancel2L>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_whiskerL_1p_1 [label="whiskerL_1p_1", URL=<PathGroupoids.html#whiskerL_1p_1>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_not_prod_sum_not [label="not_prod_sum_not", URL=<Decidable.html#not_prod_sum_not>, fillcolor="#F070D1"] ;
PathGroupoids_whiskerR_p1_1 [label="whiskerR_p1_1", URL=<PathGroupoids.html#whiskerR_p1_1>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_ishprop_decpaths [label="ishprop_decpaths", URL=<Decidable.html#ishprop_decpaths>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_whiskerL_1p [label="whiskerL_1p", URL=<PathGroupoids.html#whiskerL_1p>, fillcolor="#F070D1"] ;
Decidable_decidable_paths_refl [label="decidable_paths_refl", URL=<Decidable.html#decidable_paths_refl>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_whiskerL_p1 [label="whiskerL_p1", URL=<PathGroupoids.html#whiskerL_p1>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_hset_decpaths [label="hset_decpaths", URL=<Decidable.html#hset_decpaths>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_whiskerR_1p [label="whiskerR_1p", URL=<PathGroupoids.html#whiskerR_1p>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_pathcoll_hset [label="pathcoll_hset", URL=<Decidable.html#pathcoll_hset>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_whiskerR_p1 [label="whiskerR_p1", URL=<PathGroupoids.html#whiskerR_p1>, fillcolor="#F070D1"] ;
Decidable_collapsible_hprop [label="collapsible_hprop", URL=<Decidable.html#collapsible_hprop>, fillcolor="#F070D1"] ;
Decidable_hset_pathcoll [label="hset_pathcoll", URL=<Decidable.html#hset_pathcoll>, fillcolor="#F070D1"] ;
PathGroupoids_cancelR [label="cancelR", URL=<PathGroupoids.html#cancelR>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_pathcoll_decpaths [label="pathcoll_decpaths", URL=<Decidable.html#pathcoll_decpaths>, fillcolor="#F070D1"] ;
PathGroupoids_cancelL [label="cancelL", URL=<PathGroupoids.html#cancelL>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_whiskerR [label="whiskerR", URL=<PathGroupoids.html#whiskerR>, fillcolor="#F070D1"] ;
Decidable_collapsible_decidable [label="collapsible_decidable", URL=<Decidable.html#collapsible_decidable>, fillcolor="#F070D1"] ;
PathGroupoids_whiskerL [label="whiskerL", URL=<PathGroupoids.html#whiskerL>, fillcolor="#F070D1"] ;
Decidable_path_coll [label="path_coll", URL=<Decidable.html#path_coll>, fillcolor="#F070D1"] ;
PathGroupoids_ap_ap_concat_Vp [label="ap_ap_concat_Vp", URL=<PathGroupoids.html#ap_ap_concat_Vp>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_PathCollapsible [label="PathCollapsible", URL=<Decidable.html#PathCollapsible>, fillcolor="#F070D1"] ;
Decidable_wconst_collapse [label="wconst_collapse", URL=<Decidable.html#wconst_collapse>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap_ap_concat_pV [label="ap_ap_concat_pV", URL=<PathGroupoids.html#ap_ap_concat_pV>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_concat_Vp_inverse2 [label="concat_Vp_inverse2", URL=<PathGroupoids.html#concat_Vp_inverse2>, fillcolor="#F070D1"] ;
Decidable_collapse [label="collapse", URL=<Decidable.html#collapse>, fillcolor="#F070D1"] ;
PathGroupoids_concat_pV_inverse2 [label="concat_pV_inverse2", URL=<PathGroupoids.html#concat_pV_inverse2>, fillcolor="#F070D1"] ;
Decidable_Collapsible_sind [label="Collapsible_sind", URL=<Decidable.html#Collapsible_sind>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap_Vp_concat_Vp [label="ap_Vp_concat_Vp", URL=<PathGroupoids.html#ap_Vp_concat_Vp>, fillcolor="#F070D1"] ;
Decidable_Collapsible_rec [label="Collapsible_rec", URL=<Decidable.html#Collapsible_rec>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap_pV_concat_pV [label="ap_pV_concat_pV", URL=<PathGroupoids.html#ap_pV_concat_pV>, fillcolor="#F070D1"] ;
Decidable_Collapsible_ind [label="Collapsible_ind", URL=<Decidable.html#Collapsible_ind>, peripheries=3, fillcolor="#7FFFD4"] ;
PathGroupoids_ap_pp_concat_1p [label="ap_pp_concat_1p", URL=<PathGroupoids.html#ap_pp_concat_1p>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_Collapsible_rect [label="Collapsible_rect", URL=<Decidable.html#Collapsible_rect>, fillcolor="#F070D1"] ;
Decidable_Build_Collapsible [label="Build_Collapsible", URL=<Decidable.html#Build_Collapsible>, fillcolor="#7FAAFF"] ;
PathGroupoids_ap_pp_concat_p1 [label="ap_pp_concat_p1", URL=<PathGroupoids.html#ap_pp_concat_p1>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_Collapsible [label="Collapsible", URL=<Decidable.html#Collapsible>, fillcolor="#E2CDFA"] ;
PathGroupoids_ap_Vp [label="ap_Vp", URL=<PathGroupoids.html#ap_Vp>, fillcolor="#F070D1"] ;
Decidable_wconst_through_hprop [label="wconst_through_hprop", URL=<Decidable.html#wconst_through_hprop>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap_pV [label="ap_pV", URL=<PathGroupoids.html#ap_pV>, fillcolor="#F070D1"] ;
Decidable_wconst [label="wconst", URL=<Decidable.html#wconst>, fillcolor="#F070D1"] ;
PathGroupoids_inverse2 [label="inverse2", URL=<PathGroupoids.html#inverse2>, fillcolor="#F070D1"] ;
PathGroupoids_concat2_ap_ap [label="concat2_ap_ap", URL=<PathGroupoids.html#concat2_ap_ap>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_WeaklyConstant [label="WeaklyConstant", URL=<Decidable.html#WeaklyConstant>, fillcolor="#F070D1"] ;
Decidable_decidablepaths_equiv_ [label="decidablepaths_equiv'", URL=<Decidable.html#decidablepaths_equiv'>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_concat2 [label="concat2", URL=<PathGroupoids.html#concat2>, fillcolor="#F070D1"] ;
Decidable_decidablepaths_equiv [label="decidablepaths_equiv", URL=<Decidable.html#decidablepaths_equiv>, fillcolor="#F070D1"] ;
PathGroupoids_apD_compose_ [label="apD_compose'", URL=<PathGroupoids.html#apD_compose'>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_decidable_equiv [label="decidable_equiv", URL=<Decidable.html#decidable_equiv>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_apD_compose [label="apD_compose", URL=<PathGroupoids.html#apD_compose>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_decidable_equiv_ [label="decidable_equiv'", URL=<Decidable.html#decidable_equiv'>, fillcolor="#F070D1"] ;
PathGroupoids_apD_const [label="apD_const", URL=<PathGroupoids.html#apD_const>, fillcolor="#F070D1"] ;
PathGroupoids_transport_transport [label="transport_transport", URL=<PathGroupoids.html#transport_transport>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_decidable_iff [label="decidable_iff", URL=<Decidable.html#decidable_iff>, fillcolor="#F070D1"] ;
PathGroupoids_transport_compose_path_ap [label="transport_compose_path_ap", URL=<PathGroupoids.html#transport_compose_path_ap>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_decidable_empty [label="decidable_empty", URL=<Decidable.html#decidable_empty>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transport_idmap_ap [label="transport_idmap_ap", URL=<PathGroupoids.html#transport_idmap_ap>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_decidablepaths_hprop [label="decidablepaths_hprop", URL=<Decidable.html#decidablepaths_hprop>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transport_precompose [label="transport_precompose", URL=<PathGroupoids.html#transport_precompose>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_decidable_contr [label="decidable_contr", URL=<Decidable.html#decidable_contr>, fillcolor="#F070D1"] ;
PathGroupoids_transport_apD_transportD [label="transport_apD_transportD", URL=<PathGroupoids.html#transport_apD_transportD>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_decide_rel [label="decide_rel", URL=<Decidable.html#decide_rel>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transportD_compose [label="transportD_compose", URL=<PathGroupoids.html#transportD_compose>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_stable_equiv [label="stable_equiv", URL=<Decidable.html#stable_equiv>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transport_compose [label="transport_compose", URL=<PathGroupoids.html#transport_compose>, fillcolor="#F070D1"] ;
Decidable_stable_equiv_ [label="stable_equiv'", URL=<Decidable.html#stable_equiv'>, fillcolor="#F070D1"] ;
PathGroupoids_transportDD_const [label="transportDD_const", URL=<PathGroupoids.html#transportDD_const>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_stable_iff [label="stable_iff", URL=<Decidable.html#stable_iff>, fillcolor="#F070D1"] ;
PathGroupoids_transportD_const_base [label="transportD_const_base", URL=<PathGroupoids.html#transportD_const_base>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_iff_stable [label="iff_stable", URL=<Decidable.html#iff_stable>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transportD_const_fiber [label="transportD_const_fiber", URL=<PathGroupoids.html#transportD_const_fiber>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_stable_negation [label="stable_negation", URL=<Decidable.html#stable_negation>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transport2_const [label="transport2_const", URL=<PathGroupoids.html#transport2_const>, fillcolor="#F070D1"] ;
Decidable_stable_decidable [label="stable_decidable", URL=<Decidable.html#stable_decidable>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transport_const [label="transport_const", URL=<PathGroupoids.html#transport_const>, fillcolor="#F070D1"] ;
Decidable_ishprop_stable_hprop [label="ishprop_stable_hprop", URL=<Decidable.html#ishprop_stable_hprop>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_not_not_unit [label="not_not_unit", URL=<Decidable.html#not_not_unit>, fillcolor="#F070D1"] ;
PathGroupoids_apD_V [label="apD_V", URL=<PathGroupoids.html#apD_V>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_stable [label="stable", URL=<Decidable.html#stable>, fillcolor="#F070D1"] ;
PathGroupoids_apD_pp [label="apD_pp", URL=<PathGroupoids.html#apD_pp>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transport_pV_ap [label="transport_pV_ap", URL=<PathGroupoids.html#transport_pV_ap>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_Stable [label="Stable", URL=<Decidable.html#Stable>, fillcolor="#F070D1"] ;
Decidable_dec_paths [label="dec_paths", URL=<Decidable.html#dec_paths>, fillcolor="#F070D1"] ;
PathGroupoids_ap_transport_pV [label="ap_transport_pV", URL=<PathGroupoids.html#ap_transport_pV>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap_transportD2 [label="ap_transportD2", URL=<PathGroupoids.html#ap_transportD2>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_DecidablePaths [label="DecidablePaths", URL=<Decidable.html#DecidablePaths>, fillcolor="#F070D1"] ;
Decidable_decidable_false [label="decidable_false", URL=<Decidable.html#decidable_false>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap_transportD [label="ap_transportD", URL=<PathGroupoids.html#ap_transportD>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_decidable_true [label="decidable_true", URL=<Decidable.html#decidable_true>, fillcolor="#F070D1"] ;
PathGroupoids_ap_transport [label="ap_transport", URL=<PathGroupoids.html#ap_transport>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transport_pp_1 [label="transport_pp_1", URL=<PathGroupoids.html#transport_pp_1>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_dec [label="dec", URL=<Decidable.html#dec>, fillcolor="#F070D1"] ;
PathGroupoids_concat_AT [label="concat_AT", URL=<PathGroupoids.html#concat_AT>, peripheries=3, fillcolor="#F070D1"] ;
Decidable_Decidable [label="Decidable", URL=<Decidable.html#Decidable>, fillcolor="#F070D1"] ;
PathGroupoids_transport2_V [label="transport2_V", URL=<PathGroupoids.html#transport2_V>, peripheries=3, fillcolor="#F070D1"] ;
Contractible_Contr_ind [label="Contr_ind", URL=<Contractible.html#Contr_ind>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transport2_p2p [label="transport2_p2p", URL=<PathGroupoids.html#transport2_p2p>, fillcolor="#F070D1"] ;
Contractible_contr_change_center [label="contr_change_center", URL=<Contractible.html#contr_change_center>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transport2_is_ap10 [label="transport2_is_ap10", URL=<PathGroupoids.html#transport2_is_ap10>, peripheries=3, fillcolor="#F070D1"] ;
Contractible_contr_retract [label="contr_retract", URL=<Contractible.html#contr_retract>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transport2 [label="transport2", URL=<PathGroupoids.html#transport2>, fillcolor="#F070D1"] ;
Contractible_contr_dom_equiv [label="contr_dom_equiv", URL=<Contractible.html#contr_dom_equiv>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap_transport011 [label="ap_transport011", URL=<PathGroupoids.html#ap_transport011>, peripheries=3, fillcolor="#F070D1"] ;
Contractible_ap_pr1_path_basedpaths_ [label="ap_pr1_path_basedpaths'", URL=<Contractible.html#ap_pr1_path_basedpaths'>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transport011_compose [label="transport011_compose", URL=<PathGroupoids.html#transport011_compose>, peripheries=3, fillcolor="#F070D1"] ;
Contractible_ap_pr1_path_basedpaths [label="ap_pr1_path_basedpaths", URL=<Contractible.html#ap_pr1_path_basedpaths>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transport011_pp [label="transport011_pp", URL=<PathGroupoids.html#transport011_pp>, peripheries=3, fillcolor="#F070D1"] ;
Contractible_ap_pr1_path_contr_basedpaths_ [label="ap_pr1_path_contr_basedpaths'", URL=<Contractible.html#ap_pr1_path_contr_basedpaths'>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transport011 [label="transport011", URL=<PathGroupoids.html#transport011>, fillcolor="#F070D1"] ;
Contractible_ap_pr1_path_contr_basedpaths [label="ap_pr1_path_contr_basedpaths", URL=<Contractible.html#ap_pr1_path_contr_basedpaths>, peripheries=3, fillcolor="#F070D1"] ;
Contractible_contr_basedpaths_ [label="contr_basedpaths'", URL=<Contractible.html#contr_basedpaths'>, fillcolor="#F070D1"] ;
PathGroupoids_apD011 [label="apD011", URL=<PathGroupoids.html#apD011>, peripheries=3, fillcolor="#F070D1"] ;
Contractible_path_basedpaths_ [label="path_basedpaths'", URL=<Contractible.html#path_basedpaths'>, fillcolor="#F070D1"] ;
PathGroupoids_ap01D1 [label="ap01D1", URL=<PathGroupoids.html#ap01D1>, peripheries=3, fillcolor="#F070D1"] ;
Contractible_contr_basedpaths_etashort [label="contr_basedpaths_etashort", URL=<Contractible.html#contr_basedpaths_etashort>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap011D [label="ap011D", URL=<PathGroupoids.html#ap011D>, peripheries=3, fillcolor="#F070D1"] ;
Contractible_contr_basedpaths [label="contr_basedpaths", URL=<Contractible.html#contr_basedpaths>, fillcolor="#F070D1"] ;
PathGroupoids_ap011_is_ap [label="ap011_is_ap", URL=<PathGroupoids.html#ap011_is_ap>, peripheries=3, fillcolor="#F070D1"] ;
Contractible_path_basedpaths [label="path_basedpaths", URL=<Contractible.html#path_basedpaths>, fillcolor="#F070D1"] ;
PathGroupoids_ap011_compose_ [label="ap011_compose'", URL=<PathGroupoids.html#ap011_compose'>, peripheries=3, fillcolor="#F070D1"] ;
Contractible_path2_contr [label="path2_contr", URL=<Contractible.html#path2_contr>, fillcolor="#F070D1"] ;
PathGroupoids_ap011_compose [label="ap011_compose", URL=<PathGroupoids.html#ap011_compose>, peripheries=3, fillcolor="#F070D1"] ;
Contractible_contr_paths_contr [label="contr_paths_contr", URL=<Contractible.html#contr_paths_contr>, fillcolor="#F070D1"] ;
PathGroupoids_ap011_pp [label="ap011_pp", URL=<PathGroupoids.html#ap011_pp>, peripheries=3, fillcolor="#F070D1"] ;
Contractible_path_contr [label="path_contr", URL=<Contractible.html#path_contr>, fillcolor="#F070D1"] ;
PathGroupoids_ap011_V [label="ap011_V", URL=<PathGroupoids.html#ap011_V>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap011 [label="ap011", URL=<PathGroupoids.html#ap011>, fillcolor="#F070D1"] ;
Classes_antisymmetry [label="antisymmetry", URL=<Classes.html#antisymmetry>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transportDD [label="transportDD", URL=<PathGroupoids.html#transportDD>, fillcolor="#F070D1"] ;
Classes_AntiSymmetric [label="AntiSymmetric", URL=<Classes.html#AntiSymmetric>, fillcolor="#F070D1"] ;
PathGroupoids_transportD2 [label="transportD2", URL=<PathGroupoids.html#transportD2>, fillcolor="#F070D1"] ;
Classes_isinj_cancelL [label="isinj_cancelL", URL=<Classes.html#isinj_cancelL>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transportD [label="transportD", URL=<PathGroupoids.html#transportD>, fillcolor="#F070D1"] ;
Classes_isinj_compose [label="isinj_compose", URL=<Classes.html#isinj_compose>, peripheries=3, fillcolor="#F070D1"] ;
Classes_isinj_idmap [label="isinj_idmap", URL=<Classes.html#isinj_idmap>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap11_is_ap10_ap01 [label="ap11_is_ap10_ap01", URL=<PathGroupoids.html#ap11_is_ap10_ap01>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_paths_ind_r_transport [label="paths_ind_r_transport", URL=<PathGroupoids.html#paths_ind_r_transport>, peripheries=3, fillcolor="#F070D1"] ;
Classes_neq_isinj [label="neq_isinj", URL=<Classes.html#neq_isinj>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_paths_ind_transport [label="paths_ind_transport", URL=<PathGroupoids.html#paths_ind_transport>, peripheries=3, fillcolor="#F070D1"] ;
Classes_injective [label="injective", URL=<Classes.html#injective>, fillcolor="#F070D1"] ;
PathGroupoids_paths_rect_transport [label="paths_rect_transport", URL=<PathGroupoids.html#paths_rect_transport>, peripheries=3, fillcolor="#F070D1"] ;
Classes_IsInjective [label="IsInjective", URL=<Classes.html#IsInjective>, fillcolor="#F070D1"] ;
Classes_pointwise_moveL_equiv [label="pointwise_moveL_equiv", URL=<Classes.html#pointwise_moveL_equiv>, fillcolor="#F070D1"] ;
PathGroupoids_moveL_transport_V_1 [label="moveL_transport_V_1", URL=<PathGroupoids.html#moveL_transport_V_1>, peripheries=3, fillcolor="#F070D1"] ;
Classes_pointwise_moveR_equiv [label="pointwise_moveR_equiv", URL=<Classes.html#pointwise_moveR_equiv>, fillcolor="#F070D1"] ;
PathGroupoids_ap_transport_transport_pV [label="ap_transport_transport_pV", URL=<PathGroupoids.html#ap_transport_transport_pV>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transport_VpV [label="transport_VpV", URL=<PathGroupoids.html#transport_VpV>, peripheries=3, fillcolor="#F070D1"] ;
Classes_pointwise_precomp [label="pointwise_precomp", URL=<Classes.html#pointwise_precomp>, fillcolor="#F070D1"] ;
PathGroupoids_transport_pVp [label="transport_pVp", URL=<PathGroupoids.html#transport_pVp>, fillcolor="#F070D1"] ;
Classes_symmetric_pointwise [label="symmetric_pointwise", URL=<Classes.html#symmetric_pointwise>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transport_p_pp [label="transport_p_pp", URL=<PathGroupoids.html#transport_p_pp>, peripheries=3, fillcolor="#F070D1"] ;
Classes_transitive_pointwise [label="transitive_pointwise", URL=<Classes.html#transitive_pointwise>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_transport_Vp [label="transport_Vp", URL=<PathGroupoids.html#transport_Vp>, fillcolor="#F070D1"] ;
Classes_reflexive_pointwise [label="reflexive_pointwise", URL=<Classes.html#reflexive_pointwise>, fillcolor="#F070D1"] ;
PathGroupoids_transport_pV [label="transport_pV", URL=<PathGroupoids.html#transport_pV>, fillcolor="#F070D1"] ;
Classes_relation_pointwise [label="relation_pointwise", URL=<Classes.html#relation_pointwise>, fillcolor="#F070D1"] ;
PathGroupoids_transport_pp [label="transport_pp", URL=<PathGroupoids.html#transport_pp>, fillcolor="#F070D1"] ;
PathGroupoids_transport_1 [label="transport_1", URL=<PathGroupoids.html#transport_1>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap100 [label="ap100", URL=<PathGroupoids.html#ap100>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap10_ap_postcompose [label="ap10_ap_postcompose", URL=<PathGroupoids.html#ap10_ap_postcompose>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_apD10_ap_postcompose [label="apD10_ap_postcompose", URL=<PathGroupoids.html#apD10_ap_postcompose>, fillcolor="#F070D1"] ;
PathGroupoids_ap10_ap_precompose [label="ap10_ap_precompose", URL=<PathGroupoids.html#ap10_ap_precompose>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_apD10_ap_precompose [label="apD10_ap_precompose", URL=<PathGroupoids.html#apD10_ap_precompose>, fillcolor="#F070D1"] ;
PathGroupoids_ap10_V [label="ap10_V", URL=<PathGroupoids.html#ap10_V>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap10_pp [label="ap10_pp", URL=<PathGroupoids.html#ap10_pp>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap10_1 [label="ap10_1", URL=<PathGroupoids.html#ap10_1>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_apD10_V [label="apD10_V", URL=<PathGroupoids.html#apD10_V>, fillcolor="#F070D1"] ;
PathGroupoids_apD10_pp [label="apD10_pp", URL=<PathGroupoids.html#apD10_pp>, fillcolor="#F070D1"] ;
PathGroupoids_apD10_1 [label="apD10_1", URL=<PathGroupoids.html#apD10_1>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_concat_p1_1 [label="concat_p1_1", URL=<PathGroupoids.html#concat_p1_1>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_concat_1p_1 [label="concat_1p_1", URL=<PathGroupoids.html#concat_1p_1>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_concat_p_A1p [label="concat_p_A1p", URL=<PathGroupoids.html#concat_p_A1p>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_concat_pp_A1 [label="concat_pp_A1", URL=<PathGroupoids.html#concat_pp_A1>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_concat_A1_pp [label="concat_A1_pp", URL=<PathGroupoids.html#concat_A1_pp>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_concat_pA1_p [label="concat_pA1_p", URL=<PathGroupoids.html#concat_pA1_p>, fillcolor="#F070D1"] ;
PathGroupoids_concat_pp_A1p [label="concat_pp_A1p", URL=<PathGroupoids.html#concat_pp_A1p>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_concat_pA1_pp [label="concat_pA1_pp", URL=<PathGroupoids.html#concat_pA1_pp>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_concat_A_pp [label="concat_A_pp", URL=<PathGroupoids.html#concat_A_pp>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_concat_pA_p [label="concat_pA_p", URL=<PathGroupoids.html#concat_pA_p>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_concat_pA_pp [label="concat_pA_pp", URL=<PathGroupoids.html#concat_pA_pp>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_apD_homotopic [label="apD_homotopic", URL=<PathGroupoids.html#apD_homotopic>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_apD_natural [label="apD_natural", URL=<PathGroupoids.html#apD_natural>, fillcolor="#F070D1"] ;
PathGroupoids_concat_pA1 [label="concat_pA1", URL=<PathGroupoids.html#concat_pA1>, fillcolor="#F070D1"] ;
PathGroupoids_ap_homotopic_id [label="ap_homotopic_id", URL=<PathGroupoids.html#ap_homotopic_id>, fillcolor="#F070D1"] ;
PathGroupoids_concat_A1p [label="concat_A1p", URL=<PathGroupoids.html#concat_A1p>, fillcolor="#F070D1"] ;
PathGroupoids_ap_homotopic [label="ap_homotopic", URL=<PathGroupoids.html#ap_homotopic>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_concat_Ap [label="concat_Ap", URL=<PathGroupoids.html#concat_Ap>, fillcolor="#F070D1"] ;
PathGroupoids_ap_const [label="ap_const", URL=<PathGroupoids.html#ap_const>, fillcolor="#F070D1"] ;
PathGroupoids_ap_compose_ [label="ap_compose'", URL=<PathGroupoids.html#ap_compose'>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap_compose [label="ap_compose", URL=<PathGroupoids.html#ap_compose>, fillcolor="#F070D1"] ;
PathGroupoids_ap_idmap [label="ap_idmap", URL=<PathGroupoids.html#ap_idmap>, fillcolor="#F070D1"] ;
PathGroupoids_ap_V [label="ap_V", URL=<PathGroupoids.html#ap_V>, fillcolor="#F070D1"] ;
PathGroupoids_inverse_ap [label="inverse_ap", URL=<PathGroupoids.html#inverse_ap>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap_pp_p [label="ap_pp_p", URL=<PathGroupoids.html#ap_pp_p>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap_p_pp [label="ap_p_pp", URL=<PathGroupoids.html#ap_p_pp>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap_pp [label="ap_pp", URL=<PathGroupoids.html#ap_pp>, fillcolor="#F070D1"] ;
PathGroupoids_apD_1 [label="apD_1", URL=<PathGroupoids.html#apD_1>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_ap_1 [label="ap_1", URL=<PathGroupoids.html#ap_1>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_moveL_transport_p_V [label="moveL_transport_p_V", URL=<PathGroupoids.html#moveL_transport_p_V>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_moveL_transport_V_V [label="moveL_transport_V_V", URL=<PathGroupoids.html#moveL_transport_V_V>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_moveR_transport_V_V [label="moveR_transport_V_V", URL=<PathGroupoids.html#moveR_transport_V_V>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_moveR_transport_p_V [label="moveR_transport_p_V", URL=<PathGroupoids.html#moveR_transport_p_V>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_moveL_transport_p [label="moveL_transport_p", URL=<PathGroupoids.html#moveL_transport_p>, fillcolor="#F070D1"] ;
PathGroupoids_moveL_transport_V [label="moveL_transport_V", URL=<PathGroupoids.html#moveL_transport_V>, fillcolor="#F070D1"] ;
PathGroupoids_moveR_transport_V [label="moveR_transport_V", URL=<PathGroupoids.html#moveR_transport_V>, fillcolor="#F070D1"] ;
PathGroupoids_moveR_transport_p [label="moveR_transport_p", URL=<PathGroupoids.html#moveR_transport_p>, fillcolor="#F070D1"] ;
PathGroupoids_moveR_V1 [label="moveR_V1", URL=<PathGroupoids.html#moveR_V1>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_moveR_1V [label="moveR_1V", URL=<PathGroupoids.html#moveR_1V>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_moveR_1M [label="moveR_1M", URL=<PathGroupoids.html#moveR_1M>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_moveR_M1 [label="moveR_M1", URL=<PathGroupoids.html#moveR_M1>, fillcolor="#F070D1"] ;
PathGroupoids_moveL_V1 [label="moveL_V1", URL=<PathGroupoids.html#moveL_V1>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_moveL_1V [label="moveL_1V", URL=<PathGroupoids.html#moveL_1V>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_moveL_M1 [label="moveL_M1", URL=<PathGroupoids.html#moveL_M1>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_moveL_1M [label="moveL_1M", URL=<PathGroupoids.html#moveL_1M>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_moveL_pV [label="moveL_pV", URL=<PathGroupoids.html#moveL_pV>, fillcolor="#F070D1"] ;
PathGroupoids_moveL_Vp [label="moveL_Vp", URL=<PathGroupoids.html#moveL_Vp>, fillcolor="#F070D1"] ;
PathGroupoids_moveL_pM [label="moveL_pM", URL=<PathGroupoids.html#moveL_pM>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_moveL_Mp [label="moveL_Mp", URL=<PathGroupoids.html#moveL_Mp>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_moveR_pV [label="moveR_pV", URL=<PathGroupoids.html#moveR_pV>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_moveR_Vp [label="moveR_Vp", URL=<PathGroupoids.html#moveR_Vp>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_moveR_pM [label="moveR_pM", URL=<PathGroupoids.html#moveR_pM>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_moveR_Mp [label="moveR_Mp", URL=<PathGroupoids.html#moveR_Mp>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_inv_V [label="inv_V", URL=<PathGroupoids.html#inv_V>, fillcolor="#F070D1"] ;
PathGroupoids_inv_VV [label="inv_VV", URL=<PathGroupoids.html#inv_VV>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_inv_pV [label="inv_pV", URL=<PathGroupoids.html#inv_pV>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_inv_Vp [label="inv_Vp", URL=<PathGroupoids.html#inv_Vp>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_inv_pp [label="inv_pp", URL=<PathGroupoids.html#inv_pp>, peripheries=3, fillcolor="#F070D1"] ;
PathGroupoids_concat_pV_p [label="concat_pV_p", URL=<PathGroupoids.html#concat_pV_p>, fillcolor="#F070D1"] ;
PathGroupoids_concat_pp_V [label="concat_pp_V", URL=<PathGroupoids.html#concat_pp_V>, fillcolor="#F070D1"] ;
PathGroupoids_concat_p_Vp [label="concat_p_Vp", URL=<PathGroupoids.html#concat_p_Vp>, fillcolor="#F070D1"] ;
PathGroupoids_concat_V_pp [label="concat_V_pp", URL=<PathGroupoids.html#concat_V_pp>, fillcolor="#F070D1"] ;
PathGroupoids_concat_Vp [label="concat_Vp", URL=<PathGroupoids.html#concat_Vp>, fillcolor="#F070D1"] ;
PathGroupoids_concat_pV [label="concat_pV", URL=<PathGroupoids.html#concat_pV>, fillcolor="#F070D1"] ;
PathGroupoids_concat_pp_p [label="concat_pp_p", URL=<PathGroupoids.html#concat_pp_p>, fillcolor="#F070D1"] ;
PathGroupoids_concat_p_pp [label="concat_p_pp", URL=<PathGroupoids.html#concat_p_pp>, fillcolor="#F070D1"] ;
PathGroupoids_concat_1p_p1 [label="concat_1p_p1", URL=<PathGroupoids.html#concat_1p_p1>, fillcolor="#F070D1"] ;
PathGroupoids_concat_p1_1p [label="concat_p1_1p", URL=<PathGroupoids.html#concat_p1_1p>, fillcolor="#F070D1"] ;
PathGroupoids_concat_1p [label="concat_1p", URL=<PathGroupoids.html#concat_1p>, fillcolor="#F070D1"] ;
PathGroupoids_concat_p1 [label="concat_p1", URL=<PathGroupoids.html#concat_p1>, fillcolor="#F070D1"] ;
PathGroupoids_concat_lr [label="concat_lr", URL=<PathGroupoids.html#concat_lr>, fillcolor="#F070D1"] ;
PathGroupoids_concat_r [label="concat_r", URL=<PathGroupoids.html#concat_r>, fillcolor="#F070D1"] ;
PathGroupoids_concat_l [label="concat_l", URL=<PathGroupoids.html#concat_l>, fillcolor="#F070D1"] ;
Overture_issmall_hprop [label="issmall_hprop", URL=<Overture.html#issmall_hprop>, peripheries=3, fillcolor="#FACDEF"] ;
Overture_PropResizing [label="PropResizing", URL=<Overture.html#PropResizing>, fillcolor="#FACDEF"] ;
Overture_equiv_smalltype [label="equiv_smalltype", URL=<Overture.html#equiv_smalltype>, peripheries=3, fillcolor="#F070D1"] ;
Overture_smalltype [label="smalltype", URL=<Overture.html#smalltype>, peripheries=3, fillcolor="#F070D1"] ;
Overture_Build_IsSmall [label="Build_IsSmall", URL=<Overture.html#Build_IsSmall>, peripheries=3, fillcolor="#7FAAFF"] ;
Overture_IsSmall [label="IsSmall", URL=<Overture.html#IsSmall>, fillcolor="#E2CDFA"] ;
Overture_hfiber [label="hfiber", URL=<Overture.html#hfiber>, fillcolor="#F070D1"] ;
Overture_ispointed_type [label="ispointed_type", URL=<Overture.html#ispointed_type>, peripheries=3, fillcolor="#F070D1"] ;
Overture_pointed_type [label="pointed_type", URL=<Overture.html#pointed_type>, peripheries=3, fillcolor="#F070D1"] ;
Overture_Build_pType [label="Build_pType", URL=<Overture.html#Build_pType>, peripheries=3, fillcolor="#7FAAFF"] ;
Overture_pType [label="pType", URL=<Overture.html#pType>, fillcolor="#E2CDFA"] ;
Overture_point [label="point", URL=<Overture.html#point>, peripheries=3, fillcolor="#F070D1"] ;
Overture_IsPointed [label="IsPointed", URL=<Overture.html#IsPointed>, fillcolor="#F070D1"] ;
Overture_Unit_rect [label="Unit_rect", URL=<Overture.html#Unit_rect>, peripheries=3, fillcolor="#F070D1"] ;
Overture_Unit_rec [label="Unit_rec", URL=<Overture.html#Unit_rec>, peripheries=3, fillcolor="#F070D1"] ;
Overture_Unit_ind [label="Unit_ind", URL=<Overture.html#Unit_ind>, fillcolor="#F070D1"] ;
Overture_tt [label="tt", URL=<Overture.html#tt>, fillcolor="#7FAAFF"] ;
Overture_Unit [label="Unit", URL=<Overture.html#Unit>, fillcolor="#E2CDFA"] ;
Overture_asymmetry [label="asymmetry", URL=<Overture.html#asymmetry>, peripheries=3, fillcolor="#F070D1"] ;
Overture_Asymmetric [label="Asymmetric", URL=<Overture.html#Asymmetric>, fillcolor="#F070D1"] ;
Overture_irreflexivity [label="irreflexivity", URL=<Overture.html#irreflexivity>, peripheries=3, fillcolor="#F070D1"] ;
Overture_Irreflexive [label="Irreflexive", URL=<Overture.html#Irreflexive>, fillcolor="#F070D1"] ;
Overture_complement [label="complement", URL=<Overture.html#complement>, fillcolor="#F070D1"] ;
Overture_symmetric_neq [label="symmetric_neq", URL=<Overture.html#symmetric_neq>, peripheries=3, fillcolor="#F070D1"] ;
Overture_not [label="not", URL=<Overture.html#not>, fillcolor="#F070D1"] ;
Overture_Empty_rect [label="Empty_rect", URL=<Overture.html#Empty_rect>, fillcolor="#F070D1"] ;
Overture_Empty_rec [label="Empty_rec", URL=<Overture.html#Empty_rec>, fillcolor="#F070D1"] ;
Overture_Empty_ind [label="Empty_ind", URL=<Overture.html#Empty_ind>, fillcolor="#F070D1"] ;
Overture_Empty [label="Empty", URL=<Overture.html#Empty>, fillcolor="#E2CDFA"] ;
Overture_nat_rec [label="nat_rec", URL=<Overture.html#nat_rec>, fillcolor="#F070D1"] ;
Overture_nat_rect [label="nat_rect", URL=<Overture.html#nat_rect>, peripheries=3, fillcolor="#F070D1"] ;
Overture_nat_ind [label="nat_ind", URL=<Overture.html#nat_ind>, peripheries=3, fillcolor="#F070D1"] ;
Overture_S [label="S", URL=<Overture.html#S>, fillcolor="#7FAAFF"] ;
Overture_O [label="O", URL=<Overture.html#O>, fillcolor="#7FAAFF"] ;
Overture_nat [label="nat", URL=<Overture.html#nat>, fillcolor="#E2CDFA"] ;
Overture_istrunc_fun [label="istrunc_fun", URL=<Overture.html#istrunc_fun>, fillcolor="#F070D1"] ;
Overture_istrunc_codomain_fam [label="istrunc_codomain_fam", URL=<Overture.html#istrunc_codomain_fam>, fillcolor="#F070D1"] ;
Overture_contr [label="contr", URL=<Overture.html#contr>, fillcolor="#F070D1"] ;
Overture_center [label="center", URL=<Overture.html#center>, fillcolor="#F070D1"] ;
Overture_istrunc_paths [label="istrunc_paths", URL=<Overture.html#istrunc_paths>, fillcolor="#F070D1"] ;
Overture_equiv_istrunc_unfold [label="equiv_istrunc_unfold", URL=<Overture.html#equiv_istrunc_unfold>, fillcolor="#F070D1"] ;
Overture_isequiv_istrunc_unfold [label="isequiv_istrunc_unfold", URL=<Overture.html#isequiv_istrunc_unfold>, fillcolor="#F070D1"] ;
Overture_istrunc_unfold [label="istrunc_unfold", URL=<Overture.html#istrunc_unfold>, fillcolor="#F070D1"] ;
Overture_IsTrunc_unfolded [label="IsTrunc_unfolded", URL=<Overture.html#IsTrunc_unfolded>, fillcolor="#F070D1"] ;
Overture_IsTrunc_internal_rect [label="IsTrunc_internal_rect", URL=<Overture.html#IsTrunc_internal_rect>, peripheries=3, fillcolor="#F070D1"] ;
Overture_IsTrunc_internal_rec [label="IsTrunc_internal_rec", URL=<Overture.html#IsTrunc_internal_rec>, peripheries=3, fillcolor="#F070D1"] ;
Overture_IsTrunc_internal_ind [label="IsTrunc_internal_ind", URL=<Overture.html#IsTrunc_internal_ind>, fillcolor="#F070D1"] ;
Overture_istrunc_S [label="istrunc_S", URL=<Overture.html#istrunc_S>, fillcolor="#7FAAFF"] ;
Overture_Build_Contr [label="Build_Contr", URL=<Overture.html#Build_Contr>, fillcolor="#7FAAFF"] ;
Overture_IsTrunc_internal [label="IsTrunc_internal", URL=<Overture.html#IsTrunc_internal>, fillcolor="#E2CDFA"] ;
Overture_trunc_index_rect [label="trunc_index_rect", URL=<Overture.html#trunc_index_rect>, peripheries=3, fillcolor="#F070D1"] ;
Overture_trunc_index_rec [label="trunc_index_rec", URL=<Overture.html#trunc_index_rec>, peripheries=3, fillcolor="#F070D1"] ;
Overture_trunc_index_ind [label="trunc_index_ind", URL=<Overture.html#trunc_index_ind>, fillcolor="#F070D1"] ;
Overture_trunc_S [label="trunc_S", URL=<Overture.html#trunc_S>, fillcolor="#7FAAFF"] ;
Overture_minus_two [label="minus_two", URL=<Overture.html#minus_two>, fillcolor="#7FAAFF"] ;
Overture_trunc_index [label="trunc_index", URL=<Overture.html#trunc_index>, fillcolor="#E2CDFA"] ;
Overture_path_forall [label="path_forall", URL=<Overture.html#path_forall>, fillcolor="#F070D1"] ;
Overture_isequiv_apD10 [label="isequiv_apD10", URL=<Overture.html#isequiv_apD10>, fillcolor="#FACDEF"] ;
Overture_Funext [label="Funext", URL=<Overture.html#Funext>, fillcolor="#FACDEF"] ;
Overture_ap10_equiv [label="ap10_equiv", URL=<Overture.html#ap10_equiv>, peripheries=3, fillcolor="#F070D1"] ;
Overture_equiv_isequiv [label="equiv_isequiv", URL=<Overture.html#equiv_isequiv>, peripheries=3, fillcolor="#F070D1"] ;
Overture_equiv_fun [label="equiv_fun", URL=<Overture.html#equiv_fun>, fillcolor="#F070D1"] ;
Overture_Build_Equiv [label="Build_Equiv", URL=<Overture.html#Build_Equiv>, fillcolor="#7FAAFF"] ;
Overture_Equiv [label="Equiv", URL=<Overture.html#Equiv>, fillcolor="#E2CDFA"] ;
Overture_eisadj [label="eisadj", URL=<Overture.html#eisadj>, fillcolor="#F070D1"] ;
Overture_eissect [label="eissect", URL=<Overture.html#eissect>, fillcolor="#F070D1"] ;
Overture_eisretr [label="eisretr", URL=<Overture.html#eisretr>, fillcolor="#F070D1"] ;
Overture_equiv_inv [label="equiv_inv", URL=<Overture.html#equiv_inv>, fillcolor="#F070D1"] ;
Overture_Build_IsEquiv [label="Build_IsEquiv", URL=<Overture.html#Build_IsEquiv>, fillcolor="#7FAAFF"] ;
Overture_IsEquiv [label="IsEquiv", URL=<Overture.html#IsEquiv>, fillcolor="#E2CDFA"] ;
Overture_ap11 [label="ap11", URL=<Overture.html#ap11>, fillcolor="#F070D1"] ;
Overture_ap10 [label="ap10", URL=<Overture.html#ap10>, fillcolor="#F070D1"] ;
Overture_apD10 [label="apD10", URL=<Overture.html#apD10>, fillcolor="#F070D1"] ;
Overture_symmetric_pointwise_paths [label="symmetric_pointwise_paths", URL=<Overture.html#symmetric_pointwise_paths>, peripheries=3, fillcolor="#F070D1"] ;
Overture_transitive_pointwise_paths [label="transitive_pointwise_paths", URL=<Overture.html#transitive_pointwise_paths>, peripheries=3, fillcolor="#F070D1"] ;
Overture_reflexive_pointwise_paths [label="reflexive_pointwise_paths", URL=<Overture.html#reflexive_pointwise_paths>, peripheries=3, fillcolor="#F070D1"] ;
Overture_pointwise_paths_concat [label="pointwise_paths_concat", URL=<Overture.html#pointwise_paths_concat>, fillcolor="#F070D1"] ;
Overture_pointwise_paths [label="pointwise_paths", URL=<Overture.html#pointwise_paths>, fillcolor="#F070D1"] ;
Overture_apD [label="apD", URL=<Overture.html#apD>, fillcolor="#F070D1"] ;
Overture_ap [label="ap", URL=<Overture.html#ap>, fillcolor="#F070D1"] ;
Overture_define_internal_paths_rew_r [label="define_internal_paths_rew_r", URL=<Overture.html#define_internal_paths_rew_r>, peripheries=3, fillcolor="#F070D1"] ;
Overture_internal_paths_rew_r [label="internal_paths_rew_r", URL=<Overture.html#internal_paths_rew_r>, fillcolor="#F070D1"] ;
Overture_define_internal_paths_rew [label="define_internal_paths_rew", URL=<Overture.html#define_internal_paths_rew>, peripheries=3, fillcolor="#F070D1"] ;
Overture_internal_paths_rew [label="internal_paths_rew", URL=<Overture.html#internal_paths_rew>, fillcolor="#F070D1"] ;
Overture_transport [label="transport", URL=<Overture.html#transport>, fillcolor="#F070D1"] ;
Overture_transitive_paths [label="transitive_paths", URL=<Overture.html#transitive_paths>, peripheries=3, fillcolor="#F070D1"] ;
Overture_concat [label="concat", URL=<Overture.html#concat>, fillcolor="#F070D1"] ;
Overture_symmetric_paths [label="symmetric_paths", URL=<Overture.html#symmetric_paths>, peripheries=3, fillcolor="#F070D1"] ;
Overture_inverse [label="inverse", URL=<Overture.html#inverse>, fillcolor="#F070D1"] ;
Overture_related_reflexive_path [label="related_reflexive_path", URL=<Overture.html#related_reflexive_path>, fillcolor="#F070D1"] ;
Overture_paths_ind_r [label="paths_ind_r", URL=<Overture.html#paths_ind_r>, fillcolor="#F070D1"] ;
Overture_paths_ind_ [label="paths_ind'", URL=<Overture.html#paths_ind'>, peripheries=3, fillcolor="#F070D1"] ;
Overture_reflexive_paths [label="reflexive_paths", URL=<Overture.html#reflexive_paths>, peripheries=3, fillcolor="#F070D1"] ;
Overture_paths_rect [label="paths_rect", URL=<Overture.html#paths_rect>, fillcolor="#F070D1"] ;
Overture_paths_rec [label="paths_rec", URL=<Overture.html#paths_rec>, peripheries=3, fillcolor="#F070D1"] ;
Overture_paths_ind [label="paths_ind", URL=<Overture.html#paths_ind>, fillcolor="#F070D1"] ;
Overture_idpath [label="idpath", URL=<Overture.html#idpath>, fillcolor="#7FAAFF"] ;
Overture_paths [label="paths", URL=<Overture.html#paths>, fillcolor="#E2CDFA"] ;
Overture_symmetric_flip [label="symmetric_flip", URL=<Overture.html#symmetric_flip>, peripheries=3, fillcolor="#F070D1"] ;
Overture_transitive_flip [label="transitive_flip", URL=<Overture.html#transitive_flip>, fillcolor="#F070D1"] ;
Overture_reflexive_flip [label="reflexive_flip", URL=<Overture.html#reflexive_flip>, fillcolor="#F070D1"] ;
Overture_flip [label="flip", URL=<Overture.html#flip>, fillcolor="#F070D1"] ;
Overture_uncurry [label="uncurry", URL=<Overture.html#uncurry>, peripheries=3, fillcolor="#F070D1"] ;
Overture_transitive_fun [label="transitive_fun", URL=<Overture.html#transitive_fun>, fillcolor="#F070D1"] ;
Overture_composeD [label="composeD", URL=<Overture.html#composeD>, fillcolor="#F070D1"] ;
Overture_Compose [label="Compose", URL=<Overture.html#Compose>, peripheries=3, fillcolor="#F070D1"] ;
Overture_const [label="const", URL=<Overture.html#const>, fillcolor="#F070D1"] ;
Overture_reflexive_fun [label="reflexive_fun", URL=<Overture.html#reflexive_fun>, fillcolor="#F070D1"] ;
Overture_sig_rec [label="sig_rec", URL=<Overture.html#sig_rec>, peripheries=3, fillcolor="#F070D1"] ;
Overture_sig_ind [label="sig_ind", URL=<Overture.html#sig_ind>, peripheries=3, fillcolor="#F070D1"] ;
Overture_sig_rect [label="sig_rect", URL=<Overture.html#sig_rect>, peripheries=3, fillcolor="#F070D1"] ;
Overture_proj2 [label="proj2", URL=<Overture.html#proj2>, peripheries=3, fillcolor="#F070D1"] ;
Overture_proj1 [label="proj1", URL=<Overture.html#proj1>, fillcolor="#F070D1"] ;
Overture_exist [label="exist", URL=<Overture.html#exist>, fillcolor="#7FAAFF"] ;
Overture_sig [label="sig", URL=<Overture.html#sig>, fillcolor="#E2CDFA"] ;
Overture_PreOrder_Transitive [label="PreOrder_Transitive", URL=<Overture.html#PreOrder_Transitive>, peripheries=3, fillcolor="#F070D1"] ;
Overture_PreOrder_Reflexive [label="PreOrder_Reflexive", URL=<Overture.html#PreOrder_Reflexive>, peripheries=3, fillcolor="#F070D1"] ;
Overture_Build_PreOrder [label="Build_PreOrder", URL=<Overture.html#Build_PreOrder>, peripheries=3, fillcolor="#7FAAFF"] ;
Overture_PreOrder [label="PreOrder", URL=<Overture.html#PreOrder>, fillcolor="#E2CDFA"] ;
Overture_transitivity [label="transitivity", URL=<Overture.html#transitivity>, fillcolor="#F070D1"] ;
Overture_Transitive [label="Transitive", URL=<Overture.html#Transitive>, fillcolor="#F070D1"] ;
Overture_symmetry [label="symmetry", URL=<Overture.html#symmetry>, fillcolor="#F070D1"] ;
Overture_Symmetric [label="Symmetric", URL=<Overture.html#Symmetric>, fillcolor="#F070D1"] ;
Overture_reflexivity [label="reflexivity", URL=<Overture.html#reflexivity>, fillcolor="#F070D1"] ;
Overture_Reflexive [label="Reflexive", URL=<Overture.html#Reflexive>, fillcolor="#F070D1"] ;
Overture_Relation [label="Relation", URL=<Overture.html#Relation>, fillcolor="#F070D1"] ;
Overture_prod_ind [label="prod_ind", URL=<Overture.html#prod_ind>, peripheries=3, fillcolor="#F070D1"] ;
Overture_prod_rect [label="prod_rect", URL=<Overture.html#prod_rect>, peripheries=3, fillcolor="#F070D1"] ;
Overture_snd [label="snd", URL=<Overture.html#snd>, fillcolor="#F070D1"] ;
Overture_fst [label="fst", URL=<Overture.html#fst>, fillcolor="#F070D1"] ;
Overture_pair [label="pair", URL=<Overture.html#pair>, fillcolor="#7FAAFF"] ;
Overture_prod [label="prod", URL=<Overture.html#prod>, fillcolor="#E2CDFA"] ;
Overture_sum_ind [label="sum_ind", URL=<Overture.html#sum_ind>, fillcolor="#F070D1"] ;
Overture_sum_rect [label="sum_rect", URL=<Overture.html#sum_rect>, peripheries=3, fillcolor="#F070D1"] ;
Overture_inr [label="inr", URL=<Overture.html#inr>, fillcolor="#7FAAFF"] ;
Overture_inl [label="inl", URL=<Overture.html#inl>, fillcolor="#7FAAFF"] ;
Overture_sum [label="sum", URL=<Overture.html#sum>, fillcolor="#E2CDFA"] ;
Overture_option_rect [label="option_rect", URL=<Overture.html#option_rect>, peripheries=3, fillcolor="#F070D1"] ;
Overture_None [label="None", URL=<Overture.html#None>, fillcolor="#7FAAFF"] ;
Overture_Some [label="Some", URL=<Overture.html#Some>, fillcolor="#7FAAFF"] ;
Overture_option [label="option", URL=<Overture.html#option>, fillcolor="#E2CDFA"] ;
Numeral_int_of_int [label="int_of_int", URL=<Numeral.html#int_of_int>, peripheries=3, fillcolor="#F070D1"] ;
Numeral_uint_of_uint [label="uint_of_uint", URL=<Numeral.html#uint_of_uint>, peripheries=3, fillcolor="#F070D1"] ;
Numeral_numeral_sind [label="numeral_sind", URL=<Numeral.html#numeral_sind>, peripheries=3, fillcolor="#F070D1"] ;
Numeral_numeral_rec [label="numeral_rec", URL=<Numeral.html#numeral_rec>, peripheries=3, fillcolor="#F070D1"] ;
Numeral_numeral_ind [label="numeral_ind", URL=<Numeral.html#numeral_ind>, peripheries=3, fillcolor="#7FFFD4"] ;
Numeral_numeral_rect [label="numeral_rect", URL=<Numeral.html#numeral_rect>, fillcolor="#F070D1"] ;
Numeral_Hex [label="Hex", URL=<Numeral.html#Hex>, fillcolor="#7FAAFF"] ;
Numeral_Dec [label="Dec", URL=<Numeral.html#Dec>, fillcolor="#7FAAFF"] ;
Numeral_numeral [label="numeral", URL=<Numeral.html#numeral>, fillcolor="#E2CDFA"] ;
Numeral_int_sind [label="int_sind", URL=<Numeral.html#int_sind>, peripheries=3, fillcolor="#F070D1"] ;
Numeral_int_rec [label="int_rec", URL=<Numeral.html#int_rec>, peripheries=3, fillcolor="#F070D1"] ;
Numeral_int_ind [label="int_ind", URL=<Numeral.html#int_ind>, peripheries=3, fillcolor="#7FFFD4"] ;
Numeral_int_rect [label="int_rect", URL=<Numeral.html#int_rect>, fillcolor="#F070D1"] ;
Numeral_IntHex [label="IntHex", URL=<Numeral.html#IntHex>, fillcolor="#7FAAFF"] ;
Numeral_IntDec [label="IntDec", URL=<Numeral.html#IntDec>, fillcolor="#7FAAFF"] ;
Numeral_int [label="int", URL=<Numeral.html#int>, fillcolor="#E2CDFA"] ;
Numeral_uint_sind [label="uint_sind", URL=<Numeral.html#uint_sind>, peripheries=3, fillcolor="#F070D1"] ;
Numeral_uint_rec [label="uint_rec", URL=<Numeral.html#uint_rec>, peripheries=3, fillcolor="#F070D1"] ;
Numeral_uint_ind [label="uint_ind", URL=<Numeral.html#uint_ind>, peripheries=3, fillcolor="#7FFFD4"] ;
Numeral_uint_rect [label="uint_rect", URL=<Numeral.html#uint_rect>, fillcolor="#F070D1"] ;
Numeral_UIntHex [label="UIntHex", URL=<Numeral.html#UIntHex>, fillcolor="#7FAAFF"] ;
Numeral_UIntDec [label="UIntDec", URL=<Numeral.html#UIntDec>, fillcolor="#7FAAFF"] ;
Numeral_uint [label="uint", URL=<Numeral.html#uint>, fillcolor="#E2CDFA"] ;
Basics_Nat_to_num_int [label="to_num_int", URL=<Basics.html#Nat.to_num_int>, peripheries=3, fillcolor="#F070D1"] ;
Basics_Nat_to_int [label="to_int", URL=<Basics.html#Nat.to_int>, fillcolor="#F070D1"] ;
Basics_Nat_of_num_int [label="of_num_int", URL=<Basics.html#Nat.of_num_int>, peripheries=3, fillcolor="#F070D1"] ;
Basics_Nat_of_hex_int [label="of_hex_int", URL=<Basics.html#Nat.of_hex_int>, fillcolor="#F070D1"] ;
Basics_Nat_of_int [label="of_int", URL=<Basics.html#Nat.of_int>, fillcolor="#F070D1"] ;
Basics_Nat_to_num_uint [label="to_num_uint", URL=<Basics.html#Nat.to_num_uint>, peripheries=3, fillcolor="#F070D1"] ;
Basics_Nat_to_uint [label="to_uint", URL=<Basics.html#Nat.to_uint>, fillcolor="#F070D1"] ;
Basics_Nat_to_little_uint [label="to_little_uint", URL=<Basics.html#Nat.to_little_uint>, fillcolor="#F070D1"] ;
Basics_Nat_of_num_uint [label="of_num_uint", URL=<Basics.html#Nat.of_num_uint>, peripheries=3, fillcolor="#F070D1"] ;
Basics_Nat_of_hex_uint [label="of_hex_uint", URL=<Basics.html#Nat.of_hex_uint>, fillcolor="#F070D1"] ;
Basics_Nat_of_hex_uint_acc [label="of_hex_uint_acc", URL=<Basics.html#Nat.of_hex_uint_acc>, fillcolor="#F070D1"] ;
Basics_Nat_of_uint [label="of_uint", URL=<Basics.html#Nat.of_uint>, fillcolor="#F070D1"] ;
Basics_Nat_of_uint_acc [label="of_uint_acc", URL=<Basics.html#Nat.of_uint_acc>, fillcolor="#F070D1"] ;
Basics_Nat_tail_mul [label="tail_mul", URL=<Basics.html#Nat.tail_mul>, fillcolor="#F070D1"] ;
Basics_Nat_tail_addmul [label="tail_addmul", URL=<Basics.html#Nat.tail_addmul>, fillcolor="#F070D1"] ;
Basics_Nat_tail_add [label="tail_add", URL=<Basics.html#Nat.tail_add>, fillcolor="#F070D1"] ;
Iff_iff_contradiction [label="iff_contradiction", URL=<Iff.html#iff_contradiction>, peripheries=3, fillcolor="#F070D1"] ;
Iff_iff_not_sum [label="iff_not_sum", URL=<Iff.html#iff_not_sum>, peripheries=3, fillcolor="#F070D1"] ;
Iff_iff_equiv [label="iff_equiv", URL=<Iff.html#iff_equiv>, fillcolor="#F070D1"] ;
Iff_transitive_iff [label="transitive_iff", URL=<Iff.html#transitive_iff>, peripheries=3, fillcolor="#F070D1"] ;
Iff_iff_compose [label="iff_compose", URL=<Iff.html#iff_compose>, fillcolor="#F070D1"] ;
Iff_symmetric_iff [label="symmetric_iff", URL=<Iff.html#symmetric_iff>, peripheries=3, fillcolor="#F070D1"] ;
Iff_iff_inverse [label="iff_inverse", URL=<Iff.html#iff_inverse>, fillcolor="#F070D1"] ;
Iff_iff_reflexive [label="iff_reflexive", URL=<Iff.html#iff_reflexive>, peripheries=3, fillcolor="#F070D1"] ;
Iff_iff_refl [label="iff_refl", URL=<Iff.html#iff_refl>, fillcolor="#F070D1"] ;
Iff_iff [label="iff", URL=<Iff.html#iff>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_nztail_int [label="nztail_int", URL=<Numerals.html#Hexadecimal.nztail_int>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_nztail [label="nztail", URL=<Numerals.html#Hexadecimal.nztail>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_app_int [label="app_int", URL=<Numerals.html#Hexadecimal.app_int>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_app [label="app", URL=<Numerals.html#Hexadecimal.app>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_rev [label="rev", URL=<Numerals.html#Hexadecimal.rev>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_revapp [label="revapp", URL=<Numerals.html#Hexadecimal.revapp>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_opp [label="opp", URL=<Numerals.html#Hexadecimal.opp>, peripheries=3, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_norm [label="norm", URL=<Numerals.html#Hexadecimal.norm>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_unorm [label="unorm", URL=<Numerals.html#Hexadecimal.unorm>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_nzhead [label="nzhead", URL=<Numerals.html#Hexadecimal.nzhead>, fillcolor="#F070D1"] ;
Numerals_Hexadecimal_nb_digits [label="nb_digits", URL=<Numerals.html#Hexadecimal.nb_digits>, peripheries=3, fillcolor="#F070D1"] ;
Hexadecimal_hexadecimal_sind [label="hexadecimal_sind", URL=<Hexadecimal.html#hexadecimal_sind>, peripheries=3, fillcolor="#F070D1"] ;
Hexadecimal_hexadecimal_rec [label="hexadecimal_rec", URL=<Hexadecimal.html#hexadecimal_rec>, peripheries=3, fillcolor="#F070D1"] ;
Hexadecimal_hexadecimal_ind [label="hexadecimal_ind", URL=<Hexadecimal.html#hexadecimal_ind>, peripheries=3, fillcolor="#7FFFD4"] ;
Hexadecimal_hexadecimal_rect [label="hexadecimal_rect", URL=<Hexadecimal.html#hexadecimal_rect>, fillcolor="#F070D1"] ;
  Numerals_Hexadecimal_HexadecimalExp -> Numerals_Hexadecimal_int [] ;
  Numerals_Hexadecimal_HexadecimalExp -> Numerals_Decimal_int [] ;
  Numerals_Hexadecimal_Hexadecimal -> Numerals_Hexadecimal_int [] ;
  Numerals_Hexadecimal_Hexadecimal -> Numerals_Decimal_int [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_Df [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_De [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_Dd [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_Dc [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_Db [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_Da [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_D9 [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_D8 [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_D7 [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_D6 [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_D5 [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_D4 [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_D3 [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_D2 [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_D1 [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_D0 [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_Nil [] ;
  Numerals_Hexadecimal_Little_succ_double -> Numerals_Hexadecimal_uint [] ;
  Numerals_Hexadecimal_hexadecimal -> Numerals_Hexadecimal_int [] ;
  Numerals_Hexadecimal_hexadecimal -> Numerals_Decimal_int [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_Df [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_De [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_Dd [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_Dc [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_Db [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_Da [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_D9 [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_D8 [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_D7 [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_D6 [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_D5 [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_D4 [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_D3 [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_D2 [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_D1 [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_D0 [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_Nil [] ;
  Numerals_Hexadecimal_Little_double -> Numerals_Hexadecimal_uint [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_Df [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_De [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_Dd [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_Dc [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_Db [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_Da [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_D9 [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_D8 [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_D7 [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_D6 [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_D5 [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_D4 [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_D3 [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_D2 [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_D1 [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_D0 [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_Nil [] ;
  Numerals_Hexadecimal_Little_succ -> Numerals_Hexadecimal_uint [] ;
  Hexadecimal_int_sind -> Numerals_Hexadecimal_Neg [] ;
  Hexadecimal_int_sind -> Numerals_Hexadecimal_Pos [] ;
  Hexadecimal_int_sind -> Numerals_Hexadecimal_int [] ;
  Numerals_Decimal_Little_succ_double -> Numerals_Decimal_D9 [] ;
  Numerals_Decimal_Little_succ_double -> Numerals_Decimal_D8 [] ;
  Numerals_Decimal_Little_succ_double -> Numerals_Decimal_D7 [] ;
  Numerals_Decimal_Little_succ_double -> Numerals_Decimal_D6 [] ;
  Numerals_Decimal_Little_succ_double -> Numerals_Decimal_D5 [] ;
  Numerals_Decimal_Little_succ_double -> Numerals_Decimal_D4 [] ;
  Numerals_Decimal_Little_succ_double -> Numerals_Decimal_D3 [] ;
  Numerals_Decimal_Little_succ_double -> Numerals_Decimal_D2 [] ;
  Numerals_Decimal_Little_succ_double -> Numerals_Decimal_D1 [] ;
  Numerals_Decimal_Little_succ_double -> Numerals_Decimal_D0 [] ;
  Numerals_Decimal_Little_succ_double -> Numerals_Decimal_Nil [] ;
  Numerals_Decimal_Little_succ_double -> Numerals_Decimal_uint [] ;
  Hexadecimal_int_rec -> Hexadecimal_int_rect [] ;
  Hexadecimal_int_ind -> Numerals_Hexadecimal_Neg [] ;
  Hexadecimal_int_ind -> Numerals_Hexadecimal_Pos [] ;
  Hexadecimal_int_ind -> Numerals_Hexadecimal_int [] ;
  Numerals_Decimal_Little_double -> Numerals_Decimal_D9 [] ;
  Numerals_Decimal_Little_double -> Numerals_Decimal_D8 [] ;
  Numerals_Decimal_Little_double -> Numerals_Decimal_D7 [] ;
  Numerals_Decimal_Little_double -> Numerals_Decimal_D6 [] ;
  Numerals_Decimal_Little_double -> Numerals_Decimal_D5 [] ;
  Numerals_Decimal_Little_double -> Numerals_Decimal_D4 [] ;
  Numerals_Decimal_Little_double -> Numerals_Decimal_D3 [] ;
  Numerals_Decimal_Little_double -> Numerals_Decimal_D2 [] ;
  Numerals_Decimal_Little_double -> Numerals_Decimal_D1 [] ;
  Numerals_Decimal_Little_double -> Numerals_Decimal_D0 [] ;
  Numerals_Decimal_Little_double -> Numerals_Decimal_Nil [] ;
  Numerals_Decimal_Little_double -> Numerals_Decimal_uint [] ;
  Numerals_Decimal_Little_succ -> Numerals_Decimal_D9 [] ;
  Numerals_Decimal_Little_succ -> Numerals_Decimal_D8 [] ;
  Numerals_Decimal_Little_succ -> Numerals_Decimal_D7 [] ;
  Numerals_Decimal_Little_succ -> Numerals_Decimal_D6 [] ;
  Numerals_Decimal_Little_succ -> Numerals_Decimal_D5 [] ;
  Numerals_Decimal_Little_succ -> Numerals_Decimal_D4 [] ;
  Numerals_Decimal_Little_succ -> Numerals_Decimal_D3 [] ;
  Numerals_Decimal_Little_succ -> Numerals_Decimal_D2 [] ;
  Numerals_Decimal_Little_succ -> Numerals_Decimal_D1 [] ;
  Numerals_Decimal_Little_succ -> Numerals_Decimal_D0 [] ;
  Numerals_Decimal_Little_succ -> Numerals_Decimal_Nil [] ;
  Numerals_Decimal_Little_succ -> Numerals_Decimal_uint [] ;
  Hexadecimal_int_rect -> Numerals_Hexadecimal_Neg [] ;
  Hexadecimal_int_rect -> Numerals_Hexadecimal_Pos [] ;
  Hexadecimal_int_rect -> Numerals_Hexadecimal_int [] ;
  Numerals_Hexadecimal_Neg -> Numerals_Hexadecimal_uint [] ;
  Trunc_istrunc_inhabited_istrunc -> Overture_istrunc_fun [] ;
  Trunc_istrunc_inhabited_istrunc -> Overture_istrunc_S [] ;
  Numerals_Hexadecimal_Pos -> Numerals_Hexadecimal_uint [] ;
  Trunc_equiv_contr_hprop -> Trunc_ishprop_istrunc [] ;
  Trunc_equiv_contr_hprop -> Trunc_iff_contr_hprop [] ;
  Trunc_equiv_contr_hprop -> Trunc_equiv_iff_hprop_uncurried [] ;
  Numerals_Hexadecimal_int -> Numerals_Hexadecimal_uint [] ;
  Trunc_contr_istrunc -> Trunc_ishprop_istrunc [] ;
  Trunc_contr_istrunc -> Trunc_contr_inhabited_hprop [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_Df [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_De [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_Dd [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_Dc [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_Db [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_Da [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_D9 [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_D8 [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_D7 [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_D6 [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_D5 [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_D4 [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_D3 [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_D2 [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_D1 [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_D0 [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_Nil [] ;
  Numerals_Hexadecimal_uint_sind -> Numerals_Hexadecimal_uint [] ;
  Trunc_ishprop_istruncmap -> Trunc_ishprop_istrunc [] ;
  Trunc_ishprop_istruncmap -> Trunc_path_ishprop [] ;
  Trunc_ishprop_istruncmap -> Trunc_IsTruncMap [] ;
  Numerals_Hexadecimal_uint_rec -> Numerals_Hexadecimal_uint_rect [] ;
  Trunc_ishprop_istrunc -> Trunc_istrunc_forall [] ;
  Trunc_ishprop_istrunc -> Trunc_hprop_allpath [] ;
  Trunc_ishprop_istrunc -> Trunc_istrunc_equiv_istrunc [] ;
  Trunc_ishprop_istrunc -> Overture_equiv_istrunc_unfold [] ;
  Trunc_ishprop_istrunc -> Equivalences_equiv_inverse [] ;
  Trunc_ishprop_istrunc -> Contractible_path2_contr [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_Df [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_De [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_Dd [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_Dc [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_Db [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_Da [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_D9 [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_D8 [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_D7 [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_D6 [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_D5 [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_D4 [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_D3 [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_D2 [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_D1 [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_D0 [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_Nil [] ;
  Numerals_Hexadecimal_uint_ind -> Numerals_Hexadecimal_uint [] ;
  Trunc_istrunc_forall -> Trunc_contr_forall [] ;
  Trunc_istrunc_forall -> Trunc_istrunc_isequiv_istrunc [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_Df [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_De [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_Dd [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_Dc [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_Db [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_Da [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_D9 [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_D8 [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_D7 [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_D6 [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_D5 [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_D4 [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_D3 [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_D2 [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_D1 [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_D0 [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_Nil [] ;
  Numerals_Hexadecimal_uint_rect -> Numerals_Hexadecimal_uint [] ;
  Trunc_contr_forall -> Overture_contr [] ;
  Trunc_contr_forall -> Overture_Build_Contr [] ;
  Trunc_contr_forall -> Overture_path_forall [] ;
  Trunc_iff_contr_hprop -> Trunc_contr_inhabited_hprop [] ;
  Trunc_iff_contr_hprop -> Overture_pair [] ;
  Trunc_iff_contr_hprop -> Iff_iff [] ;
  Trunc_equiv_iff_hprop -> Trunc_equiv_iff_hprop_uncurried [] ;
  Trunc_equiv_iff_hprop -> Overture_pair [] ;
  Trunc_equiv_iff_hprop_uncurried -> Trunc_path_ishprop [] ;
  Trunc_equiv_iff_hprop_uncurried -> Iff_iff [] ;
  Trunc_equiv_iff_hprop_uncurried -> Equivalences_equiv_adjointify [] ;
  Trunc_isequiv_iff_hprop -> Trunc_path_ishprop [] ;
  Trunc_isequiv_iff_hprop -> Equivalences_isequiv_adjointify [] ;
  Trunc_hprop_allpath -> Overture_istrunc_S [] ;
  Trunc_hprop_allpath -> Contractible_contr_paths_contr [] ;
  Trunc_path_ishprop -> Overture_center [] ;
  Trunc_path_ishprop -> Overture_istrunc_paths [] ;
  Trunc_hprop_inhabited_contr -> Overture_istrunc_S [] ;
  Trunc_hprop_inhabited_contr -> Contractible_contr_paths_contr [] ;
  Trunc_contr_inhabited_hprop -> Overture_center [] ;
  Trunc_contr_inhabited_hprop -> Overture_istrunc_paths [] ;
  Trunc_contr_inhabited_hprop -> Overture_Build_Contr [] ;
  Trunc_smallntype -> Trunc_Build_TruncType [] ;
  Trunc_smallntype -> Trunc_TruncType [] ;
  Trunc_smallntype -> Trunc_istrunc_equiv_istrunc [] ;
  Trunc_smallntype -> Overture_IsSmall [] ;
  Trunc_smallntype -> Equivalences_equiv_inverse [] ;
  Trunc_default_TruncType -> Trunc_Build_TruncType [] ;
  Trunc_default_TruncType -> Trunc_TruncType [] ;
  Trunc_trunctype_istrunc -> Trunc_TruncType [] ;
  Trunc_trunctype_type -> Trunc_TruncType [] ;
  Trunc_TruncType_sind -> Trunc_Build_TruncType [] ;
  Trunc_TruncType_sind -> Trunc_TruncType [] ;
  Trunc_TruncType_rec -> Trunc_TruncType_rect [] ;
  Trunc_TruncType_ind -> Trunc_Build_TruncType [] ;
  Trunc_TruncType_ind -> Trunc_TruncType [] ;
  Trunc_TruncType_rect -> Trunc_Build_TruncType [] ;
  Trunc_TruncType_rect -> Trunc_TruncType [] ;
  Trunc_Build_TruncType -> Overture_IsTrunc_internal [] ;
  Trunc_TruncType -> Overture_IsTrunc_internal [] ;
  Trunc_istruncmap_fiber -> Trunc_IsTruncMap [] ;
  Equivalences_equiv_composeR_ -> Equivalences_equiv_compose_ [] ;
  Equivalences_equiv_path_ind -> Overture_Equiv [] ;
  Equivalences_equiv_path_ind -> Equivalences_equiv_ind [] ;
  Trunc_IsTruncMap -> Overture_hfiber [] ;
  Trunc_IsTruncMap -> Overture_IsTrunc_internal [] ;
  Trunc_istrunc_equiv_istrunc -> Trunc_istrunc_isequiv_istrunc [] ;
  Trunc_istrunc_equiv_istrunc -> Overture_Equiv [] ;
  Equivalences_equiv_ind_comp -> PathGroupoids_transport_compose [] ;
  Equivalences_equiv_ind_comp -> Overture_eisadj [] ;
  Equivalences_equiv_ind_comp -> Overture_apD [] ;
  Equivalences_equiv_ind_comp -> Overture_internal_paths_rew_r [] ;
  Equivalences_equiv_ind_comp -> Overture_internal_paths_rew [] ;
  Equivalences_equiv_ind_comp -> Equivalences_equiv_ind [] ;
  Trunc_istrunc_isequiv_istrunc -> Overture_istrunc_paths [] ;
  Trunc_istrunc_isequiv_istrunc -> Overture_istrunc_S [] ;
  Trunc_istrunc_isequiv_istrunc -> Equivalences_isequiv_inverse [] ;
  Trunc_istrunc_isequiv_istrunc -> Equivalences_contr_equiv [] ;
  Equivalences_equiv_ind -> Overture_IsEquiv [] ;
  Equivalences_equiv_ind -> Overture_transport [] ;
  Trunc_istrunc_hset -> Trunc_istrunc_leq [] ;
  Trunc_istrunc_hset -> Overture_tt [] ;
  Equivalences_contr_basedhomotopy_ -> Overture_path_forall [] ;
  Equivalences_contr_basedhomotopy_ -> Overture_eissect [] ;
  Equivalences_contr_basedhomotopy_ -> Overture_eisretr [] ;
  Equivalences_contr_basedhomotopy_ -> Equivalences_contr_equiv_ [] ;
  Equivalences_contr_basedhomotopy_ -> Equivalences_equiv_adjointify [] ;
  Equivalences_contr_basedhomotopy_ -> Contractible_contr_basedpaths_ [] ;
  Trunc_istrunc_hprop -> Trunc_istrunc_leq [] ;
  Trunc_istrunc_hprop -> Overture_tt [] ;
  Equivalences_contr_basedhomotopy -> Overture_path_forall [] ;
  Equivalences_contr_basedhomotopy -> Overture_eissect [] ;
  Equivalences_contr_basedhomotopy -> Overture_eisretr [] ;
  Equivalences_contr_basedhomotopy -> Equivalences_contr_equiv_ [] ;
  Equivalences_contr_basedhomotopy -> Equivalences_equiv_adjointify [] ;
  Equivalences_contr_basedhomotopy -> Contractible_contr_basedpaths [] ;
  Trunc_istrunc_contr -> Trunc_istrunc_leq [] ;
  Trunc_istrunc_contr -> Overture_tt [] ;
  Equivalences_isequiv_commsq_ -> Equivalences_cancelL_isequiv [] ;
  Trunc_istrunc_leq -> Trunc_istrunc_succ [] ;
  Trunc_istrunc_leq -> Trunc_trunc_index_leq [] ;
  Equivalences_isequiv_commsq -> Equivalences_cancelR_isequiv [] ;
  Trunc_istrunc_succ -> Trunc_istrunc_paths_ [] ;
  Equivalences_cancelL_equiv -> Overture_Build_Equiv [] ;
  Equivalences_cancelL_equiv -> Overture_Equiv [] ;
  Equivalences_cancelL_equiv -> Equivalences_cancelL_isequiv [] ;
  Trunc_istrunc_paths_ -> Overture_istrunc_paths [] ;
  Trunc_istrunc_paths_ -> Overture_istrunc_S [] ;
  Trunc_istrunc_paths_ -> Contractible_contr_paths_contr [] ;
  Equivalences_cancelL_isequiv -> Overture_equiv_inv [] ;
  Equivalences_cancelL_isequiv -> Equivalences_isequiv_inverse [] ;
  Equivalences_cancelL_isequiv -> Equivalences_isequiv_homotopic [] ;
  Equivalences_cancelL_isequiv -> Equivalences_isequiv_compose [] ;
  Trunc_contr_istrunc_minus_two -> Overture_IsTrunc_internal [] ;
  Equivalences_cancelR_equiv -> Overture_Build_Equiv [] ;
  Equivalences_cancelR_equiv -> Overture_Equiv [] ;
  Equivalences_cancelR_equiv -> Equivalences_cancelR_isequiv [] ;
  Trunc_trunc_index_min_leq_right -> Trunc_trunc_index_min [] ;
  Trunc_trunc_index_min_leq_right -> Trunc_trunc_index_leq [] ;
  Trunc_trunc_index_min_leq_right -> Overture_tt [] ;
  Trunc_trunc_index_min_leq_right -> Overture_trunc_index_ind [] ;
  Equivalences_cancelR_isequiv -> Equivalences_isequiv_inverse [] ;
  Equivalences_cancelR_isequiv -> Equivalences_isequiv_homotopic [] ;
  Equivalences_cancelR_isequiv -> Equivalences_isequiv_compose [] ;
  Trunc_trunc_index_min_leq_left -> Trunc_trunc_index_min [] ;
  Trunc_trunc_index_min_leq_left -> Trunc_trunc_index_leq [] ;
  Trunc_trunc_index_min_leq_left -> Overture_tt [] ;
  Trunc_trunc_index_min_leq_left -> Overture_trunc_index_ind [] ;
  Equivalences_equiv_ap_inv_ -> Equivalences_equiv_inverse [] ;
  Equivalences_equiv_ap_inv_ -> Equivalences_equiv_ap_ [] ;
  Trunc_trunc_index_min_path -> Trunc_trunc_index_min [] ;
  Trunc_trunc_index_min_path -> Overture_ap [] ;
  Trunc_trunc_index_min_path -> Overture_inr [] ;
  Trunc_trunc_index_min_path -> Overture_inl [] ;
  Trunc_trunc_index_min_path -> Overture_sum [] ;
  Equivalences_equiv_ap_inv -> Equivalences_equiv_inverse [] ;
  Equivalences_equiv_ap_inv -> Equivalences_equiv_ap [] ;
  Trunc_trunc_index_min_swap -> Trunc_trunc_index_min_minus_two [] ;
  Trunc_trunc_index_min_swap -> Overture_ap [] ;
  Trunc_trunc_index_min_swap -> Overture_inverse [] ;
  Equivalences_equiv_inverse_homotopy -> Overture_Equiv [] ;
  Equivalences_equiv_inverse_homotopy -> Overture_eisretr [] ;
  Equivalences_equiv_inverse_homotopy -> Overture_equiv_inv [] ;
  Equivalences_equiv_inverse_homotopy -> Overture_concat [] ;
  Equivalences_equiv_inverse_homotopy -> Overture_inverse [] ;
  Trunc_trunc_index_min_minus_two -> Trunc_trunc_index_min [] ;
  Trunc_trunc_index_min_minus_two -> Overture_idpath [] ;
  Trunc_trunc_index_min_minus_two -> Overture_paths [] ;
  Equivalences_equiv_inverse_compose -> Equivalences_equiv_inverse [] ;
  Equivalences_equiv_inverse_compose -> Equivalences_equiv_compose_ [] ;
  Trunc_trunc_index_min -> Overture_trunc_S [] ;
  Trunc_trunc_index_min -> Overture_minus_two [] ;
  Trunc_trunc_index_min -> Overture_trunc_index [] ;
  Equivalences_symmetric_equiv -> Overture_Symmetric [] ;
  Equivalences_symmetric_equiv -> Equivalences_equiv_inverse [] ;
  Trunc_trunc_index_leq_add_ -> Trunc_trunc_index_leq_add [] ;
  Trunc_trunc_index_leq_add_ -> Trunc_trunc_index_add_comm [] ;
  Trunc_trunc_index_leq_add_ -> Overture_internal_paths_rew_r [] ;
  Equivalences_equiv_inverse -> Overture_Build_Equiv [] ;
  Equivalences_equiv_inverse -> Overture_Equiv [] ;
  Equivalences_equiv_inverse -> Equivalences_isequiv_inverse [] ;
  Trunc_trunc_index_leq_add -> Trunc_trunc_index_leq_transitive [] ;
  Trunc_trunc_index_leq_add -> Trunc_trunc_index_leq_refl [] ;
  Trunc_trunc_index_leq_add -> Trunc_trunc_index_leq_succ [] ;
  Trunc_trunc_index_leq_add -> Trunc_trunc_index_add [] ;
  Equivalences_isequiv_inverse -> PathGroupoids_ap_homotopic_id [] ;
  Equivalences_isequiv_inverse -> PathGroupoids_concat_pp_V [] ;
  Equivalences_isequiv_inverse -> Overture_eisadj [] ;
  Equivalences_isequiv_inverse -> Equivalences_equiv_inj [] ;
  Trunc_trunc_index_leq_transitive -> Trunc_trunc_index_leq_minus_two [] ;
  Trunc_trunc_index_leq_transitive -> Overture_tt [] ;
  Trunc_trunc_index_leq_transitive -> Overture_trunc_index_ind [] ;
  Trunc_trunc_index_leq_transitive -> Overture_Transitive [] ;
  Equivalences_isequiv_isequiv_postcompose -> Overture_ap10 [] ;
  Equivalences_isequiv_isequiv_postcompose -> Equivalences_equiv_inj [] ;
  Trunc_trunc_index_leq_refl -> Trunc_trunc_index_leq [] ;
  Trunc_trunc_index_leq_refl -> Overture_tt [] ;
  Trunc_trunc_index_leq_refl -> Overture_trunc_index_ind [] ;
  Trunc_trunc_index_leq_refl -> Overture_Reflexive [] ;
  Equivalences_isequiv_isequiv_precompose -> Overture_ap10 [] ;
  Equivalences_isequiv_isequiv_precompose -> Equivalences_equiv_inj [] ;
  Trunc_trunc_index_leq_succ_ -> Trunc_trunc_index_leq_minus_two_n [] ;
  Trunc_trunc_index_leq_succ_ -> Overture_trunc_index_ind [] ;
  Equivalences_equiv_postcompose_ -> Overture_equiv_fun [] ;
  Equivalences_equiv_postcompose_ -> Overture_Build_Equiv [] ;
  Equivalences_equiv_postcompose_ -> Equivalences_isequiv_postcompose [] ;
  Trunc_trunc_index_leq_minus_two -> Trunc_trunc_index_leq [] ;
  Trunc_trunc_index_leq_minus_two -> Overture_Empty_rec [] ;
  Trunc_trunc_index_leq_minus_two -> Overture_trunc_S [] ;
  Trunc_trunc_index_leq_minus_two -> Overture_minus_two [] ;
  Trunc_trunc_index_leq_minus_two -> Overture_idpath [] ;
  Trunc_trunc_index_leq_minus_two -> Overture_paths [] ;
  Equivalences_equiv_postcompose -> Overture_Build_Equiv [] ;
  Equivalences_equiv_postcompose -> Overture_Equiv [] ;
  Equivalences_equiv_postcompose -> Equivalences_isequiv_postcompose [] ;
  Trunc_trunc_index_add_pred_ -> Trunc_trunc_index_pred [] ;
  Trunc_trunc_index_add_pred_ -> Trunc_trunc_index_leq [] ;
  Trunc_trunc_index_add_pred_ -> Trunc_trunc_index_add_succ [] ;
  Trunc_trunc_index_add_pred_ -> Overture_Empty_rec [] ;
  Trunc_trunc_index_add_pred_ -> Overture_inverse [] ;
  Equivalences_isequiv_postcompose -> Overture_path_forall [] ;
  Equivalences_isequiv_postcompose -> Equivalences_isequiv_adjointify [] ;
  Trunc_trunc_index_add_pred -> Trunc_trunc_index_pred [] ;
  Trunc_trunc_index_add_pred -> Trunc_trunc_index_add_succ [] ;
  Trunc_trunc_index_add_pred -> Trunc_nat_to_trunc_index [] ;
  Trunc_trunc_index_add_pred -> Overture_inverse [] ;
  Equivalences_equiv_precompose_ -> Overture_Build_Equiv [] ;
  Equivalences_equiv_precompose_ -> Overture_Equiv [] ;
  Equivalences_equiv_precompose_ -> Equivalences_isequiv_precompose [] ;
  Trunc_trunc_index_succ_pred_ -> Trunc_trunc_index_pred [] ;
  Trunc_trunc_index_succ_pred_ -> Trunc_trunc_index_leq [] ;
  Trunc_trunc_index_succ_pred_ -> Overture_Empty_rec [] ;
  Trunc_trunc_index_succ_pred_ -> Overture_trunc_S [] ;
  Trunc_trunc_index_succ_pred_ -> Overture_idpath [] ;
  Trunc_trunc_index_succ_pred_ -> Overture_paths [] ;
  Equivalences_equiv_precompose -> Overture_Build_Equiv [] ;
  Equivalences_equiv_precompose -> Overture_Equiv [] ;
  Equivalences_equiv_precompose -> Equivalences_isequiv_precompose [] ;
  Trunc_trunc_index_succ_pred -> Trunc_trunc_index_pred [] ;
  Trunc_trunc_index_succ_pred -> Trunc_nat_to_trunc_index [] ;
  Trunc_trunc_index_succ_pred -> Overture_idpath [] ;
  Trunc_trunc_index_succ_pred -> Overture_paths [] ;
  Equivalences_isequiv_precompose -> Overture_path_forall [] ;
  Equivalences_isequiv_precompose -> Equivalences_isequiv_adjointify [] ;
  Trunc_trunc_index_pred -> Overture_minus_two [] ;
  Trunc_trunc_index_pred -> Overture_trunc_index [] ;
  Equivalences_equiv_inj -> Equivalences_isequiv_ap [] ;
  Trunc_trunc_index_leq_succ -> Trunc_trunc_index_leq [] ;
  Trunc_trunc_index_leq_succ -> Overture_tt [] ;
  Trunc_trunc_index_leq_succ -> Overture_trunc_index_ind [] ;
  Equivalences_equiv_ap_ -> Equivalences_equiv_ap [] ;
  Trunc_trunc_index_leq_minus_two_n -> Trunc_trunc_index_leq [] ;
  Trunc_trunc_index_leq_minus_two_n -> Overture_tt [] ;
  Trunc_trunc_index_leq_minus_two_n -> Overture_minus_two [] ;
  Equivalences_equiv_ap -> Overture_Build_Equiv [] ;
  Equivalences_equiv_ap -> Overture_Equiv [] ;
  Equivalences_equiv_ap -> Equivalences_isequiv_ap [] ;
  Trunc_trunc_index_leq -> Overture_Unit [] ;
  Trunc_trunc_index_leq -> Overture_Empty [] ;
  Trunc_trunc_index_leq -> Overture_trunc_index [] ;
  Equivalences_isequiv_ap -> PathGroupoids_whiskerR [] ;
  Equivalences_isequiv_ap -> PathGroupoids_whiskerL [] ;
  Equivalences_isequiv_ap -> PathGroupoids_inverse2 [] ;
  Equivalences_isequiv_ap -> PathGroupoids_concat_pA1_p [] ;
  Equivalences_isequiv_ap -> PathGroupoids_concat_Vp [] ;
  Equivalences_isequiv_ap -> Equivalences_isequiv_adjointify [] ;
  Trunc_trunc_index_add_comm -> Trunc_trunc_index_add_succ [] ;
  Trunc_trunc_index_add_comm -> Trunc_trunc_index_add_minus_two [] ;
  Trunc_trunc_index_add_comm -> Overture_concat [] ;
  Equivalences_equiv_pr1 -> Overture_Build_Equiv [] ;
  Equivalences_equiv_pr1 -> Overture_Equiv [] ;
  Equivalences_equiv_pr1 -> Equivalences_isequiv_pr1 [] ;
  Trunc_trunc_index_add_succ -> Trunc_trunc_index_add [] ;
  Trunc_trunc_index_add_succ -> Overture_minus_two [] ;
  Trunc_trunc_index_add_succ -> Overture_ap [] ;
  Equivalences_isequiv_pr1 -> PathGroupoids_ap_const [] ;
  Equivalences_isequiv_pr1 -> PathGroupoids_ap_compose [] ;
  Equivalences_isequiv_pr1 -> Overture_contr [] ;
  Equivalences_isequiv_pr1 -> Overture_Build_IsEquiv [] ;
  Equivalences_isequiv_pr1 -> Overture_IsEquiv [] ;
  Equivalences_isequiv_pr1 -> Overture_internal_paths_rew [] ;
  Equivalences_isequiv_pr1 -> Overture_inverse [] ;
  Equivalences_isequiv_pr1 -> Overture_proj1 [] ;
  Trunc_trunc_index_add_minus_two -> Trunc_trunc_index_add [] ;
  Trunc_trunc_index_add_minus_two -> Overture_minus_two [] ;
  Trunc_trunc_index_add_minus_two -> Overture_ap [] ;
  Equivalences_equiv_contr_contr -> Overture_Build_Equiv [] ;
  Equivalences_equiv_contr_contr -> Overture_Equiv [] ;
  Equivalences_equiv_contr_contr -> Equivalences_isequiv_contr_contr [] ;
  Trunc_trunc_index_add -> Overture_trunc_S [] ;
  Trunc_trunc_index_add -> Overture_trunc_index [] ;
  Equivalences_isequiv_contr_contr -> Overture_Build_IsEquiv [] ;
  Equivalences_isequiv_contr_contr -> Overture_IsEquiv [] ;
  Equivalences_isequiv_contr_contr -> Contractible_contr_paths_contr [] ;
  Trunc_trunc_index_to_nat -> Overture_S [] ;
  Trunc_trunc_index_to_nat -> Overture_O [] ;
  Trunc_trunc_index_to_nat -> Overture_nat [] ;
  Trunc_trunc_index_to_nat -> Overture_trunc_index [] ;
  Equivalences_contr_equiv_ -> Overture_Equiv [] ;
  Equivalences_contr_equiv_ -> Equivalences_contr_equiv [] ;
  Trunc_trunc_index_to_num_int -> Trunc_trunc_index_to_int [] ;
  Trunc_trunc_index_to_num_int -> Numeral_IntDec [] ;
  Trunc_trunc_index_to_num_int -> Numeral_int [] ;
  Equivalences_contr_equiv -> Overture_contr [] ;
  Equivalences_contr_equiv -> Overture_Build_Contr [] ;
  Equivalences_contr_equiv -> Equivalences_moveR_equiv_M [] ;
  Trunc_trunc_index_to_int -> Trunc_trunc_index_to_little_uint [] ;
  Trunc_trunc_index_to_int -> Overture_S [] ;
  Trunc_trunc_index_to_int -> Overture_O [] ;
  Trunc_trunc_index_to_int -> Basics_Nat_to_uint [] ;
  Trunc_trunc_index_to_int -> Numerals_Decimal_Neg [] ;
  Trunc_trunc_index_to_int -> Numerals_Decimal_Pos [] ;
  Trunc_trunc_index_to_int -> Numerals_Decimal_int [] ;
  Equivalences_moveL_equiv_V_ -> Overture_Equiv [] ;
  Equivalences_moveL_equiv_V_ -> Equivalences_moveL_equiv_V [] ;
  Trunc_trunc_index_to_little_uint -> Numerals_Decimal_Little_succ [] ;
  Trunc_trunc_index_to_little_uint -> Overture_trunc_index [] ;
  Equivalences_moveL_equiv_V -> Overture_IsEquiv [] ;
  Equivalences_moveL_equiv_V -> Overture_concat [] ;
  Equivalences_moveL_equiv_V -> Overture_inverse [] ;
  Trunc_num_int_to_trunc_index -> Trunc_int_to_trunc_index [] ;
  Trunc_num_int_to_trunc_index -> Numeral_int [] ;
  Equivalences_moveR_equiv_V_ -> Overture_Equiv [] ;
  Equivalences_moveR_equiv_V_ -> Equivalences_moveR_equiv_V [] ;
  Equivalences_moveR_equiv_V -> Overture_IsEquiv [] ;
  Equivalences_moveR_equiv_V -> Overture_concat [] ;
  Trunc_int_to_trunc_index -> Trunc_nat_to_trunc_index [] ;
  Trunc_int_to_trunc_index -> Overture_None [] ;
  Trunc_int_to_trunc_index -> Overture_Some [] ;
  Trunc_int_to_trunc_index -> Overture_option [] ;
  Trunc_int_to_trunc_index -> Basics_Nat_of_uint [] ;
  Trunc_int_to_trunc_index -> Numerals_Decimal_int [] ;
  Trunc_trunc_index_inc__0n -> Trunc_nat_to_trunc_index [] ;
  Trunc_trunc_index_inc__0n -> Trunc_trunc_index_inc__succ [] ;
  Trunc_trunc_index_inc__0n -> Overture_nat_rec [] ;
  Trunc_trunc_index_inc__0n -> Overture_ap [] ;
  Trunc_trunc_index_inc__0n -> Overture_concat [] ;
  Equivalences_moveL_equiv_M_ -> Overture_Equiv [] ;
  Equivalences_moveL_equiv_M_ -> Equivalences_moveL_equiv_M [] ;
  Trunc_nat_to_trunc_index -> Trunc_trunc_index_inc [] ;
  Trunc_nat_to_trunc_index -> Overture_minus_two [] ;
  Equivalences_moveL_equiv_M -> Overture_IsEquiv [] ;
  Equivalences_moveL_equiv_M -> Overture_concat [] ;
  Equivalences_moveL_equiv_M -> Overture_inverse [] ;
  Trunc_trunc_index_inc_agree -> Trunc_trunc_index_inc__succ [] ;
  Trunc_trunc_index_inc_agree -> Trunc_trunc_index_inc [] ;
  Trunc_trunc_index_inc_agree -> Overture_S [] ;
  Trunc_trunc_index_inc_agree -> Overture_ap [] ;
  Trunc_trunc_index_inc_agree -> Overture_concat [] ;
  Trunc_trunc_index_inc_agree -> Overture_inverse [] ;
  Equivalences_moveR_equiv_M_ -> Overture_Equiv [] ;
  Equivalences_moveR_equiv_M_ -> Equivalences_moveR_equiv_M [] ;
  Trunc_trunc_index_inc__succ -> Trunc_trunc_index_inc_ [] ;
  Trunc_trunc_index_inc__succ -> Overture_O [] ;
  Trunc_trunc_index_inc__succ -> Overture_idpath [] ;
  Trunc_trunc_index_inc__succ -> Overture_paths [] ;
  Equivalences_moveR_equiv_M -> Overture_IsEquiv [] ;
  Equivalences_moveR_equiv_M -> Overture_concat [] ;
  Trunc_trunc_index_inc_ -> Overture_nat [] ;
  Trunc_trunc_index_inc_ -> Overture_trunc_S [] ;
  Trunc_trunc_index_inc_ -> Overture_trunc_index [] ;
  Equivalences_equiv_involution -> Equivalences_equiv_adjointify [] ;
  Trunc_trunc_index_inc -> Overture_nat [] ;
  Trunc_trunc_index_inc -> Overture_trunc_S [] ;
  Trunc_trunc_index_inc -> Overture_trunc_index [] ;
  Equivalences_isequiv_involution -> Equivalences_isequiv_adjointify [] ;
  Tactics_issig_isequiv -> Overture_Build_Equiv [] ;
  Tactics_issig_isequiv -> Overture_Equiv [] ;
  Tactics_issig_isequiv -> Overture_Build_IsEquiv [] ;
  Tactics_issig_isequiv -> Overture_exist [] ;
  Tactics_issig_isequiv -> Overture_sig [] ;
  Equivalences_equiv_homotopic_inverse -> Equivalences_equiv_adjointify [] ;
  Tactics_issig_equiv -> Overture_Build_Equiv [] ;
  Tactics_issig_equiv -> Overture_Equiv [] ;
  Tactics_issig_equiv -> Overture_Build_IsEquiv [] ;
  Tactics_issig_equiv -> Overture_exist [] ;
  Tactics_issig_equiv -> Overture_sig [] ;
  Equivalences_equiv_homotopic -> Overture_Build_Equiv [] ;
  Equivalences_equiv_homotopic -> Overture_Equiv [] ;
  Equivalences_equiv_homotopic -> Equivalences_isequiv_homotopic [] ;
  Equivalences_isequiv_homotopic_ -> Overture_Equiv [] ;
  Equivalences_isequiv_homotopic_ -> Equivalences_isequiv_homotopic [] ;
  Tactics_is_global_axiom_propresizing -> Tactics_Build_IsGlobalAxiom [] ;
  Tactics_is_global_axiom_propresizing -> Tactics_IsGlobalAxiom [] ;
  Tactics_is_global_axiom_propresizing -> Overture_PropResizing [] ;
  Equivalences_isequiv_homotopic -> Equivalences_isequiv_adjointify [] ;
  Tactics_is_global_axiom_funext -> Tactics_Build_IsGlobalAxiom [] ;
  Tactics_is_global_axiom_funext -> Tactics_IsGlobalAxiom [] ;
  Tactics_is_global_axiom_funext -> Overture_Funext [] ;
  Equivalences_equiv_adjointify -> Overture_Build_Equiv [] ;
  Equivalences_equiv_adjointify -> Overture_Equiv [] ;
  Equivalences_equiv_adjointify -> Equivalences_isequiv_adjointify [] ;
  Tactics_IsGlobalAxiom_sind -> Tactics_Build_IsGlobalAxiom [] ;
  Tactics_IsGlobalAxiom_sind -> Tactics_IsGlobalAxiom [] ;
  Equivalences_isequiv_adjointify -> Overture_Build_IsEquiv [] ;
  Equivalences_isequiv_adjointify -> Overture_IsEquiv [] ;
  Equivalences_isequiv_adjointify -> Equivalences_is_adjoint_ [] ;
  Tactics_IsGlobalAxiom_rec -> Tactics_IsGlobalAxiom_rect [] ;
  Equivalences_is_adjoint_ -> PathGroupoids_concat_pA1 [] ;
  Equivalences_is_adjoint_ -> PathGroupoids_ap_compose [] ;
  Equivalences_is_adjoint_ -> PathGroupoids_ap_V [] ;
  Equivalences_is_adjoint_ -> PathGroupoids_ap_pp [] ;
  Equivalences_is_adjoint_ -> PathGroupoids_moveR_M1 [] ;
  Equivalences_is_adjoint_ -> PathGroupoids_moveL_Vp [] ;
  Equivalences_is_adjoint_ -> PathGroupoids_concat_pV [] ;
  Equivalences_is_adjoint_ -> PathGroupoids_concat_pp_p [] ;
  Equivalences_is_adjoint_ -> PathGroupoids_concat_p_pp [] ;
  Equivalences_is_adjoint_ -> Overture_pointwise_paths [] ;
  Equivalences_is_adjoint_ -> Overture_internal_paths_rew_r [] ;
  Equivalences_is_adjoint_ -> Overture_internal_paths_rew [] ;
  Tactics_IsGlobalAxiom_ind -> Tactics_Build_IsGlobalAxiom [] ;
  Tactics_IsGlobalAxiom_ind -> Tactics_IsGlobalAxiom [] ;
  Equivalences_equiv_transportDD -> PathGroupoids_transportDD [] ;
  Equivalences_equiv_transportDD -> Overture_Build_Equiv [] ;
  Equivalences_equiv_transportDD -> Overture_Equiv [] ;
  Equivalences_equiv_transportDD -> Equivalences_isequiv_transportD [] ;
  Equivalences_equiv_transportDD -> Equivalences_isequiv_transport [] ;
  Equivalences_equiv_transportDD -> Equivalences_isequiv_compose [] ;
  Tactics_IsGlobalAxiom_rect -> Tactics_Build_IsGlobalAxiom [] ;
  Tactics_IsGlobalAxiom_rect -> Tactics_IsGlobalAxiom [] ;
  Equivalences_equiv_transportD -> Overture_Build_Equiv [] ;
  Equivalences_equiv_transportD -> Overture_Equiv [] ;
  Equivalences_equiv_transportD -> Equivalences_isequiv_transportD [] ;
  Equivalences_isequiv_transportD -> PathGroupoids_transportD [] ;
  Equivalences_isequiv_transportD -> PathGroupoids_transport_Vp [] ;
  Equivalences_isequiv_transportD -> Overture_Build_IsEquiv [] ;
  Equivalences_isequiv_transportD -> Overture_IsEquiv [] ;
  Equivalences_equiv_transport -> Overture_Build_Equiv [] ;
  Equivalences_equiv_transport -> Overture_Equiv [] ;
  Equivalences_equiv_transport -> Equivalences_isequiv_transport [] ;
  Settings_reverse_coercion -> Settings_ReverseCoercionTarget [] ;
  Settings_reverse_coercion -> Settings_ReverseCoercionSource [] ;
  Equivalences_isequiv_transport -> PathGroupoids_transport_pVp [] ;
  Equivalences_isequiv_transport -> Overture_Build_IsEquiv [] ;
  Equivalences_isequiv_transport -> Overture_IsEquiv [] ;
  Equivalences_transitive_equiv -> Overture_Transitive [] ;
  Equivalences_transitive_equiv -> Equivalences_equiv_compose [] ;
  Equivalences_equiv_compose_ -> Equivalences_equiv_compose [] ;
  Predicate_pred_and_unit_r -> Predicate_pred_and_is_meet [] ;
  Predicate_pred_and_unit_r -> Predicate_pred_and_subset_l [] ;
  Predicate_pred_and_unit_r -> Predicate_pred_unit_subset [] ;
  Predicate_pred_and_unit_r -> Predicate_pred_subset_antisymm [] ;
  Predicate_pred_and_unit_r -> Overture_reflexive_fun [] ;
  Predicate_pred_and_unit_r -> Classes_reflexive_pointwise [] ;
  Equivalences_equiv_compose -> Overture_Build_Equiv [] ;
  Equivalences_equiv_compose -> Overture_Equiv [] ;
  Equivalences_equiv_compose -> Equivalences_isequiv_compose [] ;
  Predicate_pred_and_unit_l -> Predicate_pred_and_is_meet [] ;
  Predicate_pred_and_unit_l -> Predicate_pred_and_subset_r [] ;
  Predicate_pred_and_unit_l -> Predicate_pred_unit_subset [] ;
  Predicate_pred_and_unit_l -> Predicate_pred_subset_antisymm [] ;
  Predicate_pred_and_unit_l -> Overture_reflexive_fun [] ;
  Predicate_pred_and_unit_l -> Classes_reflexive_pointwise [] ;
  Equivalences_isequiv_compose -> PathGroupoids_ap02 [] ;
  Equivalences_isequiv_compose -> PathGroupoids_concat2 [] ;
  Equivalences_isequiv_compose -> PathGroupoids_concat_A1p [] ;
  Equivalences_isequiv_compose -> PathGroupoids_ap_compose [] ;
  Equivalences_isequiv_compose -> PathGroupoids_ap_pp [] ;
  Equivalences_isequiv_compose -> Overture_Build_IsEquiv [] ;
  Equivalences_isequiv_compose -> Overture_IsEquiv [] ;
  Equivalences_reflexive_equiv -> Overture_Reflexive [] ;
  Equivalences_reflexive_equiv -> Equivalences_equiv_idmap [] ;
  Predicate_pred_or_comm -> Predicate_pred_or_comm_ [] ;
  Predicate_pred_or_comm -> Predicate_pred_subset_antisymm [] ;
  Predicate_pred_or_comm_ -> Predicate_pred_or [] ;
  Predicate_pred_or_comm_ -> Predicate_pred_subset [] ;
  Predicate_pred_or_comm_ -> Overture_inr [] ;
  Predicate_pred_or_comm_ -> Overture_inl [] ;
  Equivalences_equiv_idmap -> Overture_Build_Equiv [] ;
  Equivalences_equiv_idmap -> Overture_Equiv [] ;
  Equivalences_equiv_idmap -> Equivalences_isequiv_idmap [] ;
  Predicate_pred_or_is_join -> Predicate_pred_or [] ;
  Predicate_pred_or_is_join -> Predicate_pred_subset [] ;
  Equivalences_isequiv_idmap -> Overture_Build_IsEquiv [] ;
  Equivalences_isequiv_idmap -> Overture_IsEquiv [] ;
  Predicate_pred_and_comm -> Predicate_pred_and_comm_ [] ;
  Predicate_pred_and_comm -> Predicate_pred_subset_antisymm [] ;
  Numerals_Decimal_int_of_int -> Numerals_Decimal_int [] ;
  Numerals_Decimal_uint_of_uint -> Numerals_Decimal_uint [] ;
  Predicate_pred_and_comm_ -> Predicate_pred_and [] ;
  Predicate_pred_and_comm_ -> Predicate_pred_subset [] ;
  Predicate_pred_and_comm_ -> Overture_pair [] ;
  Predicate_pred_and_is_meet -> Predicate_pred_and [] ;
  Predicate_pred_and_is_meet -> Predicate_pred_subset [] ;
  Predicate_pred_and_is_meet -> Overture_pair [] ;
  Numerals_Decimal_nztail_int -> Numerals_Decimal_nztail [] ;
  Numerals_Decimal_nztail_int -> Numerals_Decimal_Neg [] ;
  Numerals_Decimal_nztail_int -> Numerals_Decimal_Pos [] ;
  Numerals_Decimal_nztail_int -> Numerals_Decimal_int [] ;
  Predicate_pred_and_subset_r -> Predicate_pred_and [] ;
  Predicate_pred_and_subset_r -> Predicate_pred_subset [] ;
  Predicate_pred_and_subset_r -> Overture_snd [] ;
  Numerals_Decimal_nztail -> Overture_S [] ;
  Numerals_Decimal_nztail -> Overture_O [] ;
  Numerals_Decimal_nztail -> Overture_nat [] ;
  Numerals_Decimal_nztail -> Overture_pair [] ;
  Numerals_Decimal_nztail -> Overture_prod [] ;
  Numerals_Decimal_nztail -> Numerals_Decimal_rev [] ;
  Predicate_pred_and_subset_l -> Predicate_pred_and [] ;
  Predicate_pred_and_subset_l -> Predicate_pred_subset [] ;
  Predicate_pred_and_subset_l -> Overture_fst [] ;
  Numerals_Decimal_app_int -> Numerals_Decimal_app [] ;
  Numerals_Decimal_app_int -> Numerals_Decimal_Neg [] ;
  Numerals_Decimal_app_int -> Numerals_Decimal_Pos [] ;
  Numerals_Decimal_app_int -> Numerals_Decimal_int [] ;
  Predicate_pred_unit_subset -> Predicate_pred_unit [] ;
  Predicate_pred_unit_subset -> Predicate_pred_subset [] ;
  Predicate_pred_unit_subset -> Overture_tt [] ;
  Numerals_Decimal_app -> Numerals_Decimal_rev [] ;
  Numerals_Decimal_rev -> Numerals_Decimal_revapp [] ;
  Numerals_Decimal_rev -> Numerals_Decimal_Nil [] ;
  Predicate_pred_empty_subset -> Predicate_pred_empty [] ;
  Predicate_pred_empty_subset -> Predicate_pred_subset [] ;
  Predicate_pred_empty_subset -> Overture_Empty_rec [] ;
  Numerals_Decimal_revapp -> Numerals_Decimal_D9 [] ;
  Numerals_Decimal_revapp -> Numerals_Decimal_D8 [] ;
  Numerals_Decimal_revapp -> Numerals_Decimal_D7 [] ;
  Numerals_Decimal_revapp -> Numerals_Decimal_D6 [] ;
  Numerals_Decimal_revapp -> Numerals_Decimal_D5 [] ;
  Numerals_Decimal_revapp -> Numerals_Decimal_D4 [] ;
  Numerals_Decimal_revapp -> Numerals_Decimal_D3 [] ;
  Numerals_Decimal_revapp -> Numerals_Decimal_D2 [] ;
  Numerals_Decimal_revapp -> Numerals_Decimal_D1 [] ;
  Numerals_Decimal_revapp -> Numerals_Decimal_D0 [] ;
  Numerals_Decimal_revapp -> Numerals_Decimal_uint [] ;
  Predicate_pred_empty -> Overture_Empty [] ;
  Predicate_pred_unit -> Overture_Unit [] ;
  Numerals_Decimal_opp -> Numerals_Decimal_Neg [] ;
  Numerals_Decimal_opp -> Numerals_Decimal_Pos [] ;
  Numerals_Decimal_opp -> Numerals_Decimal_int [] ;
  Predicate_pred_or -> Overture_sum [] ;
  Numerals_Decimal_norm -> Numerals_Decimal_unorm [] ;
  Numerals_Decimal_norm -> Numerals_Decimal_Neg [] ;
  Numerals_Decimal_norm -> Numerals_Decimal_Pos [] ;
  Numerals_Decimal_norm -> Numerals_Decimal_int [] ;
  Numerals_Decimal_unorm -> Numerals_Decimal_nzhead [] ;
  Numerals_Decimal_unorm -> Numerals_Decimal_D9 [] ;
  Numerals_Decimal_unorm -> Numerals_Decimal_D8 [] ;
  Numerals_Decimal_unorm -> Numerals_Decimal_D7 [] ;
  Numerals_Decimal_unorm -> Numerals_Decimal_D6 [] ;
  Numerals_Decimal_unorm -> Numerals_Decimal_D5 [] ;
  Numerals_Decimal_unorm -> Numerals_Decimal_D4 [] ;
  Numerals_Decimal_unorm -> Numerals_Decimal_D3 [] ;
  Numerals_Decimal_unorm -> Numerals_Decimal_D2 [] ;
  Numerals_Decimal_unorm -> Numerals_Decimal_D1 [] ;
  Numerals_Decimal_unorm -> Numerals_Decimal_D0 [] ;
  Numerals_Decimal_unorm -> Numerals_Decimal_Nil [] ;
  Predicate_pred_and -> Overture_prod [] ;
  Predicate_pred_subset_moveR_equiv -> Predicate_pred_subset [] ;
  Predicate_pred_subset_moveR_equiv -> Overture_transitive_fun [] ;
  Predicate_pred_subset_moveR_equiv -> Overture_reflexive_fun [] ;
  Predicate_pred_subset_moveR_equiv -> Classes_pointwise_moveR_equiv [] ;
  Numerals_Decimal_nzhead -> Numerals_Decimal_uint [] ;
  Predicate_pred_subset_moveL_equiv -> Predicate_pred_subset [] ;
  Predicate_pred_subset_moveL_equiv -> Overture_transitive_fun [] ;
  Predicate_pred_subset_moveL_equiv -> Overture_reflexive_fun [] ;
  Predicate_pred_subset_moveL_equiv -> Classes_pointwise_moveL_equiv [] ;
  Numerals_Decimal_nb_digits -> Overture_S [] ;
  Numerals_Decimal_nb_digits -> Overture_O [] ;
  Numerals_Decimal_nb_digits -> Overture_nat [] ;
  Numerals_Decimal_nb_digits -> Numerals_Decimal_uint [] ;
  Predicate_pred_subset_postcomp -> Predicate_pred_subset [] ;
  Decimal_decimal_sind -> Numerals_Decimal_DecimalExp [] ;
  Decimal_decimal_sind -> Numerals_Decimal_Decimal [] ;
  Decimal_decimal_sind -> Numerals_Decimal_decimal [] ;
  Predicate_pred_subset_precomp -> Predicate_pred_subset [] ;
  Predicate_pred_subset_precomp -> Classes_pointwise_precomp [] ;
  Decimal_decimal_rec -> Decimal_decimal_rect [] ;
  Predicate_pred_subset_antisymm -> Predicate_pred_subset [] ;
  Predicate_pred_subset_antisymm -> Predicate_pred_eq [] ;
  Predicate_pred_subset_antisymm -> Overture_pair [] ;
  Decimal_decimal_ind -> Numerals_Decimal_DecimalExp [] ;
  Decimal_decimal_ind -> Numerals_Decimal_Decimal [] ;
  Decimal_decimal_ind -> Numerals_Decimal_decimal [] ;
  Predicate_pred_subset_pred_eq_ -> Predicate_pred_subset [] ;
  Predicate_pred_subset_pred_eq_ -> Predicate_pred_eq [] ;
  Decimal_decimal_rect -> Numerals_Decimal_DecimalExp [] ;
  Decimal_decimal_rect -> Numerals_Decimal_Decimal [] ;
  Decimal_decimal_rect -> Numerals_Decimal_decimal [] ;
  Numerals_Decimal_DecimalExp -> Numerals_Decimal_int [] ;
  Predicate_pred_subset_pred_eq -> Predicate_pred_subset [] ;
  Predicate_pred_subset_pred_eq -> Predicate_pred_eq [] ;
  Numerals_Decimal_Decimal -> Numerals_Decimal_int [] ;
  Predicate_pred_subset -> Classes_relation_pointwise [] ;
  Numerals_Decimal_decimal -> Numerals_Decimal_int [] ;
  Predicate_pred_eq -> Iff_iff [] ;
  Predicate_pred_eq -> Classes_relation_pointwise [] ;
  Decimal_int_sind -> Numerals_Decimal_Neg [] ;
  Decimal_int_sind -> Numerals_Decimal_Pos [] ;
  Decimal_int_sind -> Numerals_Decimal_int [] ;
  PathGroupoids_ap_transport_pV_idmap -> PathGroupoids_transport_pV [] ;
  PathGroupoids_ap_transport_pV_idmap -> Overture_paths_rect [] ;
  Decimal_int_rec -> Decimal_int_rect [] ;
  PathGroupoids_ap_transport_Vp_idmap -> PathGroupoids_inverse2 [] ;
  PathGroupoids_ap_transport_Vp_idmap -> PathGroupoids_transport_Vp [] ;
  PathGroupoids_ap_transport_Vp_idmap -> Overture_paths_rect [] ;
  Decimal_int_ind -> Numerals_Decimal_Neg [] ;
  Decimal_int_ind -> Numerals_Decimal_Pos [] ;
  Decimal_int_ind -> Numerals_Decimal_int [] ;
  PathGroupoids_ap022 -> PathGroupoids_ap02 [] ;
  PathGroupoids_ap022 -> PathGroupoids_ap011 [] ;
  Decimal_int_rect -> Numerals_Decimal_Neg [] ;
  Decimal_int_rect -> Numerals_Decimal_Pos [] ;
  Decimal_int_rect -> Numerals_Decimal_int [] ;
  PathGroupoids_apD02_pp -> PathGroupoids_apD02 [] ;
  PathGroupoids_apD02_pp -> PathGroupoids_whiskerR [] ;
  PathGroupoids_apD02_pp -> PathGroupoids_whiskerL [] ;
  PathGroupoids_apD02_pp -> PathGroupoids_transport2_p2p [] ;
  PathGroupoids_apD02_pp -> PathGroupoids_concat_p_pp [] ;
  Numerals_Decimal_Neg -> Numerals_Decimal_uint [] ;
  PathGroupoids_apD02_const -> PathGroupoids_apD02 [] ;
  PathGroupoids_apD02_const -> PathGroupoids_ap02 [] ;
  PathGroupoids_apD02_const -> PathGroupoids_whiskerL [] ;
  PathGroupoids_apD02_const -> PathGroupoids_apD_const [] ;
  PathGroupoids_apD02_const -> PathGroupoids_transport2_const [] ;
  PathGroupoids_apD02_const -> PathGroupoids_concat_p_pp [] ;
  Numerals_Decimal_Pos -> Numerals_Decimal_uint [] ;
  PathGroupoids_apD02 -> PathGroupoids_transport2 [] ;
  PathGroupoids_apD02 -> PathGroupoids_concat_1p [] ;
  PathGroupoids_apD02 -> Overture_apD [] ;
  PathGroupoids_apD02 -> Overture_inverse [] ;
  Numerals_Decimal_int -> Numerals_Decimal_uint [] ;
  PathGroupoids_ap02_p2p -> PathGroupoids_ap02 [] ;
  PathGroupoids_ap02_p2p -> PathGroupoids_concat2 [] ;
  PathGroupoids_ap02_p2p -> PathGroupoids_ap_pp [] ;
  PathGroupoids_ap02_p2p -> Overture_inverse [] ;
  Numerals_Decimal_uint_sind -> Numerals_Decimal_D9 [] ;
  Numerals_Decimal_uint_sind -> Numerals_Decimal_D8 [] ;
  Numerals_Decimal_uint_sind -> Numerals_Decimal_D7 [] ;
  Numerals_Decimal_uint_sind -> Numerals_Decimal_D6 [] ;
  Numerals_Decimal_uint_sind -> Numerals_Decimal_D5 [] ;
  Numerals_Decimal_uint_sind -> Numerals_Decimal_D4 [] ;
  Numerals_Decimal_uint_sind -> Numerals_Decimal_D3 [] ;
  Numerals_Decimal_uint_sind -> Numerals_Decimal_D2 [] ;
  Numerals_Decimal_uint_sind -> Numerals_Decimal_D1 [] ;
  Numerals_Decimal_uint_sind -> Numerals_Decimal_D0 [] ;
  Numerals_Decimal_uint_sind -> Numerals_Decimal_Nil [] ;
  Numerals_Decimal_uint_sind -> Numerals_Decimal_uint [] ;
  PathGroupoids_ap02_pp -> PathGroupoids_ap02 [] ;
  PathGroupoids_ap02_pp -> PathGroupoids_ap_pp [] ;
  Numerals_Decimal_uint_rec -> Numerals_Decimal_uint_rect [] ;
  PathGroupoids_ap02 -> Overture_ap [] ;
  Numerals_Decimal_uint_ind -> Numerals_Decimal_D9 [] ;
  Numerals_Decimal_uint_ind -> Numerals_Decimal_D8 [] ;
  Numerals_Decimal_uint_ind -> Numerals_Decimal_D7 [] ;
  Numerals_Decimal_uint_ind -> Numerals_Decimal_D6 [] ;
  Numerals_Decimal_uint_ind -> Numerals_Decimal_D5 [] ;
  Numerals_Decimal_uint_ind -> Numerals_Decimal_D4 [] ;
  Numerals_Decimal_uint_ind -> Numerals_Decimal_D3 [] ;
  Numerals_Decimal_uint_ind -> Numerals_Decimal_D2 [] ;
  Numerals_Decimal_uint_ind -> Numerals_Decimal_D1 [] ;
  Numerals_Decimal_uint_ind -> Numerals_Decimal_D0 [] ;
  Numerals_Decimal_uint_ind -> Numerals_Decimal_Nil [] ;
  Numerals_Decimal_uint_ind -> Numerals_Decimal_uint [] ;
  PathGroupoids_eckmann_hilton -> PathGroupoids_concat_whisker [] ;
  PathGroupoids_eckmann_hilton -> PathGroupoids_whiskerL_1p [] ;
  PathGroupoids_eckmann_hilton -> PathGroupoids_whiskerR_p1 [] ;
  Numerals_Decimal_uint_rect -> Numerals_Decimal_D9 [] ;
  Numerals_Decimal_uint_rect -> Numerals_Decimal_D8 [] ;
  Numerals_Decimal_uint_rect -> Numerals_Decimal_D7 [] ;
  Numerals_Decimal_uint_rect -> Numerals_Decimal_D6 [] ;
  Numerals_Decimal_uint_rect -> Numerals_Decimal_D5 [] ;
  Numerals_Decimal_uint_rect -> Numerals_Decimal_D4 [] ;
  Numerals_Decimal_uint_rect -> Numerals_Decimal_D3 [] ;
  Numerals_Decimal_uint_rect -> Numerals_Decimal_D2 [] ;
  Numerals_Decimal_uint_rect -> Numerals_Decimal_D1 [] ;
  Numerals_Decimal_uint_rect -> Numerals_Decimal_D0 [] ;
  Numerals_Decimal_uint_rect -> Numerals_Decimal_Nil [] ;
  Numerals_Decimal_uint_rect -> Numerals_Decimal_uint [] ;
  PathGroupoids_triangulator -> PathGroupoids_whiskerR [] ;
  PathGroupoids_triangulator -> PathGroupoids_whiskerL [] ;
  PathGroupoids_triangulator -> PathGroupoids_concat_p_pp [] ;
  PathGroupoids_triangulator -> PathGroupoids_concat_1p [] ;
  PathGroupoids_triangulator -> PathGroupoids_concat_p1 [] ;
  PathGroupoids_pentagon -> PathGroupoids_whiskerR [] ;
  PathGroupoids_pentagon -> PathGroupoids_whiskerL [] ;
  PathGroupoids_pentagon -> PathGroupoids_concat_p_pp [] ;
  PathGroupoids_concat_whisker -> PathGroupoids_whiskerR [] ;
  PathGroupoids_concat_whisker -> PathGroupoids_whiskerL [] ;
  PathGroupoids_concat_whisker -> PathGroupoids_concat_1p [] ;
  PathGroupoids_concat_whisker -> Overture_inverse [] ;
  PathGroupoids_concat_concat2 -> PathGroupoids_concat2 [] ;
  PathGroupoids_concat_p_pp_nat_r -> PathGroupoids_whiskerL [] ;
  PathGroupoids_concat_p_pp_nat_r -> PathGroupoids_concat_p_pp [] ;
  PathGroupoids_concat_p_pp_nat_m -> PathGroupoids_whiskerR [] ;
  PathGroupoids_concat_p_pp_nat_m -> PathGroupoids_whiskerL [] ;
  PathGroupoids_concat_p_pp_nat_m -> PathGroupoids_concat_p_pp [] ;
  PathGroupoids_concat_p_pp_nat_l -> PathGroupoids_whiskerR [] ;
  PathGroupoids_concat_p_pp_nat_l -> PathGroupoids_concat_p_pp [] ;
  PathGroupoids_whiskerR_VpR -> PathGroupoids_whiskerR [] ;
  PathGroupoids_whiskerR_VpR -> PathGroupoids_concat_pV_p [] ;
  PathGroupoids_whiskerR_pVR -> PathGroupoids_whiskerR [] ;
  PathGroupoids_whiskerR_pVR -> PathGroupoids_concat_pp_V [] ;
  PathGroupoids_whiskerL_pVL -> PathGroupoids_whiskerL [] ;
  PathGroupoids_whiskerL_pVL -> PathGroupoids_concat_p_Vp [] ;
  PathGroupoids_whiskerL_VpL -> PathGroupoids_whiskerL [] ;
  PathGroupoids_whiskerL_VpL -> PathGroupoids_concat_V_pp [] ;
  PathGroupoids_whiskerR_pp -> PathGroupoids_whiskerR [] ;
  PathGroupoids_whiskerL_pp -> PathGroupoids_whiskerL [] ;
  Decidable_iff_not_prod_ -> Overture_pair [] ;
  Decidable_iff_not_prod_ -> Overture_inr [] ;
  Decidable_iff_not_prod_ -> Overture_inl [] ;
  Decidable_iff_not_prod_ -> Iff_iff [] ;
  Decidable_iff_not_prod_ -> Decidable_not_prod_sum_not [] ;
  Decidable_iff_not_prod_ -> Decidable_dec [] ;
  PathGroupoids_cancel2R -> PathGroupoids_whiskerR_p1 [] ;
  PathGroupoids_cancel2R -> PathGroupoids_whiskerL [] ;
  PathGroupoids_cancel2R -> Overture_paths_rect [] ;
  Decidable_iff_not_prod -> Overture_pair [] ;
  Decidable_iff_not_prod -> Overture_inr [] ;
  Decidable_iff_not_prod -> Overture_inl [] ;
  Decidable_iff_not_prod -> Iff_iff [] ;
  Decidable_iff_not_prod -> Decidable_not_prod_sum_not [] ;
  Decidable_iff_not_prod -> Decidable_dec [] ;
  PathGroupoids_cancel2L -> PathGroupoids_whiskerL_1p [] ;
  PathGroupoids_cancel2L -> PathGroupoids_whiskerR [] ;
  PathGroupoids_cancel2L -> Overture_paths_rect [] ;
  PathGroupoids_whiskerL_1p_1 -> PathGroupoids_whiskerL_1p [] ;
  PathGroupoids_whiskerL_1p_1 -> PathGroupoids_concat_p1 [] ;
  Decidable_not_prod_sum_not -> Overture_not [] ;
  Decidable_not_prod_sum_not -> Overture_prod [] ;
  Decidable_not_prod_sum_not -> Overture_sum [] ;
  PathGroupoids_whiskerR_p1_1 -> PathGroupoids_whiskerR_p1 [] ;
  PathGroupoids_whiskerR_p1_1 -> PathGroupoids_concat_1p [] ;
  Decidable_ishprop_decpaths -> Trunc_path_ishprop [] ;
  Decidable_ishprop_decpaths -> Trunc_hprop_inhabited_contr [] ;
  Decidable_ishprop_decpaths -> Overture_Empty_rect [] ;
  Decidable_ishprop_decpaths -> Overture_path_forall [] ;
  Decidable_ishprop_decpaths -> Overture_inr [] ;
  Decidable_ishprop_decpaths -> Overture_inl [] ;
  Decidable_ishprop_decpaths -> Decidable_hset_pathcoll [] ;
  Decidable_ishprop_decpaths -> Decidable_pathcoll_decpaths [] ;
  PathGroupoids_whiskerL_1p -> PathGroupoids_whiskerL [] ;
  PathGroupoids_whiskerL_1p -> PathGroupoids_concat_1p [] ;
  PathGroupoids_whiskerL_1p -> Overture_inverse [] ;
  Decidable_decidable_paths_refl -> Trunc_path_ishprop [] ;
  Decidable_decidable_paths_refl -> Decidable_hset_pathcoll [] ;
  Decidable_decidable_paths_refl -> Decidable_pathcoll_decpaths [] ;
  Decidable_decidable_paths_refl -> Decidable_decidable_true [] ;
  PathGroupoids_whiskerL_p1 -> PathGroupoids_whiskerL [] ;
  Decidable_hset_decpaths -> Decidable_hset_pathcoll [] ;
  Decidable_hset_decpaths -> Decidable_pathcoll_decpaths [] ;
  PathGroupoids_whiskerR_1p -> PathGroupoids_whiskerR [] ;
  Decidable_pathcoll_hset -> Decidable_collapsible_hprop [] ;
  Decidable_pathcoll_hset -> Decidable_PathCollapsible [] ;
  PathGroupoids_whiskerR_p1 -> PathGroupoids_whiskerR [] ;
  PathGroupoids_whiskerR_p1 -> PathGroupoids_concat_p1 [] ;
  PathGroupoids_whiskerR_p1 -> Overture_inverse [] ;
  Decidable_collapsible_hprop -> Trunc_path_ishprop [] ;
  Decidable_collapsible_hprop -> Decidable_Build_Collapsible [] ;
  Decidable_collapsible_hprop -> Decidable_Collapsible [] ;
  Decidable_hset_pathcoll -> Trunc_hprop_allpath [] ;
  Decidable_hset_pathcoll -> PathGroupoids_whiskerL [] ;
  Decidable_hset_pathcoll -> Decidable_path_coll [] ;
  Decidable_hset_pathcoll -> Decidable_collapse [] ;
  Decidable_hset_pathcoll -> Decidable_wconst [] ;
  PathGroupoids_cancelR -> PathGroupoids_whiskerR [] ;
  PathGroupoids_cancelR -> PathGroupoids_concat_pp_V [] ;
  Decidable_pathcoll_decpaths -> Decidable_collapsible_decidable [] ;
  Decidable_pathcoll_decpaths -> Decidable_PathCollapsible [] ;
  Decidable_pathcoll_decpaths -> Decidable_dec_paths [] ;
  PathGroupoids_cancelL -> PathGroupoids_whiskerL [] ;
  PathGroupoids_cancelL -> PathGroupoids_concat_V_pp [] ;
  PathGroupoids_whiskerR -> PathGroupoids_concat2 [] ;
  Decidable_collapsible_decidable -> Overture_idpath [] ;
  Decidable_collapsible_decidable -> Overture_const [] ;
  Decidable_collapsible_decidable -> Decidable_Build_Collapsible [] ;
  Decidable_collapsible_decidable -> Decidable_Collapsible [] ;
  Decidable_collapsible_decidable -> Decidable_dec [] ;
  PathGroupoids_whiskerL -> PathGroupoids_concat2 [] ;
  Decidable_path_coll -> Decidable_PathCollapsible [] ;
  PathGroupoids_ap_ap_concat_Vp -> PathGroupoids_concat_Vp_inverse2 [] ;
  PathGroupoids_ap_ap_concat_Vp -> PathGroupoids_ap_Vp_concat_Vp [] ;
  Decidable_PathCollapsible -> Decidable_Collapsible [] ;
  Decidable_wconst_collapse -> Decidable_Collapsible [] ;
  PathGroupoids_ap_ap_concat_pV -> PathGroupoids_concat_pV_inverse2 [] ;
  PathGroupoids_ap_ap_concat_pV -> PathGroupoids_ap_pV_concat_pV [] ;
  PathGroupoids_concat_Vp_inverse2 -> PathGroupoids_inverse2 [] ;
  PathGroupoids_concat_Vp_inverse2 -> PathGroupoids_concat2 [] ;
  PathGroupoids_concat_Vp_inverse2 -> PathGroupoids_concat_Vp [] ;
  Decidable_collapse -> Decidable_Collapsible [] ;
  PathGroupoids_concat_pV_inverse2 -> PathGroupoids_inverse2 [] ;
  PathGroupoids_concat_pV_inverse2 -> PathGroupoids_concat2 [] ;
  PathGroupoids_concat_pV_inverse2 -> PathGroupoids_concat_pV [] ;
  Decidable_Collapsible_sind -> Decidable_Build_Collapsible [] ;
  Decidable_Collapsible_sind -> Decidable_Collapsible [] ;
  PathGroupoids_ap_Vp_concat_Vp -> PathGroupoids_ap_Vp [] ;
  PathGroupoids_ap_Vp_concat_Vp -> PathGroupoids_concat_Vp [] ;
  Decidable_Collapsible_rec -> Decidable_Collapsible_rect [] ;
  PathGroupoids_ap_pV_concat_pV -> PathGroupoids_ap_pV [] ;
  PathGroupoids_ap_pV_concat_pV -> PathGroupoids_concat_pV [] ;
  Decidable_Collapsible_ind -> Decidable_Build_Collapsible [] ;
  Decidable_Collapsible_ind -> Decidable_Collapsible [] ;
  PathGroupoids_ap_pp_concat_1p -> PathGroupoids_ap_pp [] ;
  PathGroupoids_ap_pp_concat_1p -> PathGroupoids_concat_1p [] ;
  Decidable_Collapsible_rect -> Decidable_Build_Collapsible [] ;
  Decidable_Collapsible_rect -> Decidable_Collapsible [] ;
  Decidable_Build_Collapsible -> Decidable_WeaklyConstant [] ;
  PathGroupoids_ap_pp_concat_p1 -> PathGroupoids_ap_pp [] ;
  PathGroupoids_ap_pp_concat_p1 -> PathGroupoids_concat_p1 [] ;
  Decidable_Collapsible -> Decidable_WeaklyConstant [] ;
  PathGroupoids_ap_Vp -> PathGroupoids_concat2 [] ;
  PathGroupoids_ap_Vp -> PathGroupoids_ap_V [] ;
  PathGroupoids_ap_Vp -> PathGroupoids_ap_pp [] ;
  Decidable_wconst_through_hprop -> Trunc_path_ishprop [] ;
  Decidable_wconst_through_hprop -> Overture_ap [] ;
  Decidable_wconst_through_hprop -> Decidable_WeaklyConstant [] ;
  PathGroupoids_ap_pV -> PathGroupoids_concat2 [] ;
  PathGroupoids_ap_pV -> PathGroupoids_ap_V [] ;
  PathGroupoids_ap_pV -> PathGroupoids_ap_pp [] ;
  Decidable_wconst -> Decidable_WeaklyConstant [] ;
  PathGroupoids_inverse2 -> Overture_ap [] ;
  PathGroupoids_inverse2 -> Overture_inverse [] ;
  PathGroupoids_concat2_ap_ap -> PathGroupoids_concat2 [] ;
  PathGroupoids_concat2_ap_ap -> Overture_ap [] ;
  PathGroupoids_concat2_ap_ap -> Overture_paths_rect [] ;
  Decidable_WeaklyConstant -> Overture_paths [] ;
  Decidable_decidablepaths_equiv_ -> Overture_Equiv [] ;
  Decidable_decidablepaths_equiv_ -> Decidable_decidablepaths_equiv [] ;
  PathGroupoids_concat2 -> Overture_concat [] ;
  Decidable_decidablepaths_equiv -> Overture_equiv_inv [] ;
  Decidable_decidablepaths_equiv -> Overture_concat [] ;
  Decidable_decidablepaths_equiv -> Overture_inverse [] ;
  Decidable_decidablepaths_equiv -> Overture_inr [] ;
  Decidable_decidablepaths_equiv -> Overture_inl [] ;
  Decidable_decidablepaths_equiv -> Decidable_DecidablePaths [] ;
  PathGroupoids_apD_compose_ -> PathGroupoids_transport_compose [] ;
  PathGroupoids_apD_compose_ -> Overture_apD [] ;
  PathGroupoids_apD_compose_ -> Overture_concat [] ;
  PathGroupoids_apD_compose_ -> Overture_inverse [] ;
  Decidable_decidable_equiv -> Overture_Build_Equiv [] ;
  Decidable_decidable_equiv -> Decidable_decidable_equiv_ [] ;
  PathGroupoids_apD_compose -> PathGroupoids_transport_compose [] ;
  PathGroupoids_apD_compose -> Overture_apD [] ;
  PathGroupoids_apD_compose -> Overture_concat [] ;
  Decidable_decidable_equiv_ -> Iff_iff_equiv [] ;
  Decidable_decidable_equiv_ -> Decidable_decidable_iff [] ;
  PathGroupoids_apD_const -> PathGroupoids_transport_const [] ;
  PathGroupoids_apD_const -> Overture_apD [] ;
  PathGroupoids_apD_const -> Overture_ap [] ;
  PathGroupoids_apD_const -> Overture_concat [] ;
  PathGroupoids_transport_transport -> Overture_transport [] ;
  PathGroupoids_transport_transport -> Overture_idpath [] ;
  Decidable_decidable_iff -> Overture_inr [] ;
  Decidable_decidable_iff -> Overture_inl [] ;
  Decidable_decidable_iff -> Iff_iff [] ;
  Decidable_decidable_iff -> Decidable_Decidable [] ;
  PathGroupoids_transport_compose_path_ap -> PathGroupoids_transport_compose [] ;
  PathGroupoids_transport_compose_path_ap -> PathGroupoids_transport2 [] ;
  PathGroupoids_transport_compose_path_ap -> Overture_concat [] ;
  Decidable_decidable_empty -> Overture_inr [] ;
  Decidable_decidable_empty -> Decidable_Decidable [] ;
  PathGroupoids_transport_idmap_ap -> Overture_ap [] ;
  PathGroupoids_transport_idmap_ap -> Overture_transport [] ;
  Decidable_decidablepaths_hprop -> Overture_istrunc_paths [] ;
  Decidable_decidablepaths_hprop -> Decidable_decidable_contr [] ;
  Decidable_decidablepaths_hprop -> Decidable_DecidablePaths [] ;
  Decidable_decidablepaths_hprop -> Decidable_dec [] ;
  PathGroupoids_transport_precompose -> Overture_ap [] ;
  PathGroupoids_transport_precompose -> Overture_transport [] ;
  Decidable_decidable_contr -> Overture_center [] ;
  Decidable_decidable_contr -> Overture_inl [] ;
  Decidable_decidable_contr -> Decidable_Decidable [] ;
  PathGroupoids_transport_apD_transportD -> PathGroupoids_transportD [] ;
  PathGroupoids_transport_apD_transportD -> Overture_apD [] ;
  Decidable_decide_rel -> Decidable_Decidable [] ;
  PathGroupoids_transportD_compose -> PathGroupoids_transport_compose [] ;
  PathGroupoids_transportD_compose -> PathGroupoids_transportD [] ;
  PathGroupoids_transportD_compose -> Overture_inverse [] ;
  PathGroupoids_transportD_compose -> Overture_composeD [] ;
  Decidable_stable_equiv -> Overture_Build_Equiv [] ;
  Decidable_stable_equiv -> Decidable_stable_equiv_ [] ;
  PathGroupoids_transport_compose -> Overture_ap [] ;
  PathGroupoids_transport_compose -> Overture_transport [] ;
  Decidable_stable_equiv_ -> Iff_iff_equiv [] ;
  Decidable_stable_equiv_ -> Decidable_stable_iff [] ;
  PathGroupoids_transportDD_const -> PathGroupoids_transportDD [] ;
  PathGroupoids_transportDD_const -> Overture_idpath [] ;
  Decidable_stable_iff -> Iff_iff [] ;
  Decidable_stable_iff -> Decidable_Stable [] ;
  PathGroupoids_transportD_const_base -> PathGroupoids_transport_const [] ;
  PathGroupoids_transportD_const_base -> PathGroupoids_transportD [] ;
  PathGroupoids_transportD_const_base -> Overture_inverse [] ;
  Decidable_iff_stable -> Overture_pair [] ;
  Decidable_iff_stable -> Iff_iff [] ;
  Decidable_iff_stable -> Decidable_not_not_unit [] ;
  Decidable_iff_stable -> Decidable_stable [] ;
  PathGroupoids_transportD_const_fiber -> PathGroupoids_transportD [] ;
  PathGroupoids_transportD_const_fiber -> Overture_idpath [] ;
  Decidable_stable_negation -> Decidable_not_not_unit [] ;
  Decidable_stable_negation -> Decidable_Stable [] ;
  PathGroupoids_transport2_const -> PathGroupoids_transport_const [] ;
  PathGroupoids_transport2_const -> PathGroupoids_transport2 [] ;
  PathGroupoids_transport2_const -> PathGroupoids_concat_1p [] ;
  PathGroupoids_transport2_const -> Overture_inverse [] ;
  Decidable_stable_decidable -> Overture_Empty_rect [] ;
  Decidable_stable_decidable -> Decidable_Stable [] ;
  Decidable_stable_decidable -> Decidable_dec [] ;
  PathGroupoids_transport_const -> Overture_transport [] ;
  PathGroupoids_transport_const -> Overture_idpath [] ;
  Decidable_ishprop_stable_hprop -> Trunc_istrunc_forall [] ;
  Decidable_ishprop_stable_hprop -> Decidable_Stable [] ;
  Decidable_not_not_unit -> Overture_not [] ;
  PathGroupoids_apD_V -> PathGroupoids_moveR_transport_V [] ;
  PathGroupoids_apD_V -> Overture_apD [] ;
  Decidable_stable -> Decidable_Stable [] ;
  PathGroupoids_apD_pp -> PathGroupoids_transport_pp [] ;
  PathGroupoids_apD_pp -> Overture_apD [] ;
  PathGroupoids_apD_pp -> Overture_ap [] ;
  PathGroupoids_transport_pV_ap -> PathGroupoids_transport_pV [] ;
  PathGroupoids_transport_pV_ap -> Overture_apD [] ;
  Decidable_Stable -> Overture_not [] ;
  Decidable_dec_paths -> Decidable_DecidablePaths [] ;
  PathGroupoids_ap_transport_pV -> PathGroupoids_transport_pV [] ;
  PathGroupoids_ap_transportD2 -> PathGroupoids_transportD2 [] ;
  PathGroupoids_ap_transportD2 -> Overture_paths_rect [] ;
  Decidable_DecidablePaths -> Overture_paths [] ;
  Decidable_DecidablePaths -> Decidable_Decidable [] ;
  Decidable_decidable_false -> Overture_Empty_rect [] ;
  Decidable_decidable_false -> Overture_inr [] ;
  Decidable_decidable_false -> Overture_inl [] ;
  Decidable_decidable_false -> Decidable_Decidable [] ;
  PathGroupoids_ap_transportD -> PathGroupoids_transportD [] ;
  PathGroupoids_ap_transportD -> Overture_paths_rect [] ;
  Decidable_decidable_true -> Overture_Empty_rect [] ;
  Decidable_decidable_true -> Overture_inr [] ;
  Decidable_decidable_true -> Overture_inl [] ;
  Decidable_decidable_true -> Decidable_Decidable [] ;
  PathGroupoids_ap_transport -> Overture_transport [] ;
  PathGroupoids_ap_transport -> Overture_paths_rect [] ;
  PathGroupoids_transport_pp_1 -> PathGroupoids_transport2 [] ;
  PathGroupoids_transport_pp_1 -> PathGroupoids_transport_pp [] ;
  PathGroupoids_transport_pp_1 -> PathGroupoids_concat_p1 [] ;
  PathGroupoids_transport_pp_1 -> Overture_paths_rect [] ;
  Decidable_dec -> Decidable_Decidable [] ;
  PathGroupoids_concat_AT -> PathGroupoids_transport2 [] ;
  PathGroupoids_concat_AT -> PathGroupoids_concat_p1_1p [] ;
  Decidable_Decidable -> Overture_not [] ;
  Decidable_Decidable -> Overture_sum [] ;
  PathGroupoids_transport2_V -> PathGroupoids_transport2 [] ;
  PathGroupoids_transport2_V -> Overture_inverse [] ;
  Contractible_Contr_ind -> Overture_tt [] ;
  Contractible_Contr_ind -> Overture_Unit [] ;
  Contractible_Contr_ind -> Overture_Build_Contr [] ;
  Contractible_Contr_ind -> Overture_IsTrunc_internal [] ;
  PathGroupoids_transport2_p2p -> PathGroupoids_transport2 [] ;
  PathGroupoids_transport2_p2p -> Overture_concat [] ;
  Contractible_contr_change_center -> Overture_Build_Contr [] ;
  Contractible_contr_change_center -> Contractible_path_contr [] ;
  PathGroupoids_transport2_is_ap10 -> PathGroupoids_transport2 [] ;
  PathGroupoids_transport2_is_ap10 -> Overture_ap10 [] ;
  Contractible_contr_retract -> Overture_contr [] ;
  Contractible_contr_retract -> Overture_Build_Contr [] ;
  Contractible_contr_retract -> Overture_ap [] ;
  Contractible_contr_retract -> Overture_concat [] ;
  PathGroupoids_transport2 -> Overture_ap [] ;
  PathGroupoids_transport2 -> Overture_transport [] ;
  Contractible_contr_dom_equiv -> Overture_contr [] ;
  Contractible_contr_dom_equiv -> Overture_ap [] ;
  Contractible_contr_dom_equiv -> Overture_concat [] ;
  Contractible_contr_dom_equiv -> Overture_inverse [] ;
  PathGroupoids_ap_transport011 -> PathGroupoids_transport011 [] ;
  PathGroupoids_ap_transport011 -> Overture_idpath [] ;
  Contractible_ap_pr1_path_basedpaths_ -> Overture_ap [] ;
  Contractible_ap_pr1_path_basedpaths_ -> Overture_inverse [] ;
  Contractible_ap_pr1_path_basedpaths_ -> Overture_proj1 [] ;
  Contractible_ap_pr1_path_basedpaths_ -> Contractible_path_basedpaths_ [] ;
  PathGroupoids_transport011_compose -> PathGroupoids_transport011 [] ;
  PathGroupoids_transport011_compose -> Overture_ap [] ;
  Contractible_ap_pr1_path_basedpaths -> Overture_ap [] ;
  Contractible_ap_pr1_path_basedpaths -> Overture_proj1 [] ;
  Contractible_ap_pr1_path_basedpaths -> Contractible_path_basedpaths [] ;
  PathGroupoids_transport011_pp -> PathGroupoids_transport011 [] ;
  PathGroupoids_transport011_pp -> Overture_concat [] ;
  Contractible_ap_pr1_path_contr_basedpaths_ -> Overture_ap [] ;
  Contractible_ap_pr1_path_contr_basedpaths_ -> Overture_proj1 [] ;
  Contractible_ap_pr1_path_contr_basedpaths_ -> Contractible_contr_basedpaths_ [] ;
  Contractible_ap_pr1_path_contr_basedpaths_ -> Contractible_path_contr [] ;
  PathGroupoids_transport011 -> Overture_transport [] ;
  Contractible_ap_pr1_path_contr_basedpaths -> Overture_ap [] ;
  Contractible_ap_pr1_path_contr_basedpaths -> Overture_proj1 [] ;
  Contractible_ap_pr1_path_contr_basedpaths -> Contractible_contr_basedpaths [] ;
  Contractible_ap_pr1_path_contr_basedpaths -> Contractible_path_contr [] ;
  Contractible_contr_basedpaths_ -> Overture_Build_Contr [] ;
  Contractible_contr_basedpaths_ -> Overture_IsTrunc_internal [] ;
  Contractible_contr_basedpaths_ -> Contractible_path_basedpaths_ [] ;
  PathGroupoids_apD011 -> PathGroupoids_transportD [] ;
  PathGroupoids_apD011 -> Overture_idpath [] ;
  Contractible_path_basedpaths_ -> Overture_idpath [] ;
  Contractible_path_basedpaths_ -> Overture_paths [] ;
  Contractible_path_basedpaths_ -> Overture_exist [] ;
  Contractible_path_basedpaths_ -> Overture_sig [] ;
  PathGroupoids_ap01D1 -> Overture_transport [] ;
  PathGroupoids_ap01D1 -> Overture_idpath [] ;
  Contractible_contr_basedpaths_etashort -> Contractible_contr_basedpaths [] ;
  PathGroupoids_ap011D -> Overture_transport [] ;
  PathGroupoids_ap011D -> Overture_idpath [] ;
  Contractible_contr_basedpaths -> Overture_Build_Contr [] ;
  Contractible_contr_basedpaths -> Overture_IsTrunc_internal [] ;
  Contractible_contr_basedpaths -> Contractible_path_basedpaths [] ;
  PathGroupoids_ap011_is_ap -> PathGroupoids_ap011 [] ;
  PathGroupoids_ap011_is_ap -> PathGroupoids_concat_1p [] ;
  PathGroupoids_ap011_is_ap -> Overture_inverse [] ;
  Contractible_path_basedpaths -> Overture_idpath [] ;
  Contractible_path_basedpaths -> Overture_paths [] ;
  Contractible_path_basedpaths -> Overture_exist [] ;
  Contractible_path_basedpaths -> Overture_sig [] ;
  PathGroupoids_ap011_compose_ -> PathGroupoids_ap011 [] ;
  PathGroupoids_ap011_compose_ -> PathGroupoids_ap_compose [] ;
  Contractible_path2_contr -> Contractible_contr_paths_contr [] ;
  PathGroupoids_ap011_compose -> PathGroupoids_ap011 [] ;
  PathGroupoids_ap011_compose -> PathGroupoids_ap_compose [] ;
  Contractible_contr_paths_contr -> PathGroupoids_concat_Vp [] ;
  Contractible_contr_paths_contr -> Overture_Build_Contr [] ;
  Contractible_contr_paths_contr -> Contractible_path_contr [] ;
  PathGroupoids_ap011_pp -> PathGroupoids_ap011 [] ;
  PathGroupoids_ap011_pp -> PathGroupoids_ap_pp [] ;
  Contractible_path_contr -> Overture_contr [] ;
  Contractible_path_contr -> Overture_concat [] ;
  Contractible_path_contr -> Overture_inverse [] ;
  PathGroupoids_ap011_V -> PathGroupoids_ap011 [] ;
  PathGroupoids_ap011_V -> PathGroupoids_ap_V [] ;
  PathGroupoids_ap011 -> Overture_ap [] ;
  Classes_antisymmetry -> Classes_AntiSymmetric [] ;
  PathGroupoids_transportDD -> PathGroupoids_transportD [] ;
  Classes_AntiSymmetric -> Overture_paths [] ;
  PathGroupoids_transportD2 -> Overture_transport [] ;
  Classes_isinj_cancelL -> Overture_ap [] ;
  Classes_isinj_cancelL -> Classes_injective [] ;
  PathGroupoids_transportD -> Overture_transport [] ;
  Classes_isinj_compose -> Classes_injective [] ;
  Classes_isinj_idmap -> Classes_IsInjective [] ;
  PathGroupoids_ap11_is_ap10_ap01 -> Overture_ap11 [] ;
  PathGroupoids_ap11_is_ap10_ap01 -> Overture_ap10 [] ;
  PathGroupoids_ap11_is_ap10_ap01 -> Overture_ap [] ;
  PathGroupoids_ap11_is_ap10_ap01 -> Overture_concat [] ;
  PathGroupoids_ap11_is_ap10_ap01 -> Overture_paths_rect [] ;
  PathGroupoids_paths_ind_r_transport -> Overture_transport [] ;
  PathGroupoids_paths_ind_r_transport -> Overture_inverse [] ;
  PathGroupoids_paths_ind_r_transport -> Overture_paths_ind_r [] ;
  Classes_neq_isinj -> Overture_not [] ;
  Classes_neq_isinj -> Classes_injective [] ;
  PathGroupoids_paths_ind_transport -> Overture_transport [] ;
  PathGroupoids_paths_ind_transport -> Overture_paths_ind [] ;
  Classes_injective -> Classes_IsInjective [] ;
  PathGroupoids_paths_rect_transport -> Overture_transport [] ;
  PathGroupoids_paths_rect_transport -> Overture_paths_rect [] ;
  Classes_IsInjective -> Overture_paths [] ;
  Classes_pointwise_moveL_equiv -> Overture_transitive_flip [] ;
  Classes_pointwise_moveL_equiv -> Overture_reflexive_flip [] ;
  Classes_pointwise_moveL_equiv -> Classes_pointwise_moveR_equiv [] ;
  PathGroupoids_moveL_transport_V_1 -> PathGroupoids_transport_Vp [] ;
  PathGroupoids_moveL_transport_V_1 -> PathGroupoids_moveL_transport_V [] ;
  Classes_pointwise_moveR_equiv -> Overture_equiv_fun [] ;
  Classes_pointwise_moveR_equiv -> Overture_eissect [] ;
  Classes_pointwise_moveR_equiv -> Overture_related_reflexive_path [] ;
  Classes_pointwise_moveR_equiv -> Overture_Transitive [] ;
  Classes_pointwise_moveR_equiv -> Classes_relation_pointwise [] ;
  PathGroupoids_ap_transport_transport_pV -> PathGroupoids_transport_pV [] ;
  PathGroupoids_ap_transport_transport_pV -> PathGroupoids_moveL_transport_V [] ;
  PathGroupoids_transport_VpV -> PathGroupoids_transport_Vp [] ;
  PathGroupoids_transport_VpV -> PathGroupoids_transport_pV [] ;
  Classes_pointwise_precomp -> Classes_relation_pointwise [] ;
  PathGroupoids_transport_pVp -> PathGroupoids_transport_Vp [] ;
  PathGroupoids_transport_pVp -> PathGroupoids_transport_pV [] ;
  Classes_symmetric_pointwise -> Overture_Symmetric [] ;
  Classes_symmetric_pointwise -> Classes_relation_pointwise [] ;
  PathGroupoids_transport_p_pp -> PathGroupoids_transport_pp [] ;
  PathGroupoids_transport_p_pp -> PathGroupoids_concat_p_pp [] ;
  PathGroupoids_transport_p_pp -> Overture_ap [] ;
  Classes_transitive_pointwise -> Overture_Transitive [] ;
  Classes_transitive_pointwise -> Classes_relation_pointwise [] ;
  PathGroupoids_transport_Vp -> PathGroupoids_transport_pp [] ;
  PathGroupoids_transport_Vp -> PathGroupoids_concat_pV [] ;
  PathGroupoids_transport_Vp -> Overture_ap [] ;
  Classes_reflexive_pointwise -> Overture_Reflexive [] ;
  Classes_reflexive_pointwise -> Classes_relation_pointwise [] ;
  PathGroupoids_transport_pV -> PathGroupoids_transport_pp [] ;
  PathGroupoids_transport_pV -> PathGroupoids_concat_Vp [] ;
  PathGroupoids_transport_pV -> Overture_ap [] ;
  Classes_relation_pointwise -> Overture_Relation [] ;
  PathGroupoids_transport_pp -> Overture_transport [] ;
  PathGroupoids_transport_pp -> Overture_concat [] ;
  PathGroupoids_transport_1 -> Overture_transport [] ;
  PathGroupoids_transport_1 -> Overture_idpath [] ;
  PathGroupoids_ap100 -> Overture_ap10 [] ;
  PathGroupoids_ap10_ap_postcompose -> PathGroupoids_apD10_ap_postcompose [] ;
  PathGroupoids_ap10_ap_postcompose -> Overture_ap10 [] ;
  PathGroupoids_apD10_ap_postcompose -> Overture_apD10 [] ;
  PathGroupoids_apD10_ap_postcompose -> Overture_ap [] ;
  PathGroupoids_ap10_ap_precompose -> PathGroupoids_apD10_ap_precompose [] ;
  PathGroupoids_ap10_ap_precompose -> Overture_ap10 [] ;
  PathGroupoids_apD10_ap_precompose -> Overture_apD10 [] ;
  PathGroupoids_apD10_ap_precompose -> Overture_ap [] ;
  PathGroupoids_apD10_ap_precompose -> Overture_composeD [] ;
  PathGroupoids_ap10_V -> PathGroupoids_apD10_V [] ;
  PathGroupoids_ap10_V -> Overture_ap10 [] ;
  PathGroupoids_ap10_pp -> PathGroupoids_apD10_pp [] ;
  PathGroupoids_ap10_pp -> Overture_ap10 [] ;
  PathGroupoids_ap10_1 -> Overture_ap10 [] ;
  PathGroupoids_apD10_V -> Overture_apD10 [] ;
  PathGroupoids_apD10_V -> Overture_inverse [] ;
  PathGroupoids_apD10_pp -> Overture_apD10 [] ;
  PathGroupoids_apD10_pp -> Overture_concat [] ;
  PathGroupoids_apD10_1 -> Overture_apD10 [] ;
  PathGroupoids_concat_p1_1 -> PathGroupoids_inv_V [] ;
  PathGroupoids_concat_p1_1 -> PathGroupoids_concat_p1 [] ;
  PathGroupoids_concat_p1_1 -> Overture_ap [] ;
  PathGroupoids_concat_p1_1 -> Overture_internal_paths_rew [] ;
  PathGroupoids_concat_1p_1 -> PathGroupoids_inv_V [] ;
  PathGroupoids_concat_1p_1 -> PathGroupoids_concat_1p [] ;
  PathGroupoids_concat_1p_1 -> Overture_ap [] ;
  PathGroupoids_concat_1p_1 -> Overture_internal_paths_rew [] ;
  PathGroupoids_concat_p_A1p -> PathGroupoids_concat_1p [] ;
  PathGroupoids_concat_p_A1p -> Overture_ap [] ;
  PathGroupoids_concat_p_A1p -> Overture_inverse [] ;
  PathGroupoids_concat_pp_A1 -> Overture_ap [] ;
  PathGroupoids_concat_pp_A1 -> Overture_concat [] ;
  PathGroupoids_concat_pp_A1 -> Overture_paths_rect [] ;
  PathGroupoids_concat_A1_pp -> PathGroupoids_concat_1p [] ;
  PathGroupoids_concat_A1_pp -> Overture_ap [] ;
  PathGroupoids_concat_pA1_p -> Overture_ap [] ;
  PathGroupoids_concat_pA1_p -> Overture_concat [] ;
  PathGroupoids_concat_pA1_p -> Overture_paths_rect [] ;
  PathGroupoids_concat_pp_A1p -> Overture_ap [] ;
  PathGroupoids_concat_pp_A1p -> Overture_concat [] ;
  PathGroupoids_concat_pp_A1p -> Overture_paths_rect [] ;
  PathGroupoids_concat_pA1_pp -> Overture_ap [] ;
  PathGroupoids_concat_pA1_pp -> Overture_concat [] ;
  PathGroupoids_concat_pA1_pp -> Overture_paths_rect [] ;
  PathGroupoids_concat_A_pp -> PathGroupoids_concat_1p [] ;
  PathGroupoids_concat_A_pp -> Overture_ap [] ;
  PathGroupoids_concat_pA_p -> Overture_ap [] ;
  PathGroupoids_concat_pA_p -> Overture_concat [] ;
  PathGroupoids_concat_pA_p -> Overture_paths_rect [] ;
  PathGroupoids_concat_pA_pp -> Overture_ap [] ;
  PathGroupoids_concat_pA_pp -> Overture_concat [] ;
  PathGroupoids_concat_pA_pp -> Overture_paths_rect [] ;
  PathGroupoids_apD_homotopic -> PathGroupoids_apD_natural [] ;
  PathGroupoids_apD_homotopic -> PathGroupoids_moveL_pV [] ;
  PathGroupoids_apD_natural -> PathGroupoids_ap_idmap [] ;
  PathGroupoids_apD_natural -> PathGroupoids_concat_1p [] ;
  PathGroupoids_apD_natural -> PathGroupoids_concat_p1 [] ;
  PathGroupoids_apD_natural -> Overture_apD [] ;
  PathGroupoids_apD_natural -> Overture_inverse [] ;
  PathGroupoids_concat_pA1 -> PathGroupoids_concat_p1_1p [] ;
  PathGroupoids_concat_pA1 -> Overture_ap [] ;
  PathGroupoids_ap_homotopic_id -> PathGroupoids_concat_A1p [] ;
  PathGroupoids_ap_homotopic_id -> PathGroupoids_moveL_pV [] ;
  PathGroupoids_concat_A1p -> PathGroupoids_concat_1p_p1 [] ;
  PathGroupoids_concat_A1p -> Overture_ap [] ;
  PathGroupoids_ap_homotopic -> PathGroupoids_concat_Ap [] ;
  PathGroupoids_ap_homotopic -> PathGroupoids_moveL_pV [] ;
  PathGroupoids_concat_Ap -> PathGroupoids_concat_1p_p1 [] ;
  PathGroupoids_concat_Ap -> Overture_ap [] ;
  PathGroupoids_ap_const -> Overture_ap [] ;
  PathGroupoids_ap_compose_ -> Overture_ap [] ;
  PathGroupoids_ap_compose -> Overture_ap [] ;
  PathGroupoids_ap_idmap -> Overture_ap [] ;
  PathGroupoids_ap_V -> Overture_ap [] ;
  PathGroupoids_ap_V -> Overture_inverse [] ;
  PathGroupoids_inverse_ap -> Overture_ap [] ;
  PathGroupoids_inverse_ap -> Overture_inverse [] ;
  PathGroupoids_ap_pp_p -> PathGroupoids_concat_pp_p [] ;
  PathGroupoids_ap_pp_p -> Overture_ap [] ;
  PathGroupoids_ap_p_pp -> PathGroupoids_concat_p_pp [] ;
  PathGroupoids_ap_p_pp -> Overture_ap [] ;
  PathGroupoids_ap_pp -> Overture_ap [] ;
  PathGroupoids_ap_pp -> Overture_concat [] ;
  PathGroupoids_apD_1 -> Overture_apD [] ;
  PathGroupoids_ap_1 -> Overture_ap [] ;
  PathGroupoids_moveL_transport_p_V -> PathGroupoids_moveL_transport_p [] ;
  PathGroupoids_moveL_transport_p_V -> PathGroupoids_moveR_transport_p [] ;
  PathGroupoids_moveL_transport_V_V -> PathGroupoids_moveL_transport_V [] ;
  PathGroupoids_moveL_transport_V_V -> PathGroupoids_moveR_transport_V [] ;
  PathGroupoids_moveR_transport_V_V -> PathGroupoids_moveL_transport_V [] ;
  PathGroupoids_moveR_transport_V_V -> PathGroupoids_moveR_transport_V [] ;
  PathGroupoids_moveR_transport_p_V -> PathGroupoids_moveL_transport_p [] ;
  PathGroupoids_moveR_transport_p_V -> PathGroupoids_moveR_transport_p [] ;
  PathGroupoids_moveL_transport_p -> Overture_transport [] ;
  PathGroupoids_moveL_transport_p -> Overture_inverse [] ;
  PathGroupoids_moveL_transport_V -> Overture_transport [] ;
  PathGroupoids_moveL_transport_V -> Overture_inverse [] ;
  PathGroupoids_moveR_transport_V -> Overture_transport [] ;
  PathGroupoids_moveR_transport_V -> Overture_inverse [] ;
  PathGroupoids_moveR_transport_p -> Overture_transport [] ;
  PathGroupoids_moveR_transport_p -> Overture_inverse [] ;
  PathGroupoids_moveR_V1 -> PathGroupoids_concat_1p [] ;
  PathGroupoids_moveR_V1 -> PathGroupoids_concat_r [] ;
  PathGroupoids_moveR_V1 -> Overture_inverse [] ;
  PathGroupoids_moveR_1V -> PathGroupoids_concat_p1 [] ;
  PathGroupoids_moveR_1V -> PathGroupoids_concat_r [] ;
  PathGroupoids_moveR_1V -> Overture_inverse [] ;
  PathGroupoids_moveR_1M -> PathGroupoids_concat_p1 [] ;
  PathGroupoids_moveR_1M -> PathGroupoids_concat_r [] ;
  PathGroupoids_moveR_1M -> Overture_inverse [] ;
  PathGroupoids_moveR_M1 -> PathGroupoids_concat_1p [] ;
  PathGroupoids_moveR_M1 -> PathGroupoids_concat_r [] ;
  PathGroupoids_moveR_M1 -> Overture_inverse [] ;
  PathGroupoids_moveL_V1 -> PathGroupoids_concat_1p [] ;
  PathGroupoids_moveL_V1 -> PathGroupoids_concat_l [] ;
  PathGroupoids_moveL_V1 -> Overture_inverse [] ;
  PathGroupoids_moveL_1V -> PathGroupoids_concat_p1 [] ;
  PathGroupoids_moveL_1V -> PathGroupoids_concat_l [] ;
  PathGroupoids_moveL_1V -> Overture_inverse [] ;
  PathGroupoids_moveL_M1 -> PathGroupoids_concat_1p [] ;
  PathGroupoids_moveL_M1 -> PathGroupoids_concat_l [] ;
  PathGroupoids_moveL_M1 -> Overture_inverse [] ;
  PathGroupoids_moveL_1M -> PathGroupoids_concat_p1 [] ;
  PathGroupoids_moveL_1M -> PathGroupoids_concat_l [] ;
  PathGroupoids_moveL_1M -> Overture_inverse [] ;
  PathGroupoids_moveL_pV -> PathGroupoids_concat_p1 [] ;
  PathGroupoids_moveL_pV -> PathGroupoids_concat_lr [] ;
  PathGroupoids_moveL_pV -> Overture_inverse [] ;
  PathGroupoids_moveL_Vp -> PathGroupoids_concat_1p [] ;
  PathGroupoids_moveL_Vp -> PathGroupoids_concat_lr [] ;
  PathGroupoids_moveL_Vp -> Overture_inverse [] ;
  PathGroupoids_moveL_pM -> PathGroupoids_concat_p1 [] ;
  PathGroupoids_moveL_pM -> PathGroupoids_concat_lr [] ;
  PathGroupoids_moveL_pM -> Overture_inverse [] ;
  PathGroupoids_moveL_Mp -> PathGroupoids_concat_1p [] ;
  PathGroupoids_moveL_Mp -> PathGroupoids_concat_lr [] ;
  PathGroupoids_moveL_Mp -> Overture_inverse [] ;
  PathGroupoids_moveR_pV -> PathGroupoids_concat_p1 [] ;
  PathGroupoids_moveR_pV -> PathGroupoids_concat_lr [] ;
  PathGroupoids_moveR_pV -> Overture_inverse [] ;
  PathGroupoids_moveR_Vp -> PathGroupoids_concat_1p [] ;
  PathGroupoids_moveR_Vp -> PathGroupoids_concat_lr [] ;
  PathGroupoids_moveR_Vp -> Overture_inverse [] ;
  PathGroupoids_moveR_pM -> PathGroupoids_concat_p1 [] ;
  PathGroupoids_moveR_pM -> PathGroupoids_concat_lr [] ;
  PathGroupoids_moveR_pM -> Overture_inverse [] ;
  PathGroupoids_moveR_Mp -> PathGroupoids_concat_1p [] ;
  PathGroupoids_moveR_Mp -> PathGroupoids_concat_lr [] ;
  PathGroupoids_moveR_Mp -> Overture_inverse [] ;
  PathGroupoids_inv_V -> Overture_inverse [] ;
  PathGroupoids_inv_VV -> Overture_concat [] ;
  PathGroupoids_inv_VV -> Overture_inverse [] ;
  PathGroupoids_inv_pV -> Overture_concat [] ;
  PathGroupoids_inv_pV -> Overture_inverse [] ;
  PathGroupoids_inv_Vp -> Overture_concat [] ;
  PathGroupoids_inv_Vp -> Overture_inverse [] ;
  PathGroupoids_inv_pp -> Overture_concat [] ;
  PathGroupoids_inv_pp -> Overture_inverse [] ;
  PathGroupoids_concat_pV_p -> Overture_concat [] ;
  PathGroupoids_concat_pV_p -> Overture_inverse [] ;
  PathGroupoids_concat_pp_V -> Overture_concat [] ;
  PathGroupoids_concat_pp_V -> Overture_inverse [] ;
  PathGroupoids_concat_p_Vp -> Overture_concat [] ;
  PathGroupoids_concat_p_Vp -> Overture_inverse [] ;
  PathGroupoids_concat_V_pp -> Overture_concat [] ;
  PathGroupoids_concat_V_pp -> Overture_inverse [] ;
  PathGroupoids_concat_Vp -> Overture_concat [] ;
  PathGroupoids_concat_Vp -> Overture_inverse [] ;
  PathGroupoids_concat_pV -> Overture_concat [] ;
  PathGroupoids_concat_pV -> Overture_inverse [] ;
  PathGroupoids_concat_pp_p -> Overture_concat [] ;
  PathGroupoids_concat_p_pp -> Overture_concat [] ;
  PathGroupoids_concat_1p_p1 -> PathGroupoids_concat_1p [] ;
  PathGroupoids_concat_1p_p1 -> PathGroupoids_concat_p1 [] ;
  PathGroupoids_concat_1p_p1 -> Overture_inverse [] ;
  PathGroupoids_concat_p1_1p -> PathGroupoids_concat_1p [] ;
  PathGroupoids_concat_p1_1p -> PathGroupoids_concat_p1 [] ;
  PathGroupoids_concat_p1_1p -> Overture_inverse [] ;
  PathGroupoids_concat_1p -> Overture_concat [] ;
  PathGroupoids_concat_p1 -> Overture_concat [] ;
  PathGroupoids_concat_lr -> Overture_concat [] ;
  PathGroupoids_concat_r -> Overture_concat [] ;
  PathGroupoids_concat_l -> Overture_concat [] ;
  Overture_issmall_hprop -> Overture_PropResizing [] ;
  Overture_issmall_hprop -> Overture_IsSmall [] ;
  Overture_issmall_hprop -> Overture_IsTrunc_internal [] ;
  Overture_equiv_smalltype -> Overture_IsSmall [] ;
  Overture_smalltype -> Overture_IsSmall [] ;
  Overture_Build_IsSmall -> Overture_Equiv [] ;
  Overture_IsSmall -> Overture_Equiv [] ;
  Overture_hfiber -> Overture_paths [] ;
  Overture_hfiber -> Overture_sig [] ;
  Overture_ispointed_type -> Overture_pType [] ;
  Overture_pointed_type -> Overture_pType [] ;
  Overture_Build_pType -> Overture_IsPointed [] ;
  Overture_pType -> Overture_IsPointed [] ;
  Overture_point -> Overture_IsPointed [] ;
  Overture_Unit_rect -> Overture_Unit_ind [] ;
  Overture_Unit_rec -> Overture_Unit [] ;
  Overture_Unit_ind -> Overture_tt [] ;
  Overture_Unit_ind -> Overture_Unit [] ;
  Overture_asymmetry -> Overture_Asymmetric [] ;
  Overture_Asymmetric -> Overture_complement [] ;
  Overture_irreflexivity -> Overture_Irreflexive [] ;
  Overture_Irreflexive -> Overture_complement [] ;
  Overture_Irreflexive -> Overture_Reflexive [] ;
  Overture_complement -> Overture_not [] ;
  Overture_complement -> Overture_Relation [] ;
  Overture_symmetric_neq -> Overture_not [] ;
  Overture_symmetric_neq -> Overture_inverse [] ;
  Overture_not -> Overture_Empty [] ;
  Overture_Empty_rect -> Overture_Empty_ind [] ;
  Overture_Empty_rec -> Overture_Empty [] ;
  Overture_Empty_ind -> Overture_Empty [] ;
  Overture_nat_rec -> Overture_S [] ;
  Overture_nat_rec -> Overture_O [] ;
  Overture_nat_rec -> Overture_nat [] ;
  Overture_nat_rect -> Overture_S [] ;
  Overture_nat_rect -> Overture_O [] ;
  Overture_nat_rect -> Overture_nat [] ;
  Overture_nat_ind -> Overture_S [] ;
  Overture_nat_ind -> Overture_O [] ;
  Overture_nat_ind -> Overture_nat [] ;
  Overture_istrunc_fun -> Overture_istrunc_codomain_fam [] ;
  Overture_istrunc_fun -> Overture_contr [] ;
  Overture_istrunc_codomain_fam -> Overture_center [] ;
  Overture_contr -> Overture_center [] ;
  Overture_center -> Overture_istrunc_unfold [] ;
  Overture_istrunc_paths -> Overture_istrunc_unfold [] ;
  Overture_equiv_istrunc_unfold -> Overture_isequiv_istrunc_unfold [] ;
  Overture_equiv_istrunc_unfold -> Overture_Build_Equiv [] ;
  Overture_equiv_istrunc_unfold -> Overture_Equiv [] ;
  Overture_isequiv_istrunc_unfold -> Overture_istrunc_unfold [] ;
  Overture_isequiv_istrunc_unfold -> Overture_istrunc_S [] ;
  Overture_isequiv_istrunc_unfold -> Overture_Build_Contr [] ;
  Overture_isequiv_istrunc_unfold -> Overture_Build_IsEquiv [] ;
  Overture_isequiv_istrunc_unfold -> Overture_IsEquiv [] ;
  Overture_istrunc_unfold -> Overture_IsTrunc_unfolded [] ;
  Overture_istrunc_unfold -> Overture_exist [] ;
  Overture_IsTrunc_unfolded -> Overture_IsTrunc_internal [] ;
  Overture_IsTrunc_unfolded -> Overture_sig [] ;
  Overture_IsTrunc_internal_rect -> Overture_IsTrunc_internal_ind [] ;
  Overture_IsTrunc_internal_rec -> Overture_IsTrunc_internal [] ;
  Overture_IsTrunc_internal_ind -> Overture_istrunc_S [] ;
  Overture_IsTrunc_internal_ind -> Overture_Build_Contr [] ;
  Overture_IsTrunc_internal_ind -> Overture_IsTrunc_internal [] ;
  Overture_istrunc_S -> Overture_trunc_S [] ;
  Overture_istrunc_S -> Overture_minus_two [] ;
  Overture_istrunc_S -> Overture_trunc_index [] ;
  Overture_istrunc_S -> Overture_paths [] ;
  Overture_Build_Contr -> Overture_trunc_S [] ;
  Overture_Build_Contr -> Overture_minus_two [] ;
  Overture_Build_Contr -> Overture_trunc_index [] ;
  Overture_Build_Contr -> Overture_paths [] ;
  Overture_IsTrunc_internal -> Overture_trunc_S [] ;
  Overture_IsTrunc_internal -> Overture_minus_two [] ;
  Overture_IsTrunc_internal -> Overture_trunc_index [] ;
  Overture_IsTrunc_internal -> Overture_paths [] ;
  Overture_trunc_index_rect -> Overture_trunc_index_ind [] ;
  Overture_trunc_index_rec -> Overture_trunc_index [] ;
  Overture_trunc_index_ind -> Overture_trunc_S [] ;
  Overture_trunc_index_ind -> Overture_minus_two [] ;
  Overture_trunc_index_ind -> Overture_trunc_index [] ;
  Overture_path_forall -> Overture_isequiv_apD10 [] ;
  Overture_isequiv_apD10 -> Overture_Funext [] ;
  Overture_isequiv_apD10 -> Overture_IsEquiv [] ;
  Overture_isequiv_apD10 -> Overture_apD10 [] ;
  Overture_ap10_equiv -> Overture_equiv_fun [] ;
  Overture_ap10_equiv -> Overture_ap10 [] ;
  Overture_equiv_isequiv -> Overture_Equiv [] ;
  Overture_equiv_fun -> Overture_Equiv [] ;
  Overture_Build_Equiv -> Overture_IsEquiv [] ;
  Overture_Equiv -> Overture_IsEquiv [] ;
  Overture_eisadj -> Overture_IsEquiv [] ;
  Overture_eissect -> Overture_IsEquiv [] ;
  Overture_eisretr -> Overture_IsEquiv [] ;
  Overture_equiv_inv -> Overture_IsEquiv [] ;
  Overture_Build_IsEquiv -> Overture_pointwise_paths [] ;
  Overture_Build_IsEquiv -> Overture_ap [] ;
  Overture_IsEquiv -> Overture_pointwise_paths [] ;
  Overture_IsEquiv -> Overture_ap [] ;
  Overture_ap11 -> Overture_idpath [] ;
  Overture_ap11 -> Overture_paths [] ;
  Overture_ap10 -> Overture_apD10 [] ;
  Overture_apD10 -> Overture_pointwise_paths [] ;
  Overture_apD10 -> Overture_idpath [] ;
  Overture_symmetric_pointwise_paths -> Overture_pointwise_paths [] ;
  Overture_symmetric_pointwise_paths -> Overture_inverse [] ;
  Overture_symmetric_pointwise_paths -> Overture_Symmetric [] ;
  Overture_transitive_pointwise_paths -> Overture_pointwise_paths_concat [] ;
  Overture_transitive_pointwise_paths -> Overture_Transitive [] ;
  Overture_reflexive_pointwise_paths -> Overture_pointwise_paths [] ;
  Overture_reflexive_pointwise_paths -> Overture_idpath [] ;
  Overture_reflexive_pointwise_paths -> Overture_Reflexive [] ;
  Overture_pointwise_paths_concat -> Overture_pointwise_paths [] ;
  Overture_pointwise_paths_concat -> Overture_concat [] ;
  Overture_pointwise_paths -> Overture_paths [] ;
  Overture_apD -> Overture_transport [] ;
  Overture_apD -> Overture_idpath [] ;
  Overture_ap -> Overture_idpath [] ;
  Overture_ap -> Overture_paths [] ;
  Overture_define_internal_paths_rew_r -> Overture_internal_paths_rew_r [] ;
  Overture_internal_paths_rew_r -> Overture_paths [] ;
  Overture_define_internal_paths_rew -> Overture_internal_paths_rew [] ;
  Overture_internal_paths_rew -> Overture_paths [] ;
  Overture_transport -> Overture_paths [] ;
  Overture_transitive_paths -> Overture_concat [] ;
  Overture_transitive_paths -> Overture_Transitive [] ;
  Overture_concat -> Overture_idpath [] ;
  Overture_concat -> Overture_paths [] ;
  Overture_symmetric_paths -> Overture_inverse [] ;
  Overture_symmetric_paths -> Overture_Symmetric [] ;
  Overture_inverse -> Overture_idpath [] ;
  Overture_inverse -> Overture_paths [] ;
  Overture_related_reflexive_path -> Overture_paths [] ;
  Overture_related_reflexive_path -> Overture_Reflexive [] ;
  Overture_paths_ind_r -> Overture_idpath [] ;
  Overture_paths_ind_r -> Overture_paths [] ;
  Overture_paths_ind_ -> Overture_idpath [] ;
  Overture_paths_ind_ -> Overture_paths [] ;
  Overture_reflexive_paths -> Overture_idpath [] ;
  Overture_reflexive_paths -> Overture_paths [] ;
  Overture_reflexive_paths -> Overture_Reflexive [] ;
  Overture_paths_rect -> Overture_paths_ind [] ;
  Overture_paths_rec -> Overture_paths [] ;
  Overture_paths_ind -> Overture_idpath [] ;
  Overture_paths_ind -> Overture_paths [] ;
  Overture_symmetric_flip -> Overture_flip [] ;
  Overture_symmetric_flip -> Overture_symmetry [] ;
  Overture_transitive_flip -> Overture_flip [] ;
  Overture_transitive_flip -> Overture_transitivity [] ;
  Overture_reflexive_flip -> Overture_flip [] ;
  Overture_reflexive_flip -> Overture_reflexivity [] ;
  Overture_uncurry -> Overture_prod [] ;
  Overture_transitive_fun -> Overture_Transitive [] ;
  Overture_reflexive_fun -> Overture_Reflexive [] ;
  Overture_sig_rec -> Overture_sig [] ;
  Overture_sig_ind -> Overture_exist [] ;
  Overture_sig_ind -> Overture_sig [] ;
  Overture_sig_rect -> Overture_exist [] ;
  Overture_sig_rect -> Overture_sig [] ;
  Overture_proj2 -> Overture_sig [] ;
  Overture_proj1 -> Overture_sig [] ;
  Overture_PreOrder_Transitive -> Overture_PreOrder [] ;
  Overture_PreOrder_Reflexive -> Overture_PreOrder [] ;
  Overture_Build_PreOrder -> Overture_Transitive [] ;
  Overture_Build_PreOrder -> Overture_Reflexive [] ;
  Overture_PreOrder -> Overture_Transitive [] ;
  Overture_PreOrder -> Overture_Reflexive [] ;
  Overture_transitivity -> Overture_Transitive [] ;
  Overture_Transitive -> Overture_Relation [] ;
  Overture_symmetry -> Overture_Symmetric [] ;
  Overture_Symmetric -> Overture_Relation [] ;
  Overture_reflexivity -> Overture_Reflexive [] ;
  Overture_Reflexive -> Overture_Relation [] ;
  Overture_prod_ind -> Overture_pair [] ;
  Overture_prod_ind -> Overture_prod [] ;
  Overture_prod_rect -> Overture_pair [] ;
  Overture_prod_rect -> Overture_prod [] ;
  Overture_snd -> Overture_prod [] ;
  Overture_fst -> Overture_prod [] ;
  Overture_sum_ind -> Overture_inr [] ;
  Overture_sum_ind -> Overture_inl [] ;
  Overture_sum_ind -> Overture_sum [] ;
  Overture_sum_rect -> Overture_inr [] ;
  Overture_sum_rect -> Overture_inl [] ;
  Overture_sum_rect -> Overture_sum [] ;
  Overture_option_rect -> Overture_None [] ;
  Overture_option_rect -> Overture_Some [] ;
  Overture_option_rect -> Overture_option [] ;
  Numeral_int_of_int -> Numeral_int [] ;
  Numeral_uint_of_uint -> Numeral_uint [] ;
  Numeral_numeral_sind -> Numeral_Hex [] ;
  Numeral_numeral_sind -> Numeral_Dec [] ;
  Numeral_numeral_sind -> Numeral_numeral [] ;
  Numeral_numeral_rec -> Numeral_numeral_rect [] ;
  Numeral_numeral_ind -> Numeral_Hex [] ;
  Numeral_numeral_ind -> Numeral_Dec [] ;
  Numeral_numeral_ind -> Numeral_numeral [] ;
  Numeral_numeral_rect -> Numeral_Hex [] ;
  Numeral_numeral_rect -> Numeral_Dec [] ;
  Numeral_numeral_rect -> Numeral_numeral [] ;
  Numeral_Hex -> Numerals_Hexadecimal_hexadecimal [] ;
  Numeral_Hex -> Numerals_Decimal_decimal [] ;
  Numeral_Dec -> Numerals_Hexadecimal_hexadecimal [] ;
  Numeral_Dec -> Numerals_Decimal_decimal [] ;
  Numeral_numeral -> Numerals_Hexadecimal_hexadecimal [] ;
  Numeral_numeral -> Numerals_Decimal_decimal [] ;
  Numeral_int_sind -> Numeral_IntHex [] ;
  Numeral_int_sind -> Numeral_IntDec [] ;
  Numeral_int_sind -> Numeral_int [] ;
  Numeral_int_rec -> Numeral_int_rect [] ;
  Numeral_int_ind -> Numeral_IntHex [] ;
  Numeral_int_ind -> Numeral_IntDec [] ;
  Numeral_int_ind -> Numeral_int [] ;
  Numeral_int_rect -> Numeral_IntHex [] ;
  Numeral_int_rect -> Numeral_IntDec [] ;
  Numeral_int_rect -> Numeral_int [] ;
  Numeral_IntHex -> Numerals_Hexadecimal_int [] ;
  Numeral_IntHex -> Numerals_Decimal_int [] ;
  Numeral_IntDec -> Numerals_Hexadecimal_int [] ;
  Numeral_IntDec -> Numerals_Decimal_int [] ;
  Numeral_int -> Numerals_Hexadecimal_int [] ;
  Numeral_int -> Numerals_Decimal_int [] ;
  Numeral_uint_sind -> Numeral_UIntHex [] ;
  Numeral_uint_sind -> Numeral_UIntDec [] ;
  Numeral_uint_sind -> Numeral_uint [] ;
  Numeral_uint_rec -> Numeral_uint_rect [] ;
  Numeral_uint_ind -> Numeral_UIntHex [] ;
  Numeral_uint_ind -> Numeral_UIntDec [] ;
  Numeral_uint_ind -> Numeral_uint [] ;
  Numeral_uint_rect -> Numeral_UIntHex [] ;
  Numeral_uint_rect -> Numeral_UIntDec [] ;
  Numeral_uint_rect -> Numeral_uint [] ;
  Numeral_UIntHex -> Numerals_Hexadecimal_uint [] ;
  Numeral_UIntHex -> Numerals_Decimal_uint [] ;
  Numeral_UIntDec -> Numerals_Hexadecimal_uint [] ;
  Numeral_UIntDec -> Numerals_Decimal_uint [] ;
  Numeral_uint -> Numerals_Hexadecimal_uint [] ;
  Numeral_uint -> Numerals_Decimal_uint [] ;
  Basics_Nat_to_num_int -> Numeral_IntDec [] ;
  Basics_Nat_to_num_int -> Numeral_int [] ;
  Basics_Nat_to_num_int -> Basics_Nat_to_int [] ;
  Basics_Nat_to_int -> Basics_Nat_to_uint [] ;
  Basics_Nat_to_int -> Numerals_Decimal_Pos [] ;
  Basics_Nat_to_int -> Numerals_Decimal_int [] ;
  Basics_Nat_of_num_int -> Numeral_int [] ;
  Basics_Nat_of_num_int -> Basics_Nat_of_hex_int [] ;
  Basics_Nat_of_num_int -> Basics_Nat_of_int [] ;
  Basics_Nat_of_hex_int -> Overture_None [] ;
  Basics_Nat_of_hex_int -> Overture_Some [] ;
  Basics_Nat_of_hex_int -> Overture_option [] ;
  Basics_Nat_of_hex_int -> Basics_Nat_of_hex_uint [] ;
  Basics_Nat_of_hex_int -> Numerals_Hexadecimal_norm [] ;
  Basics_Nat_of_int -> Overture_None [] ;
  Basics_Nat_of_int -> Overture_Some [] ;
  Basics_Nat_of_int -> Overture_option [] ;
  Basics_Nat_of_int -> Basics_Nat_of_uint [] ;
  Basics_Nat_of_int -> Numerals_Decimal_norm [] ;
  Basics_Nat_to_num_uint -> Numeral_UIntDec [] ;
  Basics_Nat_to_num_uint -> Numeral_uint [] ;
  Basics_Nat_to_num_uint -> Basics_Nat_to_uint [] ;
  Basics_Nat_to_uint -> Basics_Nat_to_little_uint [] ;
  Basics_Nat_to_uint -> Numerals_Decimal_rev [] ;
  Basics_Nat_to_little_uint -> Numerals_Decimal_Little_succ [] ;
  Basics_Nat_to_little_uint -> Overture_nat [] ;
  Basics_Nat_of_num_uint -> Numeral_uint [] ;
  Basics_Nat_of_num_uint -> Basics_Nat_of_hex_uint [] ;
  Basics_Nat_of_num_uint -> Basics_Nat_of_uint [] ;
  Basics_Nat_of_hex_uint -> Basics_Nat_of_hex_uint_acc [] ;
  Basics_Nat_of_hex_uint_acc -> Basics_Nat_tail_mul [] ;
  Basics_Nat_of_hex_uint_acc -> Numerals_Hexadecimal_uint [] ;
  Basics_Nat_of_uint -> Basics_Nat_of_uint_acc [] ;
  Basics_Nat_of_uint_acc -> Basics_Nat_tail_mul [] ;
  Basics_Nat_of_uint_acc -> Numerals_Decimal_uint [] ;
  Basics_Nat_tail_mul -> Overture_O [] ;
  Basics_Nat_tail_mul -> Basics_Nat_tail_addmul [] ;
  Basics_Nat_tail_addmul -> Basics_Nat_tail_add [] ;
  Basics_Nat_tail_add -> Overture_S [] ;
  Basics_Nat_tail_add -> Overture_nat [] ;
  Iff_iff_contradiction -> Overture_not [] ;
  Iff_iff_contradiction -> Overture_Empty_rec [] ;
  Iff_iff_contradiction -> Overture_pair [] ;
  Iff_iff_contradiction -> Iff_iff [] ;
  Iff_iff_not_sum -> Overture_not [] ;
  Iff_iff_not_sum -> Overture_pair [] ;
  Iff_iff_not_sum -> Overture_sum_ind [] ;
  Iff_iff_not_sum -> Iff_iff [] ;
  Iff_iff_equiv -> Overture_Equiv [] ;
  Iff_iff_equiv -> Overture_pair [] ;
  Iff_iff_equiv -> Iff_iff [] ;
  Iff_transitive_iff -> Overture_Transitive [] ;
  Iff_transitive_iff -> Iff_iff_compose [] ;
  Iff_iff_compose -> Overture_pair [] ;
  Iff_iff_compose -> Iff_iff [] ;
  Iff_symmetric_iff -> Overture_Symmetric [] ;
  Iff_symmetric_iff -> Iff_iff_inverse [] ;
  Iff_iff_inverse -> Overture_pair [] ;
  Iff_iff_inverse -> Iff_iff [] ;
  Iff_iff_reflexive -> Overture_Reflexive [] ;
  Iff_iff_reflexive -> Iff_iff_refl [] ;
  Iff_iff_refl -> Overture_pair [] ;
  Iff_iff_refl -> Iff_iff [] ;
  Iff_iff -> Overture_prod [] ;
  Numerals_Hexadecimal_nztail_int -> Numerals_Hexadecimal_nztail [] ;
  Numerals_Hexadecimal_nztail_int -> Numerals_Hexadecimal_Neg [] ;
  Numerals_Hexadecimal_nztail_int -> Numerals_Hexadecimal_Pos [] ;
  Numerals_Hexadecimal_nztail_int -> Numerals_Hexadecimal_int [] ;
  Numerals_Hexadecimal_nztail -> Overture_S [] ;
  Numerals_Hexadecimal_nztail -> Overture_O [] ;
  Numerals_Hexadecimal_nztail -> Overture_nat [] ;
  Numerals_Hexadecimal_nztail -> Overture_pair [] ;
  Numerals_Hexadecimal_nztail -> Overture_prod [] ;
  Numerals_Hexadecimal_nztail -> Numerals_Hexadecimal_rev [] ;
  Numerals_Hexadecimal_app_int -> Numerals_Hexadecimal_app [] ;
  Numerals_Hexadecimal_app_int -> Numerals_Hexadecimal_Neg [] ;
  Numerals_Hexadecimal_app_int -> Numerals_Hexadecimal_Pos [] ;
  Numerals_Hexadecimal_app_int -> Numerals_Hexadecimal_int [] ;
  Numerals_Hexadecimal_app -> Numerals_Hexadecimal_rev [] ;
  Numerals_Hexadecimal_rev -> Numerals_Hexadecimal_revapp [] ;
  Numerals_Hexadecimal_rev -> Numerals_Hexadecimal_Nil [] ;
  Numerals_Hexadecimal_revapp -> Numerals_Hexadecimal_Df [] ;
  Numerals_Hexadecimal_revapp -> Numerals_Hexadecimal_De [] ;
  Numerals_Hexadecimal_revapp -> Numerals_Hexadecimal_Dd [] ;
  Numerals_Hexadecimal_revapp -> Numerals_Hexadecimal_Dc [] ;
  Numerals_Hexadecimal_revapp -> Numerals_Hexadecimal_Db [] ;
  Numerals_Hexadecimal_revapp -> Numerals_Hexadecimal_Da [] ;
  Numerals_Hexadecimal_revapp -> Numerals_Hexadecimal_D9 [] ;
  Numerals_Hexadecimal_revapp -> Numerals_Hexadecimal_D8 [] ;
  Numerals_Hexadecimal_revapp -> Numerals_Hexadecimal_D7 [] ;
  Numerals_Hexadecimal_revapp -> Numerals_Hexadecimal_D6 [] ;
  Numerals_Hexadecimal_revapp -> Numerals_Hexadecimal_D5 [] ;
  Numerals_Hexadecimal_revapp -> Numerals_Hexadecimal_D4 [] ;
  Numerals_Hexadecimal_revapp -> Numerals_Hexadecimal_D3 [] ;
  Numerals_Hexadecimal_revapp -> Numerals_Hexadecimal_D2 [] ;
  Numerals_Hexadecimal_revapp -> Numerals_Hexadecimal_D1 [] ;
  Numerals_Hexadecimal_revapp -> Numerals_Hexadecimal_D0 [] ;
  Numerals_Hexadecimal_revapp -> Numerals_Hexadecimal_uint [] ;
  Numerals_Hexadecimal_opp -> Numerals_Hexadecimal_Neg [] ;
  Numerals_Hexadecimal_opp -> Numerals_Hexadecimal_Pos [] ;
  Numerals_Hexadecimal_opp -> Numerals_Hexadecimal_int [] ;
  Numerals_Hexadecimal_norm -> Numerals_Hexadecimal_unorm [] ;
  Numerals_Hexadecimal_norm -> Numerals_Hexadecimal_Neg [] ;
  Numerals_Hexadecimal_norm -> Numerals_Hexadecimal_Pos [] ;
  Numerals_Hexadecimal_norm -> Numerals_Hexadecimal_int [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_nzhead [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_Df [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_De [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_Dd [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_Dc [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_Db [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_Da [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_D9 [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_D8 [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_D7 [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_D6 [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_D5 [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_D4 [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_D3 [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_D2 [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_D1 [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_D0 [] ;
  Numerals_Hexadecimal_unorm -> Numerals_Hexadecimal_Nil [] ;
  Numerals_Hexadecimal_nzhead -> Numerals_Hexadecimal_uint [] ;
  Numerals_Hexadecimal_nb_digits -> Overture_S [] ;
  Numerals_Hexadecimal_nb_digits -> Overture_O [] ;
  Numerals_Hexadecimal_nb_digits -> Overture_nat [] ;
  Numerals_Hexadecimal_nb_digits -> Numerals_Hexadecimal_uint [] ;
  Hexadecimal_hexadecimal_sind -> Numerals_Hexadecimal_HexadecimalExp [] ;
  Hexadecimal_hexadecimal_sind -> Numerals_Hexadecimal_Hexadecimal [] ;
  Hexadecimal_hexadecimal_sind -> Numerals_Hexadecimal_hexadecimal [] ;
  Hexadecimal_hexadecimal_rec -> Hexadecimal_hexadecimal_rect [] ;
  Hexadecimal_hexadecimal_ind -> Numerals_Hexadecimal_HexadecimalExp [] ;
  Hexadecimal_hexadecimal_ind -> Numerals_Hexadecimal_Hexadecimal [] ;
  Hexadecimal_hexadecimal_ind -> Numerals_Hexadecimal_hexadecimal [] ;
  Hexadecimal_hexadecimal_rect -> Numerals_Hexadecimal_HexadecimalExp [] ;
  Hexadecimal_hexadecimal_rect -> Numerals_Hexadecimal_Hexadecimal [] ;
  Hexadecimal_hexadecimal_rect -> Numerals_Hexadecimal_hexadecimal [] ;
subgraph cluster_Classes { label="Classes"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Classes_relation_pointwise; Classes_reflexive_pointwise; Classes_transitive_pointwise; Classes_symmetric_pointwise; Classes_pointwise_precomp; Classes_pointwise_moveR_equiv; Classes_pointwise_moveL_equiv; Classes_IsInjective; Classes_injective; Classes_neq_isinj; Classes_isinj_idmap; Classes_isinj_compose; Classes_isinj_cancelL; Classes_AntiSymmetric; Classes_antisymmetry; };
subgraph cluster_Basics { label="Basics"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
subgraph cluster_Basics_Nat { label="Nat"; fillcolor="#FFFFA3"; labeljust=l; style=filled 
Basics_Nat_tail_add; Basics_Nat_tail_addmul; Basics_Nat_tail_mul; Basics_Nat_of_uint_acc; Basics_Nat_of_uint; Basics_Nat_of_hex_uint_acc; Basics_Nat_of_hex_uint; Basics_Nat_of_num_uint; Basics_Nat_to_little_uint; Basics_Nat_to_uint; Basics_Nat_to_num_uint; Basics_Nat_of_int; Basics_Nat_of_hex_int; Basics_Nat_of_num_int; Basics_Nat_to_int; Basics_Nat_to_num_int; };
};
subgraph cluster_PathGroupoids { label="PathGroupoids"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
PathGroupoids_concat_l; PathGroupoids_concat_r; PathGroupoids_concat_lr; PathGroupoids_concat_p1; PathGroupoids_concat_1p; PathGroupoids_concat_p1_1p; PathGroupoids_concat_1p_p1; PathGroupoids_concat_p_pp; PathGroupoids_concat_pp_p; PathGroupoids_concat_pV; PathGroupoids_concat_Vp; PathGroupoids_concat_V_pp; PathGroupoids_concat_p_Vp; PathGroupoids_concat_pp_V; PathGroupoids_concat_pV_p; PathGroupoids_inv_pp; PathGroupoids_inv_Vp; PathGroupoids_inv_pV; PathGroupoids_inv_VV; PathGroupoids_inv_V; PathGroupoids_moveR_Mp; PathGroupoids_moveR_pM; PathGroupoids_moveR_Vp; PathGroupoids_moveR_pV; PathGroupoids_moveL_Mp; PathGroupoids_moveL_pM; PathGroupoids_moveL_Vp; PathGroupoids_moveL_pV; PathGroupoids_moveL_1M; PathGroupoids_moveL_M1; PathGroupoids_moveL_1V; PathGroupoids_moveL_V1; PathGroupoids_moveR_M1; PathGroupoids_moveR_1M; PathGroupoids_moveR_1V; PathGroupoids_moveR_V1; PathGroupoids_moveR_transport_p; PathGroupoids_moveR_transport_V; PathGroupoids_moveL_transport_V; PathGroupoids_moveL_transport_p; PathGroupoids_moveR_transport_p_V; PathGroupoids_moveR_transport_V_V; PathGroupoids_moveL_transport_V_V; PathGroupoids_moveL_transport_p_V; PathGroupoids_ap_1; PathGroupoids_apD_1; PathGroupoids_ap_pp; PathGroupoids_ap_p_pp; PathGroupoids_ap_pp_p; PathGroupoids_inverse_ap; PathGroupoids_ap_V; PathGroupoids_ap_idmap; PathGroupoids_ap_compose; PathGroupoids_ap_compose_; PathGroupoids_ap_const; PathGroupoids_concat_Ap; PathGroupoids_ap_homotopic; PathGroupoids_concat_A1p; PathGroupoids_ap_homotopic_id; PathGroupoids_concat_pA1; PathGroupoids_apD_natural; PathGroupoids_apD_homotopic; PathGroupoids_concat_pA_pp; PathGroupoids_concat_pA_p; PathGroupoids_concat_A_pp; PathGroupoids_concat_pA1_pp; PathGroupoids_concat_pp_A1p; PathGroupoids_concat_pA1_p; PathGroupoids_concat_A1_pp; PathGroupoids_concat_pp_A1; PathGroupoids_concat_p_A1p; PathGroupoids_concat_1p_1; PathGroupoids_concat_p1_1; PathGroupoids_apD10_1; PathGroupoids_apD10_pp; PathGroupoids_apD10_V; PathGroupoids_ap10_1; PathGroupoids_ap10_pp; PathGroupoids_ap10_V; PathGroupoids_apD10_ap_precompose; PathGroupoids_ap10_ap_precompose; PathGroupoids_apD10_ap_postcompose; PathGroupoids_ap10_ap_postcompose; PathGroupoids_ap100; PathGroupoids_transport_1; PathGroupoids_transport_pp; PathGroupoids_transport_pV; PathGroupoids_transport_Vp; PathGroupoids_transport_p_pp; PathGroupoids_transport_pVp; PathGroupoids_transport_VpV; PathGroupoids_ap_transport_transport_pV; PathGroupoids_moveL_transport_V_1; PathGroupoids_paths_rect_transport; PathGroupoids_paths_ind_transport; PathGroupoids_paths_ind_r_transport; PathGroupoids_ap11_is_ap10_ap01; PathGroupoids_transportD; PathGroupoids_transportD2; PathGroupoids_transportDD; PathGroupoids_ap011; PathGroupoids_ap011_V; PathGroupoids_ap011_pp; PathGroupoids_ap011_compose; PathGroupoids_ap011_compose_; PathGroupoids_ap011_is_ap; PathGroupoids_ap011D; PathGroupoids_ap01D1; PathGroupoids_apD011; PathGroupoids_transport011; PathGroupoids_transport011_pp; PathGroupoids_transport011_compose; PathGroupoids_ap_transport011; PathGroupoids_transport2; PathGroupoids_transport2_is_ap10; PathGroupoids_transport2_p2p; PathGroupoids_transport2_V; PathGroupoids_concat_AT; PathGroupoids_transport_pp_1; PathGroupoids_ap_transport; PathGroupoids_ap_transportD; PathGroupoids_ap_transportD2; PathGroupoids_ap_transport_pV; PathGroupoids_transport_pV_ap; PathGroupoids_apD_pp; PathGroupoids_apD_V; PathGroupoids_transport_const; PathGroupoids_transport2_const; PathGroupoids_transportD_const_fiber; PathGroupoids_transportD_const_base; PathGroupoids_transportDD_const; PathGroupoids_transport_compose; PathGroupoids_transportD_compose; PathGroupoids_transport_apD_transportD; PathGroupoids_transport_precompose; PathGroupoids_transport_idmap_ap; PathGroupoids_transport_compose_path_ap; PathGroupoids_transport_transport; PathGroupoids_apD_const; PathGroupoids_apD_compose; PathGroupoids_apD_compose_; PathGroupoids_concat2; PathGroupoids_concat2_ap_ap; PathGroupoids_inverse2; PathGroupoids_ap_pV; PathGroupoids_ap_Vp; PathGroupoids_ap_pp_concat_p1; PathGroupoids_ap_pp_concat_1p; PathGroupoids_ap_pV_concat_pV; PathGroupoids_ap_Vp_concat_Vp; PathGroupoids_concat_pV_inverse2; PathGroupoids_concat_Vp_inverse2; PathGroupoids_ap_ap_concat_pV; PathGroupoids_ap_ap_concat_Vp; PathGroupoids_whiskerL; PathGroupoids_whiskerR; PathGroupoids_cancelL; PathGroupoids_cancelR; PathGroupoids_whiskerR_p1; PathGroupoids_whiskerR_1p; PathGroupoids_whiskerL_p1; PathGroupoids_whiskerL_1p; PathGroupoids_whiskerR_p1_1; PathGroupoids_whiskerL_1p_1; PathGroupoids_cancel2L; PathGroupoids_cancel2R; PathGroupoids_whiskerL_pp; PathGroupoids_whiskerR_pp; PathGroupoids_whiskerL_VpL; PathGroupoids_whiskerL_pVL; PathGroupoids_whiskerR_pVR; PathGroupoids_whiskerR_VpR; PathGroupoids_concat_p_pp_nat_l; PathGroupoids_concat_p_pp_nat_m; PathGroupoids_concat_p_pp_nat_r; PathGroupoids_concat_concat2; PathGroupoids_concat_whisker; PathGroupoids_pentagon; PathGroupoids_triangulator; PathGroupoids_eckmann_hilton; PathGroupoids_ap02; PathGroupoids_ap02_pp; PathGroupoids_ap02_p2p; PathGroupoids_apD02; PathGroupoids_apD02_const; PathGroupoids_apD02_pp; PathGroupoids_ap022; PathGroupoids_ap_transport_Vp_idmap; PathGroupoids_ap_transport_pV_idmap; };
subgraph cluster_Hexadecimal { label="Hexadecimal"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Hexadecimal_hexadecimal_rect; Hexadecimal_hexadecimal_ind; Hexadecimal_hexadecimal_rec; Hexadecimal_hexadecimal_sind; Hexadecimal_int_rect; Hexadecimal_int_ind; Hexadecimal_int_rec; Hexadecimal_int_sind; };
subgraph cluster_Equivalences { label="Equivalences"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Equivalences_isequiv_idmap; Equivalences_equiv_idmap; Equivalences_reflexive_equiv; Equivalences_isequiv_compose; Equivalences_equiv_compose; Equivalences_equiv_compose_; Equivalences_transitive_equiv; Equivalences_isequiv_transport; Equivalences_equiv_transport; Equivalences_isequiv_transportD; Equivalences_equiv_transportD; Equivalences_equiv_transportDD; Equivalences_is_adjoint_; Equivalences_isequiv_adjointify; Equivalences_equiv_adjointify; Equivalences_isequiv_homotopic; Equivalences_isequiv_homotopic_; Equivalences_equiv_homotopic; Equivalences_equiv_homotopic_inverse; Equivalences_isequiv_involution; Equivalences_equiv_involution; Equivalences_moveR_equiv_M; Equivalences_moveR_equiv_M_; Equivalences_moveL_equiv_M; Equivalences_moveL_equiv_M_; Equivalences_moveR_equiv_V; Equivalences_moveR_equiv_V_; Equivalences_moveL_equiv_V; Equivalences_moveL_equiv_V_; Equivalences_contr_equiv; Equivalences_contr_equiv_; Equivalences_isequiv_contr_contr; Equivalences_equiv_contr_contr; Equivalences_isequiv_pr1; Equivalences_equiv_pr1; Equivalences_isequiv_ap; Equivalences_equiv_ap; Equivalences_equiv_ap_; Equivalences_equiv_inj; Equivalences_isequiv_precompose; Equivalences_equiv_precompose; Equivalences_equiv_precompose_; Equivalences_isequiv_postcompose; Equivalences_equiv_postcompose; Equivalences_equiv_postcompose_; Equivalences_isequiv_isequiv_precompose; Equivalences_isequiv_isequiv_postcompose; Equivalences_isequiv_inverse; Equivalences_equiv_inverse; Equivalences_symmetric_equiv; Equivalences_equiv_inverse_compose; Equivalences_equiv_inverse_homotopy; Equivalences_equiv_ap_inv; Equivalences_equiv_ap_inv_; Equivalences_cancelR_isequiv; Equivalences_cancelR_equiv; Equivalences_cancelL_isequiv; Equivalences_cancelL_equiv; Equivalences_isequiv_commsq; Equivalences_isequiv_commsq_; Equivalences_contr_basedhomotopy; Equivalences_contr_basedhomotopy_; Equivalences_equiv_ind; Equivalences_equiv_ind_comp; Equivalences_equiv_path_ind; Equivalences_equiv_composeR_; };
subgraph cluster_Decidable { label="Decidable"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Decidable_Decidable; Decidable_dec; Decidable_decidable_true; Decidable_decidable_false; Decidable_DecidablePaths; Decidable_dec_paths; Decidable_Stable; Decidable_stable; Decidable_not_not_unit; Decidable_ishprop_stable_hprop; Decidable_stable_decidable; Decidable_stable_negation; Decidable_iff_stable; Decidable_stable_iff; Decidable_stable_equiv_; Decidable_stable_equiv; Decidable_decide_rel; Decidable_decidable_contr; Decidable_decidablepaths_hprop; Decidable_decidable_empty; Decidable_decidable_iff; Decidable_decidable_equiv_; Decidable_decidable_equiv; Decidable_decidablepaths_equiv; Decidable_decidablepaths_equiv_; Decidable_WeaklyConstant; Decidable_wconst; Decidable_wconst_through_hprop; Decidable_Collapsible; Decidable_Build_Collapsible; Decidable_Collapsible_rect; Decidable_Collapsible_ind; Decidable_Collapsible_rec; Decidable_Collapsible_sind; Decidable_collapse; Decidable_wconst_collapse; Decidable_PathCollapsible; Decidable_path_coll; Decidable_collapsible_decidable; Decidable_pathcoll_decpaths; Decidable_hset_pathcoll; Decidable_collapsible_hprop; Decidable_pathcoll_hset; Decidable_hset_decpaths; Decidable_decidable_paths_refl; Decidable_ishprop_decpaths; Decidable_not_prod_sum_not; Decidable_iff_not_prod; Decidable_iff_not_prod_; };
subgraph cluster_Contractible { label="Contractible"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Contractible_path_contr; Contractible_contr_paths_contr; Contractible_path2_contr; Contractible_path_basedpaths; Contractible_contr_basedpaths; Contractible_contr_basedpaths_etashort; Contractible_path_basedpaths_; Contractible_contr_basedpaths_; Contractible_ap_pr1_path_contr_basedpaths; Contractible_ap_pr1_path_contr_basedpaths_; Contractible_ap_pr1_path_basedpaths; Contractible_ap_pr1_path_basedpaths_; Contractible_contr_dom_equiv; Contractible_contr_retract; Contractible_contr_change_center; Contractible_Contr_ind; };
subgraph cluster_Decimal { label="Decimal"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Decimal_int_rect; Decimal_int_ind; Decimal_int_rec; Decimal_int_sind; Decimal_decimal_rect; Decimal_decimal_ind; Decimal_decimal_rec; Decimal_decimal_sind; };
subgraph cluster_Predicate { label="Predicate"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Predicate_pred_eq; Predicate_pred_subset; Predicate_pred_subset_pred_eq; Predicate_pred_subset_pred_eq_; Predicate_pred_subset_antisymm; Predicate_pred_subset_precomp; Predicate_pred_subset_postcomp; Predicate_pred_subset_moveL_equiv; Predicate_pred_subset_moveR_equiv; Predicate_pred_and; Predicate_pred_or; Predicate_pred_unit; Predicate_pred_empty; Predicate_pred_empty_subset; Predicate_pred_unit_subset; Predicate_pred_and_subset_l; Predicate_pred_and_subset_r; Predicate_pred_and_is_meet; Predicate_pred_and_comm_; Predicate_pred_and_comm; Predicate_pred_or_is_join; Predicate_pred_or_comm_; Predicate_pred_or_comm; Predicate_pred_and_unit_l; Predicate_pred_and_unit_r; };
subgraph cluster_Numeral { label="Numeral"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Numeral_uint; Numeral_UIntDec; Numeral_UIntHex; Numeral_uint_rect; Numeral_uint_ind; Numeral_uint_rec; Numeral_uint_sind; Numeral_int; Numeral_IntDec; Numeral_IntHex; Numeral_int_rect; Numeral_int_ind; Numeral_int_rec; Numeral_int_sind; Numeral_numeral; Numeral_Dec; Numeral_Hex; Numeral_numeral_rect; Numeral_numeral_ind; Numeral_numeral_rec; Numeral_numeral_sind; Numeral_uint_of_uint; Numeral_int_of_int; };
subgraph cluster_Overture { label="Overture"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Overture_option; Overture_Some; Overture_None; Overture_option_rect; Overture_sum; Overture_inl; Overture_inr; Overture_sum_rect; Overture_sum_ind; Overture_prod; Overture_pair; Overture_fst; Overture_snd; Overture_prod_rect; Overture_prod_ind; Overture_Relation; Overture_Reflexive; Overture_reflexivity; Overture_Symmetric; Overture_symmetry; Overture_Transitive; Overture_transitivity; Overture_PreOrder; Overture_Build_PreOrder; Overture_PreOrder_Reflexive; Overture_PreOrder_Transitive; Overture_sig; Overture_exist; Overture_proj1; Overture_proj2; Overture_sig_rect; Overture_sig_ind; Overture_sig_rec; Overture_reflexive_fun; Overture_const; Overture_Compose; Overture_composeD; Overture_transitive_fun; Overture_uncurry; Overture_flip; Overture_reflexive_flip; Overture_transitive_flip; Overture_symmetric_flip; Overture_paths; Overture_idpath; Overture_paths_ind; Overture_paths_rec; Overture_paths_rect; Overture_reflexive_paths; Overture_paths_ind_; Overture_paths_ind_r; Overture_related_reflexive_path; Overture_inverse; Overture_symmetric_paths; Overture_concat; Overture_transitive_paths; Overture_transport; Overture_internal_paths_rew; Overture_define_internal_paths_rew; Overture_internal_paths_rew_r; Overture_define_internal_paths_rew_r; Overture_ap; Overture_apD; Overture_pointwise_paths; Overture_pointwise_paths_concat; Overture_reflexive_pointwise_paths; Overture_transitive_pointwise_paths; Overture_symmetric_pointwise_paths; Overture_apD10; Overture_ap10; Overture_ap11; Overture_IsEquiv; Overture_Build_IsEquiv; Overture_equiv_inv; Overture_eisretr; Overture_eissect; Overture_eisadj; Overture_Equiv; Overture_Build_Equiv; Overture_equiv_fun; Overture_equiv_isequiv; Overture_ap10_equiv; Overture_Funext; Overture_isequiv_apD10; Overture_path_forall; Overture_trunc_index; Overture_minus_two; Overture_trunc_S; Overture_trunc_index_ind; Overture_trunc_index_rec; Overture_trunc_index_rect; Overture_IsTrunc_internal; Overture_Build_Contr; Overture_istrunc_S; Overture_IsTrunc_internal_ind; Overture_IsTrunc_internal_rec; Overture_IsTrunc_internal_rect; Overture_IsTrunc_unfolded; Overture_istrunc_unfold; Overture_isequiv_istrunc_unfold; Overture_equiv_istrunc_unfold; Overture_istrunc_paths; Overture_center; Overture_contr; Overture_istrunc_codomain_fam; Overture_istrunc_fun; Overture_nat; Overture_O; Overture_S; Overture_nat_ind; Overture_nat_rect; Overture_nat_rec; Overture_Empty; Overture_Empty_ind; Overture_Empty_rec; Overture_Empty_rect; Overture_not; Overture_symmetric_neq; Overture_complement; Overture_Irreflexive; Overture_irreflexivity; Overture_Asymmetric; Overture_asymmetry; Overture_Unit; Overture_tt; Overture_Unit_ind; Overture_Unit_rec; Overture_Unit_rect; Overture_IsPointed; Overture_point; Overture_pType; Overture_Build_pType; Overture_pointed_type; Overture_ispointed_type; Overture_hfiber; Overture_IsSmall; Overture_Build_IsSmall; Overture_smalltype; Overture_equiv_smalltype; Overture_PropResizing; Overture_issmall_hprop; };
subgraph cluster_Numerals { label="Numerals"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
subgraph cluster_Numerals_Decimal { label="Decimal"; fillcolor="#FFFFA3"; labeljust=l; style=filled 
subgraph cluster_Numerals_Decimal_Little { label="Little"; fillcolor="#FFFF83"; labeljust=l; style=filled 
Numerals_Decimal_Little_succ; Numerals_Decimal_Little_double; Numerals_Decimal_Little_succ_double; };
Numerals_Decimal_uint; Numerals_Decimal_Nil; Numerals_Decimal_D0; Numerals_Decimal_D1; Numerals_Decimal_D2; Numerals_Decimal_D3; Numerals_Decimal_D4; Numerals_Decimal_D5; Numerals_Decimal_D6; Numerals_Decimal_D7; Numerals_Decimal_D8; Numerals_Decimal_D9; Numerals_Decimal_uint_rect; Numerals_Decimal_uint_ind; Numerals_Decimal_uint_rec; Numerals_Decimal_uint_sind; Numerals_Decimal_int; Numerals_Decimal_Pos; Numerals_Decimal_Neg; Numerals_Decimal_decimal; Numerals_Decimal_Decimal; Numerals_Decimal_DecimalExp; Numerals_Decimal_nb_digits; Numerals_Decimal_nzhead; Numerals_Decimal_unorm; Numerals_Decimal_norm; Numerals_Decimal_opp; Numerals_Decimal_revapp; Numerals_Decimal_rev; Numerals_Decimal_app; Numerals_Decimal_app_int; Numerals_Decimal_nztail; Numerals_Decimal_nztail_int; Numerals_Decimal_uint_of_uint; Numerals_Decimal_int_of_int; };
subgraph cluster_Numerals_Hexadecimal { label="Hexadecimal"; fillcolor="#FFFFA3"; labeljust=l; style=filled 
subgraph cluster_Numerals_Hexadecimal_Little { label="Little"; fillcolor="#FFFF83"; labeljust=l; style=filled 
Numerals_Hexadecimal_Little_succ; Numerals_Hexadecimal_Little_double; Numerals_Hexadecimal_Little_succ_double; };
Numerals_Hexadecimal_nb_digits; Numerals_Hexadecimal_nzhead; Numerals_Hexadecimal_unorm; Numerals_Hexadecimal_norm; Numerals_Hexadecimal_opp; Numerals_Hexadecimal_revapp; Numerals_Hexadecimal_rev; Numerals_Hexadecimal_app; Numerals_Hexadecimal_app_int; Numerals_Hexadecimal_nztail; Numerals_Hexadecimal_nztail_int; Numerals_Hexadecimal_uint; Numerals_Hexadecimal_Nil; Numerals_Hexadecimal_D0; Numerals_Hexadecimal_D1; Numerals_Hexadecimal_D2; Numerals_Hexadecimal_D3; Numerals_Hexadecimal_D4; Numerals_Hexadecimal_D5; Numerals_Hexadecimal_D6; Numerals_Hexadecimal_D7; Numerals_Hexadecimal_D8; Numerals_Hexadecimal_D9; Numerals_Hexadecimal_Da; Numerals_Hexadecimal_Db; Numerals_Hexadecimal_Dc; Numerals_Hexadecimal_Dd; Numerals_Hexadecimal_De; Numerals_Hexadecimal_Df; Numerals_Hexadecimal_uint_rect; Numerals_Hexadecimal_uint_ind; Numerals_Hexadecimal_uint_rec; Numerals_Hexadecimal_uint_sind; Numerals_Hexadecimal_int; Numerals_Hexadecimal_Pos; Numerals_Hexadecimal_Neg; Numerals_Hexadecimal_hexadecimal; Numerals_Hexadecimal_Hexadecimal; Numerals_Hexadecimal_HexadecimalExp; };
};
subgraph cluster_Iff { label="Iff"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Iff_iff; Iff_iff_refl; Iff_iff_reflexive; Iff_iff_inverse; Iff_symmetric_iff; Iff_iff_compose; Iff_transitive_iff; Iff_iff_equiv; Iff_iff_not_sum; Iff_iff_contradiction; };
subgraph cluster_Settings { label="Settings"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Settings_ReverseCoercionSource; Settings_ReverseCoercionTarget; Settings_reverse_coercion; };
subgraph cluster_Tactics { label="Tactics"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Tactics_fix_proto; Tactics_IsGlobalAxiom; Tactics_Build_IsGlobalAxiom; Tactics_IsGlobalAxiom_rect; Tactics_IsGlobalAxiom_ind; Tactics_IsGlobalAxiom_rec; Tactics_IsGlobalAxiom_sind; Tactics_is_global_axiom_funext; Tactics_is_global_axiom_propresizing; Tactics_issig_equiv; Tactics_issig_isequiv; };
subgraph cluster_Trunc { label="Trunc"; fillcolor="#FFFFC3"; labeljust=l; style=filled 
Trunc_trunc_index_inc; Trunc_trunc_index_inc_; Trunc_trunc_index_inc__succ; Trunc_trunc_index_inc_agree; Trunc_nat_to_trunc_index; Trunc_trunc_index_inc__0n; Trunc_int_to_trunc_index; Trunc_num_int_to_trunc_index; Trunc_trunc_index_to_little_uint; Trunc_trunc_index_to_int; Trunc_trunc_index_to_num_int; Trunc_trunc_index_to_nat; Trunc_trunc_index_add; Trunc_trunc_index_add_minus_two; Trunc_trunc_index_add_succ; Trunc_trunc_index_add_comm; Trunc_trunc_index_leq; Trunc_trunc_index_leq_minus_two_n; Trunc_trunc_index_leq_succ; Trunc_trunc_index_pred; Trunc_trunc_index_succ_pred; Trunc_trunc_index_succ_pred_; Trunc_trunc_index_add_pred; Trunc_trunc_index_add_pred_; Trunc_trunc_index_leq_minus_two; Trunc_trunc_index_leq_succ_; Trunc_trunc_index_leq_refl; Trunc_trunc_index_leq_transitive; Trunc_trunc_index_leq_add; Trunc_trunc_index_leq_add_; Trunc_trunc_index_min; Trunc_trunc_index_min_minus_two; Trunc_trunc_index_min_swap; Trunc_trunc_index_min_path; Trunc_trunc_index_min_leq_left; Trunc_trunc_index_min_leq_right; Trunc_contr_istrunc_minus_two; Trunc_istrunc_paths_; Trunc_istrunc_succ; Trunc_istrunc_leq; Trunc_istrunc_contr; Trunc_istrunc_hprop; Trunc_istrunc_hset; Trunc_istrunc_isequiv_istrunc; Trunc_istrunc_equiv_istrunc; Trunc_IsTruncMap; Trunc_istruncmap_fiber; Trunc_TruncType; Trunc_Build_TruncType; Trunc_TruncType_rect; Trunc_TruncType_ind; Trunc_TruncType_rec; Trunc_TruncType_sind; Trunc_trunctype_type; Trunc_trunctype_istrunc; Trunc_default_TruncType; Trunc_smallntype; Trunc_contr_inhabited_hprop; Trunc_hprop_inhabited_contr; Trunc_path_ishprop; Trunc_hprop_allpath; Trunc_isequiv_iff_hprop; Trunc_equiv_iff_hprop_uncurried; Trunc_equiv_iff_hprop; Trunc_iff_contr_hprop; Trunc_contr_forall; Trunc_istrunc_forall; Trunc_ishprop_istrunc; Trunc_ishprop_istruncmap; Trunc_contr_istrunc; Trunc_equiv_contr_hprop; Trunc_istrunc_inhabited_istrunc; };
} /* END */
