N: 28 "Build_list" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 109 "app_assoc" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 110 "app_nil" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 1 "decidable_exists_bounded_nat" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 2 "decidable_exists_nat" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 7 "decidable_for_all" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 6 "decidable_list_exists" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 67 "drop" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 66 "drop_0" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 65 "drop_1" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 61 "drop_inlist" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 63 "drop_length_leq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 64 "drop_nil" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 106 "equiv_inlist_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 105 "fold_left_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 13 "fold_left_preserves" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 104 "fold_right_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 19 "for_all_inlist" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 17 "for_all_list_map" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 16 "for_all_list_map'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 15 "for_all_list_map2" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 14 "for_all_list_map2'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 10 "for_all_repeat" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 77 "index_of" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 44 "inlist_filter" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 18 "inlist_for_all" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 5 "inlist_list_exists" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 102 "inlist_map" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 101 "inlist_map'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 96 "inlist_map2" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 81 "inlist_nth'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 21 "inlist_repeat" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 29 "inlist_seq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 12 "istrunc_for_all" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 11 "istrunc_for_all'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 69 "last_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 111 "length_0" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 27 "length_Build_list" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 107 "length_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 62 "length_drop" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 103 "length_list_map" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 97 "length_list_map2" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 24 "length_list_restrict" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 8 "length_list_sigma" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 47 "length_remove" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 22 "length_repeat" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 92 "length_reverse" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 93 "length_reverse_acc" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 41 "length_seq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 35 "length_seq'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 42 "length_seq_rev" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 36 "length_seq_rev'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 56 "length_take" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 55 "length_take_leq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 4 "list_exists_inlist" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 3 "list_exists_seq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 45 "list_filter" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 43 "list_filter_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 95 "list_map2_repeat_l" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 94 "list_map2_repeat_r" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 100 "list_map_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 98 "list_map_compose" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 99 "list_map_id" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 90 "list_map_reverse" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 91 "list_map_reverse_acc" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 108 "list_pentagon" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 25 "list_restrict" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 20 "list_restrict_succ" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 9 "list_sigma" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 84 "nth'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 26 "nth'_Build_list" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 78 "nth'_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 79 "nth'_cons" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 68 "nth'_last_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 75 "nth'_list_map" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 74 "nth'_list_map2" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 23 "nth'_list_restrict" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 83 "nth'_nth'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 82 "nth'_path_list" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 73 "nth'_repeat" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 30 "nth'_seq'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 71 "nth_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 70 "nth_last" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 76 "nth_list_map" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 85 "nth_lt" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 80 "nth_nth'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 31 "nth_seq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 32 "nth_seq_rev" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 72 "path_list_nth'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 50 "remove" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 49 "remove_0" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 46 "remove_inlist" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 48 "remove_length_leq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 89 "reverse_acc_cons" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 87 "reverse_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 88 "reverse_cons" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 86 "reverse_reverse" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 37 "seq'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 38 "seq_rev'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 40 "seq_rev_cons" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 34 "seq_rev_seq_rev'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 33 "seq_seq'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 39 "seq_succ" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 60 "take" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 59 "take_0" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 51 "take_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 52 "take_comm" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 54 "take_inlist" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 57 "take_length_leq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 58 "take_nil" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 53 "take_take_min" [body=yes, kind=cnst, prop=no, path="Theory", ];
E: 1 2 [weight=1, ];
E: 2 3 [weight=1, ];
E: 2 6 [weight=1, ];
E: 3 4 [weight=1, ];
E: 3 5 [weight=1, ];
E: 3 29 [weight=2, ];
E: 8 9 [weight=5, ];
E: 11 12 [weight=1, ];
E: 11 19 [weight=1, ];
E: 16 17 [weight=1, ];
E: 20 25 [weight=4, ];
E: 20 33 [weight=2, ];
E: 20 37 [weight=15, ];
E: 20 39 [weight=1, ];
E: 20 98 [weight=2, ];
E: 20 100 [weight=1, ];
E: 23 24 [weight=4, ];
E: 23 25 [weight=11, ];
E: 23 30 [weight=1, ];
E: 23 35 [weight=4, ];
E: 23 37 [weight=16, ];
E: 23 75 [weight=1, ];
E: 23 84 [weight=4, ];
E: 24 25 [weight=1, ];
E: 24 27 [weight=1, ];
E: 25 28 [weight=1, ];
E: 26 28 [weight=3, ];
E: 26 30 [weight=2, ];
E: 26 35 [weight=8, ];
E: 26 37 [weight=23, ];
E: 26 75 [weight=1, ];
E: 26 84 [weight=7, ];
E: 27 28 [weight=1, ];
E: 27 35 [weight=1, ];
E: 27 37 [weight=3, ];
E: 27 103 [weight=1, ];
E: 28 37 [weight=1, ];
E: 29 39 [weight=1, ];
E: 29 106 [weight=1, ];
E: 30 31 [weight=1, ];
E: 30 33 [weight=8, ];
E: 30 35 [weight=1, ];
E: 30 37 [weight=54, ];
E: 30 75 [weight=1, ];
E: 30 80 [weight=1, ];
E: 30 84 [weight=11, ];
E: 30 103 [weight=12, ];
E: 31 39 [weight=1, ];
E: 31 41 [weight=2, ];
E: 31 69 [weight=1, ];
E: 31 70 [weight=1, ];
E: 31 71 [weight=1, ];
E: 31 107 [weight=1, ];
E: 33 34 [weight=1, ];
E: 33 37 [weight=1, ];
E: 33 38 [weight=4, ];
E: 33 91 [weight=1, ];
E: 34 38 [weight=10, ];
E: 34 98 [weight=1, ];
E: 35 36 [weight=1, ];
E: 35 37 [weight=1, ];
E: 35 38 [weight=3, ];
E: 35 92 [weight=1, ];
E: 36 38 [weight=4, ];
E: 36 103 [weight=1, ];
E: 37 38 [weight=1, ];
E: 39 88 [weight=1, ];
E: 41 42 [weight=1, ];
E: 41 92 [weight=1, ];
E: 43 45 [weight=28, ];
E: 44 45 [weight=19, ];
E: 46 50 [weight=2, ];
E: 46 54 [weight=1, ];
E: 46 60 [weight=4, ];
E: 46 61 [weight=1, ];
E: 46 67 [weight=4, ];
E: 46 106 [weight=2, ];
E: 47 50 [weight=2, ];
E: 47 56 [weight=1, ];
E: 47 60 [weight=4, ];
E: 47 62 [weight=1, ];
E: 47 67 [weight=5, ];
E: 47 107 [weight=1, ];
E: 48 50 [weight=2, ];
E: 48 57 [weight=1, ];
E: 48 60 [weight=1, ];
E: 48 63 [weight=1, ];
E: 48 67 [weight=2, ];
E: 48 110 [weight=1, ];
E: 49 50 [weight=2, ];
E: 50 60 [weight=1, ];
E: 50 67 [weight=1, ];
E: 51 60 [weight=15, ];
E: 52 53 [weight=2, ];
E: 52 60 [weight=16, ];
E: 53 58 [weight=2, ];
E: 53 60 [weight=26, ];
E: 54 58 [weight=1, ];
E: 54 60 [weight=12, ];
E: 55 56 [weight=1, ];
E: 55 60 [weight=3, ];
E: 56 58 [weight=1, ];
E: 56 60 [weight=7, ];
E: 57 58 [weight=1, ];
E: 57 60 [weight=7, ];
E: 58 60 [weight=2, ];
E: 59 60 [weight=2, ];
E: 61 64 [weight=1, ];
E: 61 67 [weight=10, ];
E: 62 64 [weight=1, ];
E: 62 67 [weight=5, ];
E: 63 64 [weight=1, ];
E: 63 67 [weight=6, ];
E: 64 67 [weight=3, ];
E: 65 67 [weight=2, ];
E: 66 67 [weight=2, ];
E: 68 84 [weight=4, ];
E: 72 79 [weight=2, ];
E: 72 84 [weight=32, ];
E: 73 84 [weight=5, ];
E: 74 79 [weight=3, ];
E: 74 84 [weight=55, ];
E: 75 84 [weight=11, ];
E: 77 79 [weight=1, ];
E: 77 84 [weight=17, ];
E: 78 84 [weight=11, ];
E: 79 80 [weight=2, ];
E: 79 84 [weight=8, ];
E: 80 84 [weight=1, ];
E: 80 85 [weight=1, ];
E: 81 84 [weight=10, ];
E: 82 83 [weight=1, ];
E: 82 84 [weight=4, ];
E: 83 84 [weight=3, ];
E: 84 85 [weight=1, ];
E: 86 87 [weight=1, ];
E: 86 88 [weight=1, ];
E: 87 88 [weight=2, ];
E: 87 109 [weight=1, ];
E: 87 110 [weight=1, ];
E: 88 89 [weight=1, ];
E: 88 109 [weight=1, ];
E: 89 109 [weight=1, ];
E: 90 91 [weight=1, ];
E: 92 93 [weight=1, ];
E: 108 109 [weight=116, ];
