N: 8 "IsCongruence_ind" [body=yes, kind=cnst, prop=yes, path="ua_congruence", ];
N: 7 "IsCongruence_rec" [body=yes, kind=cnst, prop=no, path="ua_congruence", ];
N: 9 "IsCongruence_rect" [body=yes, kind=cnst, prop=no, path="ua_congruence", ];
N: 6 "IsCongruence_sind" [body=yes, kind=cnst, prop=no, path="ua_congruence", ];
N: 15 "OpCompatible" [body=yes, kind=cnst, prop=no, path="ua_congruence", ];
N: 14 "OpsCompatible" [body=yes, kind=cnst, prop=no, path="ua_congruence", ];
N: 4 "equiv_rel_cong" [body=yes, kind=cnst, prop=no, path="ua_congruence", ];
N: 2 "hprop_is_congruence" [body=yes, kind=cnst, prop=no, path="ua_congruence", ];
N: 5 "is_mere_relation_cong" [body=yes, kind=cnst, prop=no, path="ua_congruence", ];
N: 1 "op_compatible_cons" [body=yes, kind=cnst, prop=no, path="ua_congruence", ];
N: 13 "ops_compatible" [body=yes, kind=cnst, prop=no, path="ua_congruence", ];
N: 3 "ops_compatible_cong" [body=yes, kind=cnst, prop=no, path="ua_congruence", ];
N: 12 "trunc_ops_compatible" [body=yes, kind=cnst, prop=no, path="ua_congruence", ];
N: 11 "IsCongruence" [kind=inductive, prop=no, path="ua_congruence", ];
N: 10 "BuildIsCongruence" [kind=construct, prop=no, path="ua_congruence", ];
E: 1 11 [weight=2, ];
E: 1 15 [weight=4, ];
E: 2 10 [weight=7, ];
E: 2 11 [weight=8, ];
E: 2 12 [weight=1, ];
E: 2 14 [weight=5, ];
E: 3 11 [weight=2, ];
E: 3 14 [weight=1, ];
E: 4 11 [weight=2, ];
E: 5 11 [weight=2, ];
E: 6 10 [weight=2, ];
E: 6 11 [weight=4, ];
E: 6 14 [weight=2, ];
E: 7 9 [weight=1, ];
E: 7 10 [weight=1, ];
E: 7 11 [weight=3, ];
E: 7 14 [weight=1, ];
E: 8 10 [weight=2, ];
E: 8 11 [weight=4, ];
E: 8 14 [weight=2, ];
E: 9 10 [weight=2, ];
E: 9 11 [weight=4, ];
E: 9 14 [weight=2, ];
E: 10 14 [weight=1, ];
E: 11 14 [weight=1, ];
E: 12 14 [weight=1, ];
E: 12 15 [weight=1, ];
E: 13 14 [weight=2, ];
E: 13 15 [weight=1, ];
E: 14 15 [weight=1, ];
