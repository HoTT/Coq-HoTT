N: 18 "Slice" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
N: 8 "equiv_pfiber_fibration_pfibration" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
N: 1 "equiv_pmap_typeO_type_connected" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
N: 13 "equiv_sigma_fibration" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
N: 6 "equiv_sigma_fibration_O" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
N: 5 "equiv_sigma_fibration_Op" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
N: 4 "equiv_sigma_fibration_Op_connected" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
N: 9 "equiv_sigma_fibration_p" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
N: 7 "equiv_sigma_pfibration" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
N: 3 "equiv_sigma_pfibration_O" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
N: 2 "equiv_sigma_pfibration_O_connected" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
N: 14 "isequiv_sigma_fibration" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
N: 10 "ispullback_objectclassifier_square" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
N: 11 "objectclassifier_square" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
N: 17 "pSlice" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
N: 16 "sigma_fibration" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
N: 15 "sigma_fibration_inverse" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
N: 12 "topmap" [body=yes, kind=cnst, prop=no, path="ObjectClassifier", ];
E: 1 4 [weight=1, ];
E: 1 9 [weight=1, ];
E: 1 18 [weight=4, ];
E: 2 4 [weight=1, ];
E: 2 8 [weight=1, ];
E: 2 17 [weight=4, ];
E: 2 18 [weight=2, ];
E: 3 5 [weight=1, ];
E: 3 8 [weight=3, ];
E: 3 17 [weight=14, ];
E: 3 18 [weight=8, ];
E: 4 5 [weight=1, ];
E: 4 18 [weight=26, ];
E: 5 6 [weight=2, ];
E: 5 18 [weight=16, ];
E: 6 13 [weight=3, ];
E: 7 8 [weight=1, ];
E: 7 9 [weight=1, ];
E: 7 17 [weight=4, ];
E: 7 18 [weight=2, ];
E: 8 17 [weight=63, ];
E: 8 18 [weight=65, ];
E: 9 13 [weight=2, ];
E: 9 18 [weight=6, ];
E: 10 11 [weight=5, ];
E: 10 12 [weight=5, ];
E: 11 12 [weight=1, ];
E: 13 14 [weight=1, ];
E: 13 16 [weight=1, ];
E: 13 18 [weight=1, ];
E: 14 15 [weight=13, ];
E: 14 16 [weight=12, ];
E: 14 18 [weight=12, ];
E: 15 18 [weight=2, ];
E: 16 18 [weight=1, ];
