N: 12 "I" [body=yes, kind=cnst, prop=no, path="Cantor.BAut_Cantor_Idempotent", ];
N: 11 "I0" [body=yes, kind=cnst, prop=no, path="Cantor.BAut_Cantor_Idempotent", ];
N: 4 "I0_fixed_iff_fixed" [body=yes, kind=cnst, prop=no, path="Cantor.BAut_Cantor_Idempotent", ];
N: 3 "I0_preserves_inr" [body=yes, kind=cnst, prop=no, path="Cantor.BAut_Cantor_Idempotent", ];
N: 7 "I0nat_flip" [body=yes, kind=cnst, prop=no, path="Cantor.BAut_Cantor_Idempotent", ];
N: 10 "Inat" [body=yes, kind=cnst, prop=no, path="Cantor.BAut_Cantor_Idempotent", ];
N: 2 "J" [body=yes, kind=cnst, prop=no, path="Cantor.BAut_Cantor_Idempotent", ];
N: 14 "ap_f" [body=yes, kind=cnst, prop=no, path="Cantor.BAut_Cantor_Idempotent", ];
N: 13 "ap_ff" [body=yes, kind=cnst, prop=no, path="Cantor.BAut_Cantor_Idempotent", ];
N: 19 "baut_cantor_idem" [body=yes, kind=cnst, prop=no, path="Cantor", ];
N: 16 "f" [body=yes, kind=cnst, prop=no, path="Cantor.BAut_Cantor_Idempotent", ];
N: 9 "f_flip" [body=yes, kind=cnst, prop=no, path="Cantor.BAut_Cantor_Idempotent", ];
N: 6 "f_flip_fixed_iff_inr" [body=yes, kind=cnst, prop=no, path="Cantor.BAut_Cantor_Idempotent", ];
N: 8 "ff_flip" [body=yes, kind=cnst, prop=no, path="Cantor.BAut_Cantor_Idempotent", ];
N: 5 "ff_flip_fixed_iff_inr" [body=yes, kind=cnst, prop=no, path="Cantor.BAut_Cantor_Idempotent", ];
N: 1 "impossible" [body=yes, kind=cnst, prop=no, path="Cantor.BAut_Cantor_Idempotent", ];
N: 17 "not_qidem_baut_cantor_idem" [body=yes, kind=cnst, prop=no, path="Cantor", ];
N: 18 "preidem_baut_cantor_idem" [body=yes, kind=cnst, prop=no, path="Cantor", ];
N: 15 "preidem_f" [body=yes, kind=cnst, prop=no, path="Cantor.BAut_Cantor_Idempotent", ];
E: 1 2 [weight=1, ];
E: 1 3 [weight=1, ];
E: 1 12 [weight=5, ];
E: 1 16 [weight=12, ];
E: 2 12 [weight=4, ];
E: 2 14 [weight=1, ];
E: 2 16 [weight=133, ];
E: 3 4 [weight=1, ];
E: 3 5 [weight=1, ];
E: 3 6 [weight=1, ];
E: 3 8 [weight=2, ];
E: 3 9 [weight=2, ];
E: 3 11 [weight=7, ];
E: 3 16 [weight=2, ];
E: 4 7 [weight=2, ];
E: 4 8 [weight=9, ];
E: 4 9 [weight=7, ];
E: 4 11 [weight=19, ];
E: 4 16 [weight=2, ];
E: 5 8 [weight=24, ];
E: 6 9 [weight=13, ];
E: 7 8 [weight=1, ];
E: 7 9 [weight=1, ];
E: 7 10 [weight=1, ];
E: 7 11 [weight=2, ];
E: 7 12 [weight=2, ];
E: 7 16 [weight=20, ];
E: 10 12 [weight=18, ];
E: 10 13 [weight=1, ];
E: 10 14 [weight=1, ];
E: 10 16 [weight=280, ];
E: 11 12 [weight=1, ];
E: 11 16 [weight=3, ];
E: 12 16 [weight=8, ];
E: 13 16 [weight=111, ];
E: 14 16 [weight=45, ];
E: 15 16 [weight=8, ];
E: 17 1 [weight=1, ];
E: 17 19 [weight=6, ];
E: 18 15 [weight=1, ];
E: 18 19 [weight=1, ];
E: 19 16 [weight=1, ];
