N: 82 "AlmostNegate" [body=yes, kind=cnst, prop=no, path="ring_quote", ];
N: 69 "AlmostRingPreserving_ind" [body=yes, kind=cnst, prop=yes, path="ring_quote", ];
N: 68 "AlmostRingPreserving_rec" [body=yes, kind=cnst, prop=no, path="ring_quote", ];
N: 70 "AlmostRingPreserving_rect" [body=yes, kind=cnst, prop=no, path="ring_quote", ];
N: 67 "AlmostRingPreserving_sind" [body=yes, kind=cnst, prop=no, path="ring_quote", ];
N: 77 "AlmostRing_ind" [body=yes, kind=cnst, prop=yes, path="ring_quote", ];
N: 76 "AlmostRing_rec" [body=yes, kind=cnst, prop=no, path="ring_quote", ];
N: 78 "AlmostRing_rect" [body=yes, kind=cnst, prop=no, path="ring_quote", ];
N: 75 "AlmostRing_sind" [body=yes, kind=cnst, prop=no, path="ring_quote", ];
N: 10 "EqQuote_ind" [body=yes, kind=cnst, prop=yes, path="ring_quote.Quoting", ];
N: 9 "EqQuote_rec" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 11 "EqQuote_rect" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 8 "EqQuote_sind" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 56 "Expr_ind" [body=yes, kind=cnst, prop=yes, path="ring_quote.Quoting", ];
N: 55 "Expr_rec" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 57 "Expr_rect" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 54 "Expr_sind" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 45 "Lookup_ind" [body=yes, kind=cnst, prop=yes, path="ring_quote.Quoting", ];
N: 44 "Lookup_rec" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 46 "Lookup_rect" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 43 "Lookup_sind" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 32 "Quote_ind" [body=yes, kind=cnst, prop=yes, path="ring_quote.Quoting", ];
N: 31 "Quote_rec" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 33 "Quote_rect" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 30 "Quote_sind" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 81 "almost_negate" [body=yes, kind=cnst, prop=no, path="ring_quote", ];
N: 73 "almost_ring_neg_pr" [body=yes, kind=cnst, prop=no, path="ring_quote", ];
N: 74 "almost_ring_semiring" [body=yes, kind=cnst, prop=no, path="ring_quote", ];
N: 65 "almostring_mor_neg" [body=yes, kind=cnst, prop=no, path="ring_quote", ];
N: 66 "almostring_mor_sr_mor" [body=yes, kind=cnst, prop=no, path="ring_quote", ];
N: 3 "eq_quote" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 4 "eq_quote_ok" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 7 "eqquote_l" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 6 "eqquote_r" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 53 "eval" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 5 "eval_eqquote" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 52 "eval_ext" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 36 "eval_map" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 28 "eval_quote" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 14 "eval_quote'" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 37 "expr_map" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 42 "lookup" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 41 "lookup_correct" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 40 "lookup_l" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 39 "lookup_r" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 38 "lookup_single" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 49 "merge" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 51 "noVars" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 29 "quote" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 15 "quote'" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 1 "quote_equality" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 20 "quote_mult" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 21 "quote_mult_ok" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 18 "quote_neg" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 19 "quote_neg_ok" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 16 "quote_new_var" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 17 "quote_old_var" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 24 "quote_one" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 22 "quote_plus" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 23 "quote_plus_ok" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 25 "quote_zero" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 50 "singleton" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 27 "sum_assoc" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 26 "sum_aux" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 2 "sum_forget" [body=yes, kind=cnst, prop=no, path="ring_quote.Quoting", ];
N: 80 "AlmostRing" [kind=inductive, prop=no, path="ring_quote", ];
N: 72 "AlmostRingPreserving" [kind=inductive, prop=no, path="ring_quote", ];
N: 13 "EqQuote" [kind=inductive, prop=no, path="ring_quote.Quoting", ];
N: 64 "Expr" [kind=inductive, prop=no, path="ring_quote.Quoting", ];
N: 48 "Lookup" [kind=inductive, prop=no, path="ring_quote.Quoting", ];
N: 35 "Quote" [kind=inductive, prop=no, path="ring_quote.Quoting", ];
N: 79 "Build_AlmostRing" [kind=construct, prop=no, path="ring_quote", ];
N: 71 "Build_AlmostRingPreserving" [kind=construct, prop=no, path="ring_quote", ];
N: 12 "Build_EqQuote" [kind=construct, prop=no, path="ring_quote.Quoting", ];
N: 63 "Var" [kind=construct, prop=no, path="ring_quote.Quoting", ];
N: 47 "Build_Lookup" [kind=construct, prop=no, path="ring_quote.Quoting", ];
N: 34 "Build_Quote" [kind=construct, prop=no, path="ring_quote.Quoting", ];
N: 62 "Zero" [kind=construct, prop=no, path="ring_quote.Quoting", ];
N: 61 "One" [kind=construct, prop=no, path="ring_quote.Quoting", ];
N: 60 "Plus" [kind=construct, prop=no, path="ring_quote.Quoting", ];
N: 59 "Mult" [kind=construct, prop=no, path="ring_quote.Quoting", ];
N: 58 "Neg" [kind=construct, prop=no, path="ring_quote.Quoting", ];
E: 1 2 [weight=11, ];
E: 1 35 [weight=4, ];
E: 1 36 [weight=1, ];
E: 1 37 [weight=4, ];
E: 1 49 [weight=12, ];
E: 1 51 [weight=10, ];
E: 1 52 [weight=1, ];
E: 1 53 [weight=13, ];
E: 1 82 [weight=2, ];
E: 3 4 [weight=1, ];
E: 3 12 [weight=1, ];
E: 3 13 [weight=1, ];
E: 3 26 [weight=9, ];
E: 3 27 [weight=11, ];
E: 3 35 [weight=4, ];
E: 3 36 [weight=3, ];
E: 3 37 [weight=9, ];
E: 3 49 [weight=82, ];
E: 3 52 [weight=2, ];
E: 3 53 [weight=17, ];
E: 3 82 [weight=2, ];
E: 4 26 [weight=12, ];
E: 4 27 [weight=10, ];
E: 4 35 [weight=4, ];
E: 4 36 [weight=2, ];
E: 4 37 [weight=9, ];
E: 4 49 [weight=75, ];
E: 4 52 [weight=2, ];
E: 4 53 [weight=19, ];
E: 4 82 [weight=2, ];
E: 5 13 [weight=2, ];
E: 5 37 [weight=1, ];
E: 5 49 [weight=2, ];
E: 5 53 [weight=2, ];
E: 5 82 [weight=2, ];
E: 6 13 [weight=2, ];
E: 6 64 [weight=1, ];
E: 6 82 [weight=2, ];
E: 7 13 [weight=2, ];
E: 7 64 [weight=1, ];
E: 7 82 [weight=2, ];
E: 8 12 [weight=2, ];
E: 8 13 [weight=4, ];
E: 8 37 [weight=2, ];
E: 8 49 [weight=4, ];
E: 8 53 [weight=4, ];
E: 8 64 [weight=4, ];
E: 8 82 [weight=2, ];
E: 9 11 [weight=1, ];
E: 9 12 [weight=1, ];
E: 9 13 [weight=3, ];
E: 9 37 [weight=1, ];
E: 9 49 [weight=2, ];
E: 9 53 [weight=2, ];
E: 9 64 [weight=2, ];
E: 9 82 [weight=2, ];
E: 10 12 [weight=2, ];
E: 10 13 [weight=4, ];
E: 10 37 [weight=2, ];
E: 10 49 [weight=4, ];
E: 10 53 [weight=4, ];
E: 10 64 [weight=4, ];
E: 10 82 [weight=2, ];
E: 11 12 [weight=2, ];
E: 11 13 [weight=4, ];
E: 11 37 [weight=2, ];
E: 11 49 [weight=4, ];
E: 11 53 [weight=4, ];
E: 11 64 [weight=4, ];
E: 11 82 [weight=2, ];
E: 12 37 [weight=1, ];
E: 12 49 [weight=2, ];
E: 12 53 [weight=2, ];
E: 12 64 [weight=2, ];
E: 12 82 [weight=1, ];
E: 13 37 [weight=1, ];
E: 13 49 [weight=2, ];
E: 13 53 [weight=2, ];
E: 13 64 [weight=2, ];
E: 13 82 [weight=1, ];
E: 14 28 [weight=1, ];
E: 14 35 [weight=1, ];
E: 14 49 [weight=1, ];
E: 14 51 [weight=3, ];
E: 14 53 [weight=1, ];
E: 14 82 [weight=2, ];
E: 15 29 [weight=1, ];
E: 15 35 [weight=1, ];
E: 15 51 [weight=2, ];
E: 15 64 [weight=1, ];
E: 15 82 [weight=2, ];
E: 16 34 [weight=1, ];
E: 16 35 [weight=1, ];
E: 16 50 [weight=2, ];
E: 16 63 [weight=1, ];
E: 16 82 [weight=2, ];
E: 17 34 [weight=1, ];
E: 17 35 [weight=1, ];
E: 17 48 [weight=2, ];
E: 17 51 [weight=2, ];
E: 17 63 [weight=1, ];
E: 17 82 [weight=2, ];
E: 18 19 [weight=1, ];
E: 18 34 [weight=1, ];
E: 18 35 [weight=3, ];
E: 18 58 [weight=1, ];
E: 18 81 [weight=2, ];
E: 18 82 [weight=2, ];
E: 19 28 [weight=1, ];
E: 19 35 [weight=2, ];
E: 19 49 [weight=3, ];
E: 19 53 [weight=3, ];
E: 19 58 [weight=2, ];
E: 19 81 [weight=3, ];
E: 19 82 [weight=2, ];
E: 20 21 [weight=1, ];
E: 20 26 [weight=1, ];
E: 20 27 [weight=1, ];
E: 20 34 [weight=1, ];
E: 20 35 [weight=5, ];
E: 20 37 [weight=2, ];
E: 20 49 [weight=4, ];
E: 20 59 [weight=1, ];
E: 20 82 [weight=2, ];
E: 21 26 [weight=12, ];
E: 21 27 [weight=13, ];
E: 21 35 [weight=4, ];
E: 21 36 [weight=2, ];
E: 21 37 [weight=11, ];
E: 21 49 [weight=80, ];
E: 21 52 [weight=2, ];
E: 21 53 [weight=23, ];
E: 21 59 [weight=2, ];
E: 21 82 [weight=2, ];
E: 22 23 [weight=1, ];
E: 22 26 [weight=1, ];
E: 22 27 [weight=1, ];
E: 22 34 [weight=1, ];
E: 22 35 [weight=5, ];
E: 22 37 [weight=2, ];
E: 22 49 [weight=4, ];
E: 22 60 [weight=1, ];
E: 22 82 [weight=2, ];
E: 23 26 [weight=12, ];
E: 23 27 [weight=13, ];
E: 23 35 [weight=4, ];
E: 23 36 [weight=2, ];
E: 23 37 [weight=11, ];
E: 23 49 [weight=80, ];
E: 23 52 [weight=2, ];
E: 23 53 [weight=23, ];
E: 23 60 [weight=2, ];
E: 23 82 [weight=2, ];
E: 24 34 [weight=1, ];
E: 24 35 [weight=1, ];
E: 24 51 [weight=2, ];
E: 24 61 [weight=1, ];
E: 24 82 [weight=2, ];
E: 25 34 [weight=1, ];
E: 25 35 [weight=1, ];
E: 25 51 [weight=2, ];
E: 25 62 [weight=1, ];
E: 25 82 [weight=2, ];
E: 28 35 [weight=2, ];
E: 28 49 [weight=1, ];
E: 28 53 [weight=1, ];
E: 28 82 [weight=2, ];
E: 29 35 [weight=2, ];
E: 29 64 [weight=1, ];
E: 29 82 [weight=2, ];
E: 30 34 [weight=2, ];
E: 30 35 [weight=4, ];
E: 30 49 [weight=2, ];
E: 30 53 [weight=2, ];
E: 30 64 [weight=2, ];
E: 30 82 [weight=2, ];
E: 31 33 [weight=1, ];
E: 31 34 [weight=1, ];
E: 31 35 [weight=3, ];
E: 31 49 [weight=1, ];
E: 31 53 [weight=1, ];
E: 31 64 [weight=1, ];
E: 31 82 [weight=2, ];
E: 32 34 [weight=2, ];
E: 32 35 [weight=4, ];
E: 32 49 [weight=2, ];
E: 32 53 [weight=2, ];
E: 32 64 [weight=2, ];
E: 32 82 [weight=2, ];
E: 33 34 [weight=2, ];
E: 33 35 [weight=4, ];
E: 33 49 [weight=2, ];
E: 33 53 [weight=2, ];
E: 33 64 [weight=2, ];
E: 33 82 [weight=2, ];
E: 34 49 [weight=1, ];
E: 34 53 [weight=1, ];
E: 34 64 [weight=1, ];
E: 34 82 [weight=1, ];
E: 35 49 [weight=1, ];
E: 35 53 [weight=1, ];
E: 35 64 [weight=1, ];
E: 35 82 [weight=1, ];
E: 36 37 [weight=18, ];
E: 36 53 [weight=36, ];
E: 36 57 [weight=1, ];
E: 36 58 [weight=2, ];
E: 36 59 [weight=2, ];
E: 36 60 [weight=2, ];
E: 36 61 [weight=2, ];
E: 36 62 [weight=2, ];
E: 36 63 [weight=2, ];
E: 36 64 [weight=8, ];
E: 36 81 [weight=1, ];
E: 36 82 [weight=4, ];
E: 37 58 [weight=1, ];
E: 37 59 [weight=1, ];
E: 37 60 [weight=1, ];
E: 37 61 [weight=1, ];
E: 37 62 [weight=1, ];
E: 37 63 [weight=1, ];
E: 37 64 [weight=7, ];
E: 38 47 [weight=1, ];
E: 38 48 [weight=1, ];
E: 38 50 [weight=2, ];
E: 39 47 [weight=1, ];
E: 39 48 [weight=3, ];
E: 39 49 [weight=2, ];
E: 40 47 [weight=1, ];
E: 40 48 [weight=3, ];
E: 40 49 [weight=2, ];
E: 41 48 [weight=2, ];
E: 42 48 [weight=2, ];
E: 43 47 [weight=2, ];
E: 43 48 [weight=4, ];
E: 44 46 [weight=1, ];
E: 44 47 [weight=1, ];
E: 44 48 [weight=3, ];
E: 45 47 [weight=2, ];
E: 45 48 [weight=4, ];
E: 46 47 [weight=2, ];
E: 46 48 [weight=4, ];
E: 52 53 [weight=38, ];
E: 52 57 [weight=1, ];
E: 52 58 [weight=2, ];
E: 52 59 [weight=2, ];
E: 52 60 [weight=2, ];
E: 52 61 [weight=2, ];
E: 52 62 [weight=2, ];
E: 52 63 [weight=2, ];
E: 52 64 [weight=11, ];
E: 52 81 [weight=1, ];
E: 52 82 [weight=2, ];
E: 53 64 [weight=4, ];
E: 53 81 [weight=1, ];
E: 53 82 [weight=2, ];
E: 54 58 [weight=2, ];
E: 54 59 [weight=2, ];
E: 54 60 [weight=2, ];
E: 54 61 [weight=2, ];
E: 54 62 [weight=2, ];
E: 54 63 [weight=2, ];
E: 54 64 [weight=16, ];
E: 55 57 [weight=1, ];
E: 55 58 [weight=1, ];
E: 55 59 [weight=1, ];
E: 55 60 [weight=1, ];
E: 55 61 [weight=1, ];
E: 55 62 [weight=1, ];
E: 55 63 [weight=1, ];
E: 55 64 [weight=8, ];
E: 56 58 [weight=2, ];
E: 56 59 [weight=2, ];
E: 56 60 [weight=2, ];
E: 56 61 [weight=2, ];
E: 56 62 [weight=2, ];
E: 56 63 [weight=2, ];
E: 56 64 [weight=16, ];
E: 57 58 [weight=2, ];
E: 57 59 [weight=2, ];
E: 57 60 [weight=2, ];
E: 57 61 [weight=2, ];
E: 57 62 [weight=2, ];
E: 57 63 [weight=2, ];
E: 57 64 [weight=16, ];
E: 65 72 [weight=2, ];
E: 65 81 [weight=2, ];
E: 65 82 [weight=4, ];
E: 66 72 [weight=2, ];
E: 66 82 [weight=4, ];
E: 67 71 [weight=2, ];
E: 67 72 [weight=4, ];
E: 67 81 [weight=4, ];
E: 67 82 [weight=4, ];
E: 68 70 [weight=1, ];
E: 68 71 [weight=1, ];
E: 68 72 [weight=3, ];
E: 68 81 [weight=2, ];
E: 68 82 [weight=4, ];
E: 69 71 [weight=2, ];
E: 69 72 [weight=4, ];
E: 69 81 [weight=4, ];
E: 69 82 [weight=4, ];
E: 70 71 [weight=2, ];
E: 70 72 [weight=4, ];
E: 70 81 [weight=4, ];
E: 70 82 [weight=4, ];
E: 71 81 [weight=2, ];
E: 71 82 [weight=2, ];
E: 72 81 [weight=2, ];
E: 72 82 [weight=2, ];
E: 73 80 [weight=2, ];
E: 73 81 [weight=2, ];
E: 73 82 [weight=2, ];
E: 74 80 [weight=2, ];
E: 74 82 [weight=2, ];
E: 75 79 [weight=2, ];
E: 75 80 [weight=4, ];
E: 75 81 [weight=4, ];
E: 75 82 [weight=2, ];
E: 76 78 [weight=1, ];
E: 76 79 [weight=1, ];
E: 76 80 [weight=3, ];
E: 76 81 [weight=2, ];
E: 76 82 [weight=2, ];
E: 77 79 [weight=2, ];
E: 77 80 [weight=4, ];
E: 77 81 [weight=4, ];
E: 77 82 [weight=2, ];
E: 78 79 [weight=2, ];
E: 78 80 [weight=4, ];
E: 78 81 [weight=4, ];
E: 78 82 [weight=2, ];
E: 79 81 [weight=2, ];
E: 79 82 [weight=1, ];
E: 80 81 [weight=2, ];
E: 80 82 [weight=1, ];
E: 81 82 [weight=2, ];
