N: 41 "ab_commutator" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 5 "abgroup_derived_quotient" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 4 "abgroup_derived_quotient_rec" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 6 "commutative_grp_derived_quotient" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 18 "functor_subgroup_commutator" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 46 "grp_commutator" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 44 "grp_commutator_cancel" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 45 "grp_commutator_commutes" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 39 "grp_commutator_inv" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 33 "grp_commutator_inv_l" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 32 "grp_commutator_inv_r" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 37 "grp_commutator_op_l" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 36 "grp_commutator_op_r" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 40 "grp_commutator_swap_op" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 43 "grp_commutator_unit_l" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 42 "grp_commutator_unit_r" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 31 "grp_conj_commutator_inv_l" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 30 "grp_conj_commutator_inv_r" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 7 "grp_derived_quotient" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 29 "grp_hall_witt" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 28 "grp_hall_witt'" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 38 "grp_homo_commutator" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 35 "grp_op_l_commutator" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 34 "grp_op_r_commutator" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 3 "isabelianization_derived_quotient" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 12 "isnormal_subgroup_commutator" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 26 "issubgroup_precomp_commutator_agree" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 27 "issubgroup_precomp_commutator_l" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 25 "issubgroup_precomp_commutator_r" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 13 "istrivial_commutator_subgroup_ab" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 8 "normalsubgroup_derived" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 22 "subgroup_commutator" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 20 "subgroup_commutator_2_rec" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 19 "subgroup_commutator_in" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 11 "subgroup_commutator_normal_prod_l" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 10 "subgroup_commutator_normal_prod_r" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 21 "subgroup_commutator_rec" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 15 "subgroup_commutator_symm" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 17 "subgroup_eq_commutator" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 14 "subgroup_eq_commutator_grp_op" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 9 "subgroup_image_commutator_incl" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 16 "subgroup_incl_commutator_symm" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 24 "subgroup_precomp_commutator_l" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 23 "subgroup_precomp_commutator_r" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 2 "three_subgroups_lemma" [body=yes, kind=cnst, prop=no, path="Commutator", ];
N: 1 "three_trivial_commutators" [body=yes, kind=cnst, prop=no, path="Commutator", ];
E: 1 2 [weight=1, ];
E: 1 22 [weight=6, ];
E: 2 19 [weight=4, ];
E: 2 20 [weight=1, ];
E: 2 22 [weight=26, ];
E: 2 28 [weight=1, ];
E: 2 46 [weight=122, ];
E: 3 4 [weight=2, ];
E: 3 5 [weight=38, ];
E: 3 8 [weight=15, ];
E: 4 5 [weight=1, ];
E: 4 8 [weight=1, ];
E: 4 21 [weight=1, ];
E: 4 38 [weight=1, ];
E: 4 41 [weight=1, ];
E: 4 46 [weight=2, ];
E: 5 6 [weight=1, ];
E: 5 7 [weight=1, ];
E: 6 7 [weight=34, ];
E: 6 8 [weight=17, ];
E: 6 46 [weight=5, ];
E: 7 8 [weight=1, ];
E: 8 12 [weight=1, ];
E: 8 22 [weight=1, ];
E: 9 19 [weight=1, ];
E: 9 21 [weight=1, ];
E: 9 22 [weight=6, ];
E: 9 38 [weight=1, ];
E: 9 46 [weight=2, ];
E: 10 11 [weight=1, ];
E: 10 15 [weight=3, ];
E: 10 22 [weight=21, ];
E: 11 12 [weight=6, ];
E: 11 18 [weight=2, ];
E: 11 19 [weight=2, ];
E: 11 21 [weight=1, ];
E: 11 22 [weight=43, ];
E: 11 24 [weight=3, ];
E: 11 46 [weight=2, ];
E: 12 22 [weight=2, ];
E: 12 38 [weight=1, ];
E: 12 46 [weight=14, ];
E: 13 21 [weight=1, ];
E: 13 22 [weight=1, ];
E: 13 41 [weight=1, ];
E: 14 22 [weight=2, ];
E: 14 38 [weight=1, ];
E: 14 39 [weight=1, ];
E: 14 46 [weight=27, ];
E: 15 16 [weight=2, ];
E: 15 22 [weight=4, ];
E: 16 19 [weight=1, ];
E: 16 21 [weight=1, ];
E: 16 22 [weight=5, ];
E: 16 39 [weight=1, ];
E: 16 46 [weight=3, ];
E: 17 18 [weight=2, ];
E: 17 22 [weight=4, ];
E: 18 19 [weight=1, ];
E: 18 21 [weight=1, ];
E: 18 22 [weight=3, ];
E: 19 22 [weight=1, ];
E: 19 46 [weight=10, ];
E: 20 21 [weight=2, ];
E: 20 22 [weight=4, ];
E: 20 24 [weight=1, ];
E: 20 46 [weight=4, ];
E: 21 22 [weight=1, ];
E: 21 46 [weight=9, ];
E: 22 46 [weight=1, ];
E: 23 25 [weight=1, ];
E: 23 46 [weight=1, ];
E: 24 27 [weight=1, ];
E: 24 46 [weight=1, ];
E: 25 26 [weight=1, ];
E: 25 27 [weight=1, ];
E: 25 46 [weight=3, ];
E: 26 39 [weight=1, ];
E: 26 46 [weight=10, ];
E: 27 33 [weight=1, ];
E: 27 37 [weight=1, ];
E: 27 39 [weight=1, ];
E: 27 43 [weight=1, ];
E: 27 46 [weight=25, ];
E: 28 29 [weight=1, ];
E: 28 31 [weight=3, ];
E: 28 38 [weight=3, ];
E: 28 46 [weight=54, ];
E: 29 46 [weight=12, ];
E: 30 46 [weight=4, ];
E: 31 46 [weight=4, ];
E: 32 46 [weight=4, ];
E: 33 46 [weight=4, ];
E: 34 46 [weight=2, ];
E: 35 46 [weight=2, ];
E: 36 46 [weight=6, ];
E: 37 46 [weight=6, ];
E: 38 46 [weight=4, ];
E: 39 46 [weight=4, ];
E: 40 46 [weight=2, ];
E: 41 45 [weight=1, ];
E: 41 46 [weight=1, ];
E: 42 45 [weight=1, ];
E: 42 46 [weight=1, ];
E: 43 45 [weight=1, ];
E: 43 46 [weight=1, ];
E: 44 45 [weight=1, ];
E: 44 46 [weight=1, ];
E: 45 46 [weight=2, ];
