N: 35 "CarriersTermAlgebra_ind" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 33 "CarriersTermAlgebra_rec" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 34 "CarriersTermAlgebra_rect" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 32 "ExtendDRelTermAlgebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 23 "ExtendPathTermAlgebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 31 "ExtendRelTermAlgebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 12 "TermAlgebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 16 "dependent_path_extend_path_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 13 "equiv_path_extend_path_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 18 "equivrel_extend_path_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 24 "equivrel_extend_rel_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 6 "hom_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 30 "hprop_extend_drel_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 17 "hprop_extend_path_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 14 "hset_carriers_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 9 "is_congruence_extend_rel_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 7 "is_homomorphism_map_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 2 "isequiv_precomp_var_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 10 "isinj_ops_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 11 "isinj_var_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 8 "map_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 15 "path_extend_path_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 3 "path_hom_term_algebra_to_precomp_var_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 4 "path_precomp_var_term_algebra_to_hom_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 5 "precomp_var_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 22 "reflexive_extend_path_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 21 "reflexive_extend_path_term_algebra_path" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 29 "reflexive_extend_rel_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 28 "symmetric_extend_drel_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 20 "symmetric_extend_path_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 27 "symmetric_extend_rel_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 26 "transitive_extend_drel_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 19 "transitive_extend_path_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 25 "transitive_extend_rel_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 1 "ump_term_algebra" [body=yes, kind=cnst, prop=no, path="TermAlgebra", ];
N: 38 "CarriersTermAlgebra" [kind=inductive, prop=no, path="TermAlgebra", ];
N: 37 "var_term_algebra" [kind=construct, prop=no, path="TermAlgebra", ];
N: 36 "ops_term_algebra" [kind=construct, prop=no, path="TermAlgebra", ];
E: 1 2 [weight=1, ];
E: 1 5 [weight=1, ];
E: 1 12 [weight=2, ];
E: 2 3 [weight=1, ];
E: 2 4 [weight=1, ];
E: 2 5 [weight=4, ];
E: 2 6 [weight=3, ];
E: 2 12 [weight=12, ];
E: 3 5 [weight=5, ];
E: 3 6 [weight=5, ];
E: 4 5 [weight=12, ];
E: 4 6 [weight=9, ];
E: 4 12 [weight=13, ];
E: 4 34 [weight=1, ];
E: 4 36 [weight=1, ];
E: 4 37 [weight=1, ];
E: 4 38 [weight=14, ];
E: 5 12 [weight=2, ];
E: 5 37 [weight=1, ];
E: 6 7 [weight=1, ];
E: 6 8 [weight=1, ];
E: 6 12 [weight=2, ];
E: 7 8 [weight=5, ];
E: 7 12 [weight=5, ];
E: 7 38 [weight=6, ];
E: 8 33 [weight=1, ];
E: 8 38 [weight=3, ];
E: 9 12 [weight=9, ];
E: 9 24 [weight=1, ];
E: 9 30 [weight=1, ];
E: 9 31 [weight=5, ];
E: 9 32 [weight=1, ];
E: 10 15 [weight=1, ];
E: 10 21 [weight=1, ];
E: 10 23 [weight=1, ];
E: 10 32 [weight=3, ];
E: 10 36 [weight=8, ];
E: 10 38 [weight=10, ];
E: 11 21 [weight=1, ];
E: 11 23 [weight=1, ];
E: 11 37 [weight=8, ];
E: 11 38 [weight=2, ];
E: 12 14 [weight=1, ];
E: 12 36 [weight=1, ];
E: 12 38 [weight=1, ];
E: 13 14 [weight=1, ];
E: 13 15 [weight=1, ];
E: 13 17 [weight=1, ];
E: 13 21 [weight=1, ];
E: 13 23 [weight=2, ];
E: 13 38 [weight=7, ];
E: 14 15 [weight=1, ];
E: 14 17 [weight=1, ];
E: 14 22 [weight=1, ];
E: 14 23 [weight=1, ];
E: 14 38 [weight=2, ];
E: 15 16 [weight=1, ];
E: 15 23 [weight=2, ];
E: 15 38 [weight=14, ];
E: 16 32 [weight=13, ];
E: 16 34 [weight=1, ];
E: 16 36 [weight=17, ];
E: 16 37 [weight=15, ];
E: 16 38 [weight=58, ];
E: 17 23 [weight=1, ];
E: 17 30 [weight=1, ];
E: 17 38 [weight=4, ];
E: 18 19 [weight=1, ];
E: 18 20 [weight=1, ];
E: 18 22 [weight=1, ];
E: 18 23 [weight=2, ];
E: 18 38 [weight=2, ];
E: 19 23 [weight=1, ];
E: 19 25 [weight=1, ];
E: 19 38 [weight=1, ];
E: 20 23 [weight=1, ];
E: 20 27 [weight=1, ];
E: 20 38 [weight=1, ];
E: 21 22 [weight=1, ];
E: 21 23 [weight=2, ];
E: 21 38 [weight=9, ];
E: 22 23 [weight=1, ];
E: 22 29 [weight=1, ];
E: 22 38 [weight=1, ];
E: 23 31 [weight=1, ];
E: 23 38 [weight=4, ];
E: 24 25 [weight=1, ];
E: 24 27 [weight=1, ];
E: 24 29 [weight=1, ];
E: 24 31 [weight=2, ];
E: 24 38 [weight=2, ];
E: 25 26 [weight=1, ];
E: 25 31 [weight=2, ];
E: 25 38 [weight=5, ];
E: 26 32 [weight=51, ];
E: 26 34 [weight=1, ];
E: 26 36 [weight=22, ];
E: 26 37 [weight=22, ];
E: 26 38 [weight=34, ];
E: 27 28 [weight=1, ];
E: 27 31 [weight=2, ];
E: 27 38 [weight=4, ];
E: 28 32 [weight=23, ];
E: 28 34 [weight=1, ];
E: 28 36 [weight=10, ];
E: 28 37 [weight=10, ];
E: 28 38 [weight=16, ];
E: 29 31 [weight=4, ];
E: 29 32 [weight=1, ];
E: 29 34 [weight=1, ];
E: 29 38 [weight=5, ];
E: 30 32 [weight=5, ];
E: 30 34 [weight=1, ];
E: 30 36 [weight=1, ];
E: 30 37 [weight=1, ];
E: 30 38 [weight=28, ];
E: 31 32 [weight=1, ];
E: 31 38 [weight=2, ];
E: 32 38 [weight=9, ];
E: 33 35 [weight=1, ];
E: 33 38 [weight=5, ];
E: 34 35 [weight=1, ];
E: 34 36 [weight=1, ];
E: 34 37 [weight=1, ];
E: 34 38 [weight=3, ];
E: 35 36 [weight=2, ];
E: 35 37 [weight=2, ];
E: 35 38 [weight=8, ];
