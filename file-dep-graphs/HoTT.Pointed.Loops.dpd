N: 27 "conn_map_fmap_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 26 "conn_map_iterated_fmap_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 3 "equiv_istrunc_contr_iterated_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 4 "equiv_istrunc_istrunc_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 24 "equiv_loops_image" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 25 "equiv_loops_image_subproof" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 1 "equiv_loops_ppforall" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 30 "fmap_iterated_loops_pp" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 33 "fmap_loops_pconst" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 35 "fmap_loops_pp" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 29 "hfiber_fmap_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 32 "is0functor_iterated_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 37 "is0functor_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 31 "is1functor_iterated_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 36 "is1functor_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 2 "is1natural_loops_inv" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 39 "isconnected_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 44 "ispointed_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 34 "ispointedfunctor_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 28 "istrunc_fmap_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 40 "istrunc_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 11 "istrunc_pfam_loopsD" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 42 "iterated_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 8 "iterated_loops_pproduct_commute" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 15 "iterated_loops_prod" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 5 "local_global_looping" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 43 "loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 12 "loopsD" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 23 "loops_inv" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 9 "loops_pproduct_commute" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 18 "loops_prod" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 10 "loops_psigma_commute" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 7 "loops_psigma_trunc" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 6 "loops_type" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 19 "pequiv_fmap_iterated_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 22 "pequiv_fmap_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 38 "pequiv_loops_punit" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 14 "pfst_iterated_loops_prod" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 17 "pfst_loops_prod" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 13 "psnd_iterated_loops_prod" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 16 "psnd_loops_prod" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 20 "unfold_iterated_fmap_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 41 "unfold_iterated_loops" [body=yes, kind=cnst, prop=no, path="Loops", ];
N: 21 "unfold_iterated_loops'" [body=yes, kind=cnst, prop=no, path="Loops", ];
E: 1 43 [weight=9, ];
E: 2 23 [weight=37, ];
E: 2 37 [weight=24, ];
E: 2 43 [weight=167, ];
E: 3 4 [weight=1, ];
E: 3 21 [weight=1, ];
E: 3 31 [weight=1, ];
E: 3 32 [weight=1, ];
E: 3 42 [weight=31, ];
E: 3 43 [weight=40, ];
E: 4 43 [weight=6, ];
E: 5 6 [weight=1, ];
E: 5 9 [weight=1, ];
E: 5 36 [weight=2, ];
E: 5 37 [weight=2, ];
E: 5 42 [weight=22, ];
E: 5 43 [weight=14, ];
E: 6 43 [weight=6, ];
E: 7 10 [weight=1, ];
E: 7 11 [weight=1, ];
E: 7 12 [weight=3, ];
E: 7 21 [weight=2, ];
E: 7 31 [weight=1, ];
E: 7 32 [weight=1, ];
E: 7 42 [weight=23, ];
E: 7 43 [weight=10, ];
E: 8 9 [weight=1, ];
E: 8 36 [weight=1, ];
E: 8 37 [weight=1, ];
E: 8 42 [weight=8, ];
E: 8 43 [weight=8, ];
E: 9 43 [weight=7, ];
E: 10 12 [weight=5, ];
E: 10 43 [weight=7, ];
E: 11 12 [weight=2, ];
E: 11 43 [weight=3, ];
E: 12 43 [weight=5, ];
E: 13 15 [weight=18, ];
E: 13 16 [weight=1, ];
E: 13 18 [weight=7, ];
E: 13 32 [weight=9, ];
E: 13 36 [weight=2, ];
E: 13 37 [weight=16, ];
E: 13 42 [weight=418, ];
E: 13 43 [weight=123, ];
E: 14 15 [weight=18, ];
E: 14 17 [weight=1, ];
E: 14 18 [weight=7, ];
E: 14 32 [weight=9, ];
E: 14 36 [weight=2, ];
E: 14 37 [weight=16, ];
E: 14 42 [weight=418, ];
E: 14 43 [weight=123, ];
E: 15 18 [weight=1, ];
E: 15 36 [weight=1, ];
E: 15 37 [weight=1, ];
E: 15 42 [weight=53, ];
E: 15 43 [weight=7, ];
E: 15 44 [weight=2, ];
E: 16 18 [weight=7, ];
E: 16 37 [weight=8, ];
E: 16 43 [weight=108, ];
E: 17 18 [weight=7, ];
E: 17 37 [weight=8, ];
E: 17 43 [weight=108, ];
E: 18 43 [weight=22, ];
E: 18 44 [weight=10, ];
E: 19 31 [weight=1, ];
E: 19 32 [weight=1, ];
E: 19 42 [weight=3, ];
E: 20 21 [weight=18, ];
E: 20 22 [weight=11, ];
E: 20 32 [weight=18, ];
E: 20 36 [weight=3, ];
E: 20 37 [weight=38, ];
E: 20 42 [weight=228, ];
E: 20 43 [weight=303, ];
E: 21 22 [weight=1, ];
E: 21 42 [weight=8, ];
E: 21 43 [weight=6, ];
E: 22 36 [weight=1, ];
E: 22 37 [weight=1, ];
E: 22 43 [weight=3, ];
E: 23 43 [weight=9, ];
E: 24 25 [weight=1, ];
E: 24 27 [weight=1, ];
E: 24 28 [weight=1, ];
E: 24 36 [weight=1, ];
E: 24 37 [weight=20, ];
E: 24 43 [weight=26, ];
E: 25 43 [weight=2, ];
E: 26 27 [weight=1, ];
E: 26 32 [weight=3, ];
E: 26 37 [weight=1, ];
E: 26 42 [weight=8, ];
E: 26 43 [weight=4, ];
E: 27 29 [weight=1, ];
E: 27 37 [weight=4, ];
E: 27 43 [weight=13, ];
E: 28 29 [weight=1, ];
E: 28 37 [weight=3, ];
E: 28 43 [weight=10, ];
E: 29 37 [weight=2, ];
E: 29 43 [weight=11, ];
E: 30 32 [weight=3, ];
E: 30 35 [weight=1, ];
E: 30 37 [weight=1, ];
E: 30 42 [weight=8, ];
E: 30 43 [weight=25, ];
E: 31 32 [weight=3, ];
E: 31 36 [weight=1, ];
E: 31 37 [weight=2, ];
E: 31 42 [weight=6, ];
E: 31 43 [weight=4, ];
E: 32 37 [weight=1, ];
E: 32 42 [weight=3, ];
E: 32 43 [weight=2, ];
E: 33 34 [weight=1, ];
E: 33 36 [weight=1, ];
E: 33 37 [weight=2, ];
E: 33 43 [weight=6, ];
E: 34 36 [weight=2, ];
E: 34 37 [weight=2, ];
E: 34 38 [weight=1, ];
E: 34 43 [weight=2, ];
E: 35 37 [weight=9, ];
E: 35 43 [weight=10, ];
E: 36 37 [weight=48, ];
E: 36 43 [weight=357, ];
E: 37 43 [weight=9, ];
E: 38 43 [weight=2, ];
E: 39 43 [weight=1, ];
E: 40 43 [weight=1, ];
E: 41 42 [weight=2, ];
E: 41 43 [weight=2, ];
E: 42 43 [weight=1, ];
