N: 20 "app" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 13 "decomp_eq" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 19 "foldr" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 18 "foldr1" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 15 "from_list" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 9 "front" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 17 "head" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 2 "inits" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 12 "last" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 3 "list_map" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 4 "map" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 23 "ne_list_ind" [body=yes, kind=cnst, prop=yes, path="ne_list.ne_list", ];
N: 22 "ne_list_rec" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 24 "ne_list_rect" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 21 "ne_list_sind" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 11 "replicate_Sn" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 14 "tail" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 7 "tail_length" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 6 "tails" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 5 "tails_are_shorter" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 10 "take" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 16 "to_list" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 8 "two_level_rect" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 1 "zip" [body=yes, kind=cnst, prop=no, path="ne_list.ne_list", ];
N: 27 "ne_list" [kind=inductive, prop=no, path="ne_list.ne_list", ];
N: 26 "one" [kind=construct, prop=no, path="ne_list.ne_list", ];
N: 25 "cons" [kind=construct, prop=no, path="ne_list.ne_list", ];
E: 1 17 [weight=1, ];
E: 1 25 [weight=1, ];
E: 1 26 [weight=2, ];
E: 1 27 [weight=12, ];
E: 2 4 [weight=1, ];
E: 2 25 [weight=2, ];
E: 2 26 [weight=3, ];
E: 2 27 [weight=14, ];
E: 3 4 [weight=7, ];
E: 3 16 [weight=13, ];
E: 3 24 [weight=1, ];
E: 3 25 [weight=2, ];
E: 3 26 [weight=1, ];
E: 3 27 [weight=4, ];
E: 4 25 [weight=1, ];
E: 4 26 [weight=1, ];
E: 4 27 [weight=7, ];
E: 5 6 [weight=8, ];
E: 5 16 [weight=28, ];
E: 5 24 [weight=1, ];
E: 5 25 [weight=6, ];
E: 5 26 [weight=6, ];
E: 5 27 [weight=30, ];
E: 6 25 [weight=1, ];
E: 6 26 [weight=2, ];
E: 6 27 [weight=12, ];
E: 7 16 [weight=6, ];
E: 7 25 [weight=1, ];
E: 7 26 [weight=1, ];
E: 7 27 [weight=4, ];
E: 8 24 [weight=1, ];
E: 8 25 [weight=32, ];
E: 8 26 [weight=9, ];
E: 8 27 [weight=15, ];
E: 9 27 [weight=4, ];
E: 10 17 [weight=2, ];
E: 10 26 [weight=2, ];
E: 10 27 [weight=8, ];
E: 11 25 [weight=1, ];
E: 11 26 [weight=1, ];
E: 11 27 [weight=3, ];
E: 12 18 [weight=1, ];
E: 12 27 [weight=1, ];
E: 13 14 [weight=10, ];
E: 13 15 [weight=13, ];
E: 13 16 [weight=3, ];
E: 13 17 [weight=10, ];
E: 13 24 [weight=1, ];
E: 13 25 [weight=18, ];
E: 13 26 [weight=7, ];
E: 13 27 [weight=20, ];
E: 14 16 [weight=1, ];
E: 14 27 [weight=3, ];
E: 15 25 [weight=1, ];
E: 15 26 [weight=1, ];
E: 15 27 [weight=3, ];
E: 16 27 [weight=4, ];
E: 17 27 [weight=3, ];
E: 18 27 [weight=4, ];
E: 19 27 [weight=4, ];
E: 20 25 [weight=2, ];
E: 20 27 [weight=10, ];
E: 21 25 [weight=2, ];
E: 21 26 [weight=2, ];
E: 21 27 [weight=8, ];
E: 22 24 [weight=1, ];
E: 22 25 [weight=1, ];
E: 22 26 [weight=1, ];
E: 22 27 [weight=4, ];
E: 23 25 [weight=2, ];
E: 23 26 [weight=2, ];
E: 23 27 [weight=8, ];
E: 24 25 [weight=2, ];
E: 24 26 [weight=2, ];
E: 24 27 [weight=8, ];
