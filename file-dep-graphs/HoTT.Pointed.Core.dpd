N: 113 "Build_pHomotopy" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 119 "Build_pMap" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 129 "IsTrunc_pFam" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 56 "contr_pmap_from_contr" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 131 "dpoint" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 120 "dpoint_eq" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 85 "equiv_extension_along_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 82 "equiv_functor_pprod" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 35 "equiv_inverse_path_pforall_1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 13 "equiv_path_pequiv" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 14 "equiv_path_pequiv'" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 37 "equiv_path_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 19 "equiv_path_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 11 "equiv_phomotopy_concat_l" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 4 "equiv_pointify_map" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 84 "equiv_pprod_coind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 83 "functor_pprod" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 38 "hasallproducts_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 39 "hasbinaryproducts_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 9 "hasequivs_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 8 "hasmorext_core_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 10 "hasmorext_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 52 "is01cat_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 53 "is01cat_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 41 "is0functor_pointed_type" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 5 "is0functor_pointify" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 49 "is0gpd_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 45 "is1cat_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 48 "is1cat_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 40 "is1functor_pointed_type" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 44 "is1gpd_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 42 "is21cat_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 50 "is2graph_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 51 "is2graph_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 43 "is3graph_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 15 "isequiv_pequiv_path" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 54 "isgraph_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 55 "isgraph_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 23 "ishprop_phomotopy_hset" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 139 "ispointed_prod" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 140 "ispointed_sigma" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 142 "ispointed_unit" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 47 "ispointedcat_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 87 "issig_pequiv" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 86 "issig_pequiv'" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 90 "issig_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 88 "issig_phomotopy" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 89 "issig_pmap" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 91 "issig_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 7 "isunivalent_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 3 "natequiv_pointify_r" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 107 "pEquiv_ind" [body=yes, kind=cnst, prop=yes, path="Core", ];
N: 106 "pEquiv_rec" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 108 "pEquiv_rect" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 105 "pEquiv_sind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 135 "pFam_ind" [body=yes, kind=cnst, prop=yes, path="Core", ];
N: 134 "pFam_rec" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 136 "pFam_rect" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 133 "pFam_sind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 124 "pForall_ind" [body=yes, kind=cnst, prop=yes, path="Core", ];
N: 123 "pForall_rec" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 125 "pForall_rect" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 122 "pForall_sind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 2 "pHom" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 114 "pHomotopy" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 141 "pUnit" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 32 "path_equiv_path_pforall_phomotopy_path" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 12 "path_pequiv" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 36 "path_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 34 "path_pforall_1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 18 "path_ptype" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 46 "path_zero_morphism_pconst" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 60 "pconst" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 20 "peisretr" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 21 "peissect" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 22 "pequiv_inverse" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 17 "pequiv_path" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 16 "pequiv_path_equiv_path_ptype_inverse" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 101 "pequiv_pmap_idmap" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 130 "pfam_const" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 115 "pfam_phomotopy" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 132 "pfam_pr1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 1 "pfmap" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 96 "pfst" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 66 "phomotopy_compose_1p" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 64 "phomotopy_compose_Vp" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 68 "phomotopy_compose_assoc" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 67 "phomotopy_compose_p1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 65 "phomotopy_compose_pV" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 24 "phomotopy_homotopy_hset" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 28 "phomotopy_ind" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 27 "phomotopy_ind'" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 26 "phomotopy_ind_1" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 25 "phomotopy_ind_1'" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 33 "phomotopy_path" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 30 "phomotopy_path2" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 29 "phomotopy_path_V" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 31 "phomotopy_path_pp" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 70 "phomotopy_postwhisker" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 69 "phomotopy_prewhisker" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 81 "phomotopy_reflexive" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 80 "phomotopy_reflexive'" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 79 "phomotopy_symmetric" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 78 "phomotopy_symmetric'" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 77 "phomotopy_transitive" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 76 "phomotopy_transitive'" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 116 "pmap_compose" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 73 "pmap_compose_assoc" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 117 "pmap_idmap" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 71 "pmap_postcompose_idmap" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 75 "pmap_postwhisker" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 72 "pmap_precompose_idmap" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 74 "pmap_prewhisker" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 58 "pmap_punit_pconst" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 118 "point_eq" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 111 "point_htpy" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 62 "point_pforall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 102 "pointed_equiv_equiv" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 104 "pointed_equiv_fun" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 63 "pointed_fam" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 121 "pointed_fun" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 112 "pointed_htpy" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 103 "pointed_isequiv" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 6 "pointify" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 61 "ppForall" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 59 "ppMap" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 94 "pprod_corec" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 93 "pprod_corec_beta_fst" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 92 "pprod_corec_beta_snd" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 99 "pproduct" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 98 "pproduct_corec" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 97 "pproduct_proj" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 100 "psigma" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 95 "psnd" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 57 "punit_pmap_pconst" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 128 "trunc_pfam_is_trunc" [body=yes, kind=cnst, prop=no, path="Core", ];
N: 110 "pEquiv" [kind=inductive, prop=no, path="Core", ];
N: 138 "pFam" [kind=inductive, prop=no, path="Core", ];
N: 127 "pForall" [kind=inductive, prop=no, path="Core", ];
N: 109 "Build_pEquiv" [kind=construct, prop=no, path="Core", ];
N: 137 "Build_pFam" [kind=construct, prop=no, path="Core", ];
N: 126 "Build_pForall" [kind=construct, prop=no, path="Core", ];
E: 1 2 [weight=9, ];
E: 1 119 [weight=1, ];
E: 1 127 [weight=1, ];
E: 1 130 [weight=1, ];
E: 3 4 [weight=4, ];
E: 3 6 [weight=17, ];
E: 3 41 [weight=4, ];
E: 3 53 [weight=4, ];
E: 3 55 [weight=25, ];
E: 3 127 [weight=2, ];
E: 3 137 [weight=2, ];
E: 4 6 [weight=91, ];
E: 4 37 [weight=1, ];
E: 4 113 [weight=1, ];
E: 4 119 [weight=5, ];
E: 4 126 [weight=29, ];
E: 4 127 [weight=23, ];
E: 4 130 [weight=38, ];
E: 4 137 [weight=32, ];
E: 5 6 [weight=7, ];
E: 5 55 [weight=2, ];
E: 5 119 [weight=1, ];
E: 7 9 [weight=7, ];
E: 7 14 [weight=1, ];
E: 7 15 [weight=1, ];
E: 7 17 [weight=4, ];
E: 7 48 [weight=7, ];
E: 7 51 [weight=7, ];
E: 7 53 [weight=7, ];
E: 7 55 [weight=7, ];
E: 7 110 [weight=8, ];
E: 7 127 [weight=2, ];
E: 7 130 [weight=2, ];
E: 8 9 [weight=29, ];
E: 8 10 [weight=1, ];
E: 8 14 [weight=3, ];
E: 8 48 [weight=29, ];
E: 8 51 [weight=29, ];
E: 8 53 [weight=29, ];
E: 8 55 [weight=37, ];
E: 8 110 [weight=3, ];
E: 8 127 [weight=3, ];
E: 8 130 [weight=3, ];
E: 9 20 [weight=1, ];
E: 9 21 [weight=1, ];
E: 9 22 [weight=4, ];
E: 9 48 [weight=12, ];
E: 9 51 [weight=7, ];
E: 9 53 [weight=10, ];
E: 9 55 [weight=31, ];
E: 9 80 [weight=1, ];
E: 9 109 [weight=2, ];
E: 9 110 [weight=14, ];
E: 9 114 [weight=3, ];
E: 9 116 [weight=3, ];
E: 9 117 [weight=3, ];
E: 9 127 [weight=1, ];
E: 9 130 [weight=5, ];
E: 10 37 [weight=4, ];
E: 10 48 [weight=10, ];
E: 10 51 [weight=6, ];
E: 10 53 [weight=2, ];
E: 10 55 [weight=12, ];
E: 10 114 [weight=8, ];
E: 10 127 [weight=10, ];
E: 10 130 [weight=22, ];
E: 11 37 [weight=3, ];
E: 11 114 [weight=9, ];
E: 11 127 [weight=16, ];
E: 11 130 [weight=28, ];
E: 12 13 [weight=1, ];
E: 12 110 [weight=5, ];
E: 12 114 [weight=1, ];
E: 12 130 [weight=1, ];
E: 13 14 [weight=1, ];
E: 13 37 [weight=1, ];
E: 13 110 [weight=6, ];
E: 13 114 [weight=2, ];
E: 13 127 [weight=1, ];
E: 13 130 [weight=4, ];
E: 14 87 [weight=7, ];
E: 14 110 [weight=15, ];
E: 14 127 [weight=32, ];
E: 14 130 [weight=32, ];
E: 15 17 [weight=1, ];
E: 15 19 [weight=2, ];
E: 15 110 [weight=2, ];
E: 16 17 [weight=2, ];
E: 16 19 [weight=1, ];
E: 16 110 [weight=2, ];
E: 17 101 [weight=1, ];
E: 17 110 [weight=2, ];
E: 18 19 [weight=1, ];
E: 18 110 [weight=1, ];
E: 19 101 [weight=1, ];
E: 19 109 [weight=4, ];
E: 19 110 [weight=32, ];
E: 19 126 [weight=45, ];
E: 19 127 [weight=10, ];
E: 19 130 [weight=91, ];
E: 20 22 [weight=8, ];
E: 20 109 [weight=15, ];
E: 20 110 [weight=4, ];
E: 20 113 [weight=1, ];
E: 20 114 [weight=1, ];
E: 20 116 [weight=8, ];
E: 20 117 [weight=10, ];
E: 20 118 [weight=2, ];
E: 20 126 [weight=16, ];
E: 20 127 [weight=1, ];
E: 20 130 [weight=32, ];
E: 21 22 [weight=5, ];
E: 21 109 [weight=19, ];
E: 21 110 [weight=4, ];
E: 21 113 [weight=1, ];
E: 21 114 [weight=1, ];
E: 21 116 [weight=5, ];
E: 21 117 [weight=6, ];
E: 21 118 [weight=8, ];
E: 21 126 [weight=20, ];
E: 21 127 [weight=1, ];
E: 21 130 [weight=31, ];
E: 22 109 [weight=1, ];
E: 22 110 [weight=3, ];
E: 22 118 [weight=1, ];
E: 22 119 [weight=1, ];
E: 23 88 [weight=1, ];
E: 23 114 [weight=2, ];
E: 23 127 [weight=4, ];
E: 23 130 [weight=29, ];
E: 24 113 [weight=1, ];
E: 24 114 [weight=1, ];
E: 24 127 [weight=4, ];
E: 24 130 [weight=14, ];
E: 25 26 [weight=1, ];
E: 25 27 [weight=1, ];
E: 25 34 [weight=2, ];
E: 25 36 [weight=4, ];
E: 25 37 [weight=4, ];
E: 25 80 [weight=13, ];
E: 25 114 [weight=16, ];
E: 25 127 [weight=31, ];
E: 25 138 [weight=2, ];
E: 26 28 [weight=1, ];
E: 26 37 [weight=3, ];
E: 26 80 [weight=4, ];
E: 26 114 [weight=12, ];
E: 26 127 [weight=18, ];
E: 26 138 [weight=2, ];
E: 27 28 [weight=1, ];
E: 27 34 [weight=1, ];
E: 27 36 [weight=5, ];
E: 27 37 [weight=2, ];
E: 27 80 [weight=5, ];
E: 27 114 [weight=10, ];
E: 27 127 [weight=27, ];
E: 27 138 [weight=2, ];
E: 28 37 [weight=3, ];
E: 28 80 [weight=2, ];
E: 28 114 [weight=11, ];
E: 28 127 [weight=16, ];
E: 28 138 [weight=2, ];
E: 29 33 [weight=6, ];
E: 29 44 [weight=1, ];
E: 29 45 [weight=1, ];
E: 29 49 [weight=1, ];
E: 29 50 [weight=1, ];
E: 29 52 [weight=1, ];
E: 29 54 [weight=1, ];
E: 29 78 [weight=1, ];
E: 29 79 [weight=4, ];
E: 29 80 [weight=2, ];
E: 29 114 [weight=3, ];
E: 29 115 [weight=4, ];
E: 29 127 [weight=15, ];
E: 29 138 [weight=2, ];
E: 30 33 [weight=5, ];
E: 30 80 [weight=1, ];
E: 30 114 [weight=2, ];
E: 30 115 [weight=3, ];
E: 30 127 [weight=13, ];
E: 30 138 [weight=2, ];
E: 31 33 [weight=13, ];
E: 31 67 [weight=1, ];
E: 31 77 [weight=4, ];
E: 31 78 [weight=1, ];
E: 31 114 [weight=3, ];
E: 31 115 [weight=4, ];
E: 31 127 [weight=31, ];
E: 31 138 [weight=2, ];
E: 32 33 [weight=4, ];
E: 32 37 [weight=5, ];
E: 32 114 [weight=10, ];
E: 32 127 [weight=17, ];
E: 32 138 [weight=2, ];
E: 33 80 [weight=1, ];
E: 33 114 [weight=2, ];
E: 33 127 [weight=7, ];
E: 33 138 [weight=2, ];
E: 34 35 [weight=1, ];
E: 34 37 [weight=4, ];
E: 34 80 [weight=3, ];
E: 34 114 [weight=6, ];
E: 34 127 [weight=11, ];
E: 34 138 [weight=2, ];
E: 35 37 [weight=2, ];
E: 35 80 [weight=1, ];
E: 35 114 [weight=5, ];
E: 35 127 [weight=7, ];
E: 35 138 [weight=2, ];
E: 36 37 [weight=1, ];
E: 36 114 [weight=1, ];
E: 36 127 [weight=5, ];
E: 36 138 [weight=2, ];
E: 37 88 [weight=1, ];
E: 37 90 [weight=23, ];
E: 37 114 [weight=3, ];
E: 37 127 [weight=9, ];
E: 37 138 [weight=2, ];
E: 38 48 [weight=6, ];
E: 38 51 [weight=5, ];
E: 38 53 [weight=28, ];
E: 38 55 [weight=9, ];
E: 38 97 [weight=55, ];
E: 38 98 [weight=17, ];
E: 38 99 [weight=89, ];
E: 38 113 [weight=2, ];
E: 38 115 [weight=6, ];
E: 38 118 [weight=11, ];
E: 38 130 [weight=72, ];
E: 39 48 [weight=9, ];
E: 39 51 [weight=6, ];
E: 39 53 [weight=23, ];
E: 39 55 [weight=11, ];
E: 39 92 [weight=1, ];
E: 39 93 [weight=1, ];
E: 39 94 [weight=1, ];
E: 39 95 [weight=11, ];
E: 39 96 [weight=11, ];
E: 39 113 [weight=1, ];
E: 39 115 [weight=8, ];
E: 39 118 [weight=20, ];
E: 39 126 [weight=31, ];
E: 39 130 [weight=51, ];
E: 39 139 [weight=161, ];
E: 40 41 [weight=4, ];
E: 40 48 [weight=4, ];
E: 40 51 [weight=3, ];
E: 40 53 [weight=2, ];
E: 40 55 [weight=8, ];
E: 41 55 [weight=3, ];
E: 42 43 [weight=13, ];
E: 42 44 [weight=1, ];
E: 42 45 [weight=14, ];
E: 42 48 [weight=484, ];
E: 42 51 [weight=263, ];
E: 42 53 [weight=1280, ];
E: 42 55 [weight=1316, ];
E: 42 113 [weight=14, ];
E: 42 115 [weight=350, ];
E: 42 118 [weight=7324, ];
E: 42 126 [weight=13155, ];
E: 42 130 [weight=13593, ];
E: 43 50 [weight=1, ];
E: 43 51 [weight=1, ];
E: 43 55 [weight=1, ];
E: 43 130 [weight=1, ];
E: 44 45 [weight=2, ];
E: 44 49 [weight=2, ];
E: 44 50 [weight=2, ];
E: 44 52 [weight=2, ];
E: 44 54 [weight=4, ];
E: 44 64 [weight=1, ];
E: 44 65 [weight=1, ];
E: 44 127 [weight=6, ];
E: 44 138 [weight=2, ];
E: 45 49 [weight=2, ];
E: 45 50 [weight=9, ];
E: 45 52 [weight=10, ];
E: 45 54 [weight=27, ];
E: 45 66 [weight=1, ];
E: 45 67 [weight=1, ];
E: 45 68 [weight=1, ];
E: 45 69 [weight=1, ];
E: 45 70 [weight=1, ];
E: 45 115 [weight=4, ];
E: 45 127 [weight=33, ];
E: 45 138 [weight=2, ];
E: 46 47 [weight=1, ];
E: 46 48 [weight=1, ];
E: 46 51 [weight=1, ];
E: 46 53 [weight=1, ];
E: 46 55 [weight=1, ];
E: 46 60 [weight=2, ];
E: 46 127 [weight=2, ];
E: 46 130 [weight=2, ];
E: 47 48 [weight=8, ];
E: 47 51 [weight=6, ];
E: 47 53 [weight=4, ];
E: 47 55 [weight=14, ];
E: 47 57 [weight=1, ];
E: 47 58 [weight=1, ];
E: 47 60 [weight=2, ];
E: 47 141 [weight=19, ];
E: 48 49 [weight=1, ];
E: 48 51 [weight=10, ];
E: 48 52 [weight=1, ];
E: 48 53 [weight=8, ];
E: 48 55 [weight=31, ];
E: 48 71 [weight=1, ];
E: 48 72 [weight=1, ];
E: 48 73 [weight=1, ];
E: 48 74 [weight=1, ];
E: 48 75 [weight=1, ];
E: 48 130 [weight=2, ];
E: 49 52 [weight=2, ];
E: 49 54 [weight=3, ];
E: 49 79 [weight=1, ];
E: 49 127 [weight=4, ];
E: 49 138 [weight=2, ];
E: 50 54 [weight=2, ];
E: 50 115 [weight=1, ];
E: 50 127 [weight=3, ];
E: 50 138 [weight=2, ];
E: 51 54 [weight=1, ];
E: 51 55 [weight=1, ];
E: 51 130 [weight=1, ];
E: 52 54 [weight=4, ];
E: 52 77 [weight=1, ];
E: 52 81 [weight=1, ];
E: 52 127 [weight=5, ];
E: 52 138 [weight=2, ];
E: 53 55 [weight=2, ];
E: 53 116 [weight=1, ];
E: 53 117 [weight=1, ];
E: 54 114 [weight=1, ];
E: 54 127 [weight=2, ];
E: 54 138 [weight=2, ];
E: 55 127 [weight=1, ];
E: 55 130 [weight=1, ];
E: 56 89 [weight=1, ];
E: 56 127 [weight=3, ];
E: 56 130 [weight=3, ];
E: 57 60 [weight=12, ];
E: 57 113 [weight=1, ];
E: 57 114 [weight=1, ];
E: 57 118 [weight=4, ];
E: 57 127 [weight=2, ];
E: 57 130 [weight=17, ];
E: 57 141 [weight=85, ];
E: 58 60 [weight=9, ];
E: 58 113 [weight=1, ];
E: 58 114 [weight=1, ];
E: 58 127 [weight=2, ];
E: 58 130 [weight=12, ];
E: 58 141 [weight=21, ];
E: 59 60 [weight=1, ];
E: 59 127 [weight=1, ];
E: 59 130 [weight=1, ];
E: 60 62 [weight=1, ];
E: 60 127 [weight=1, ];
E: 60 130 [weight=1, ];
E: 61 62 [weight=1, ];
E: 61 63 [weight=1, ];
E: 61 127 [weight=1, ];
E: 62 63 [weight=3, ];
E: 62 126 [weight=1, ];
E: 62 127 [weight=1, ];
E: 63 137 [weight=1, ];
E: 63 138 [weight=1, ];
E: 64 77 [weight=6, ];
E: 64 79 [weight=6, ];
E: 64 81 [weight=7, ];
E: 64 113 [weight=1, ];
E: 64 114 [weight=3, ];
E: 64 115 [weight=18, ];
E: 64 126 [weight=235, ];
E: 64 127 [weight=4, ];
E: 64 138 [weight=2, ];
E: 65 77 [weight=6, ];
E: 65 79 [weight=6, ];
E: 65 81 [weight=7, ];
E: 65 113 [weight=1, ];
E: 65 114 [weight=3, ];
E: 65 115 [weight=18, ];
E: 65 126 [weight=235, ];
E: 65 127 [weight=4, ];
E: 65 138 [weight=2, ];
E: 66 77 [weight=6, ];
E: 66 80 [weight=6, ];
E: 66 113 [weight=1, ];
E: 66 114 [weight=9, ];
E: 66 115 [weight=19, ];
E: 66 126 [weight=194, ];
E: 66 127 [weight=10, ];
E: 66 138 [weight=2, ];
E: 67 77 [weight=6, ];
E: 67 80 [weight=6, ];
E: 67 113 [weight=1, ];
E: 67 114 [weight=9, ];
E: 67 115 [weight=19, ];
E: 67 126 [weight=194, ];
E: 67 127 [weight=10, ];
E: 67 138 [weight=2, ];
E: 68 77 [weight=22, ];
E: 68 113 [weight=1, ];
E: 68 114 [weight=7, ];
E: 68 115 [weight=61, ];
E: 68 126 [weight=735, ];
E: 68 127 [weight=8, ];
E: 68 138 [weight=2, ];
E: 69 77 [weight=11, ];
E: 69 113 [weight=1, ];
E: 69 114 [weight=9, ];
E: 69 115 [weight=60, ];
E: 69 126 [weight=373, ];
E: 69 127 [weight=6, ];
E: 69 138 [weight=2, ];
E: 70 77 [weight=11, ];
E: 70 113 [weight=1, ];
E: 70 114 [weight=9, ];
E: 70 115 [weight=54, ];
E: 70 126 [weight=382, ];
E: 70 127 [weight=6, ];
E: 70 138 [weight=2, ];
E: 71 113 [weight=1, ];
E: 71 114 [weight=1, ];
E: 71 116 [weight=5, ];
E: 71 117 [weight=5, ];
E: 71 126 [weight=8, ];
E: 71 127 [weight=2, ];
E: 71 130 [weight=20, ];
E: 72 113 [weight=1, ];
E: 72 114 [weight=1, ];
E: 72 116 [weight=5, ];
E: 72 117 [weight=5, ];
E: 72 126 [weight=8, ];
E: 72 127 [weight=2, ];
E: 72 130 [weight=20, ];
E: 73 113 [weight=1, ];
E: 73 114 [weight=1, ];
E: 73 116 [weight=26, ];
E: 73 118 [weight=12, ];
E: 73 126 [weight=43, ];
E: 73 127 [weight=6, ];
E: 73 130 [weight=65, ];
E: 74 113 [weight=1, ];
E: 74 114 [weight=3, ];
E: 74 115 [weight=4, ];
E: 74 116 [weight=15, ];
E: 74 118 [weight=14, ];
E: 74 126 [weight=31, ];
E: 74 127 [weight=6, ];
E: 74 130 [weight=60, ];
E: 75 113 [weight=1, ];
E: 75 114 [weight=3, ];
E: 75 115 [weight=4, ];
E: 75 116 [weight=15, ];
E: 75 118 [weight=22, ];
E: 75 126 [weight=33, ];
E: 75 127 [weight=6, ];
E: 75 130 [weight=62, ];
E: 76 77 [weight=1, ];
E: 76 114 [weight=1, ];
E: 76 127 [weight=1, ];
E: 76 138 [weight=2, ];
E: 77 113 [weight=1, ];
E: 77 114 [weight=5, ];
E: 77 115 [weight=8, ];
E: 77 127 [weight=6, ];
E: 77 138 [weight=2, ];
E: 78 79 [weight=1, ];
E: 78 114 [weight=1, ];
E: 78 127 [weight=1, ];
E: 78 138 [weight=2, ];
E: 79 113 [weight=1, ];
E: 79 114 [weight=3, ];
E: 79 115 [weight=4, ];
E: 79 126 [weight=15, ];
E: 79 127 [weight=4, ];
E: 79 138 [weight=2, ];
E: 80 81 [weight=1, ];
E: 80 114 [weight=1, ];
E: 80 127 [weight=1, ];
E: 80 138 [weight=2, ];
E: 81 113 [weight=1, ];
E: 81 114 [weight=1, ];
E: 81 127 [weight=2, ];
E: 81 138 [weight=2, ];
E: 82 83 [weight=1, ];
E: 82 109 [weight=1, ];
E: 82 110 [weight=5, ];
E: 82 139 [weight=4, ];
E: 83 118 [weight=2, ];
E: 83 119 [weight=1, ];
E: 83 127 [weight=5, ];
E: 83 130 [weight=5, ];
E: 83 139 [weight=9, ];
E: 84 90 [weight=1, ];
E: 84 126 [weight=8, ];
E: 84 127 [weight=65, ];
E: 84 137 [weight=15, ];
E: 84 138 [weight=4, ];
E: 85 90 [weight=1, ];
E: 85 127 [weight=3, ];
E: 85 138 [weight=2, ];
E: 86 109 [weight=4, ];
E: 86 110 [weight=19, ];
E: 86 126 [weight=45, ];
E: 86 127 [weight=10, ];
E: 86 130 [weight=91, ];
E: 87 109 [weight=8, ];
E: 87 110 [weight=12, ];
E: 87 127 [weight=39, ];
E: 87 130 [weight=39, ];
E: 88 114 [weight=12, ];
E: 88 115 [weight=17, ];
E: 88 126 [weight=8, ];
E: 88 127 [weight=4, ];
E: 88 138 [weight=2, ];
E: 89 126 [weight=8, ];
E: 89 127 [weight=12, ];
E: 89 130 [weight=29, ];
E: 90 126 [weight=8, ];
E: 90 127 [weight=12, ];
E: 90 138 [weight=2, ];
E: 92 94 [weight=32, ];
E: 92 95 [weight=25, ];
E: 92 113 [weight=1, ];
E: 92 114 [weight=1, ];
E: 92 116 [weight=18, ];
E: 92 118 [weight=8, ];
E: 92 127 [weight=4, ];
E: 92 130 [weight=38, ];
E: 92 139 [weight=46, ];
E: 93 94 [weight=32, ];
E: 93 96 [weight=25, ];
E: 93 113 [weight=1, ];
E: 93 114 [weight=1, ];
E: 93 116 [weight=18, ];
E: 93 118 [weight=8, ];
E: 93 127 [weight=4, ];
E: 93 130 [weight=38, ];
E: 93 139 [weight=46, ];
E: 94 118 [weight=2, ];
E: 94 119 [weight=1, ];
E: 94 127 [weight=5, ];
E: 94 130 [weight=9, ];
E: 94 139 [weight=2, ];
E: 95 119 [weight=1, ];
E: 95 127 [weight=1, ];
E: 95 130 [weight=1, ];
E: 95 139 [weight=5, ];
E: 96 119 [weight=1, ];
E: 96 127 [weight=1, ];
E: 96 130 [weight=1, ];
E: 96 139 [weight=5, ];
E: 97 99 [weight=4, ];
E: 97 119 [weight=1, ];
E: 97 127 [weight=1, ];
E: 97 130 [weight=1, ];
E: 98 99 [weight=7, ];
E: 98 118 [weight=1, ];
E: 98 119 [weight=1, ];
E: 98 127 [weight=3, ];
E: 98 130 [weight=3, ];
E: 100 138 [weight=2, ];
E: 101 109 [weight=1, ];
E: 101 110 [weight=1, ];
E: 101 117 [weight=1, ];
E: 102 110 [weight=2, ];
E: 103 110 [weight=2, ];
E: 104 110 [weight=2, ];
E: 104 127 [weight=1, ];
E: 104 130 [weight=1, ];
E: 105 109 [weight=2, ];
E: 105 110 [weight=4, ];
E: 105 127 [weight=2, ];
E: 105 130 [weight=2, ];
E: 106 108 [weight=1, ];
E: 106 109 [weight=1, ];
E: 106 110 [weight=3, ];
E: 106 127 [weight=1, ];
E: 106 130 [weight=1, ];
E: 107 109 [weight=2, ];
E: 107 110 [weight=4, ];
E: 107 127 [weight=2, ];
E: 107 130 [weight=2, ];
E: 108 109 [weight=2, ];
E: 108 110 [weight=4, ];
E: 108 127 [weight=2, ];
E: 108 130 [weight=2, ];
E: 109 127 [weight=1, ];
E: 109 130 [weight=1, ];
E: 110 127 [weight=1, ];
E: 110 130 [weight=1, ];
E: 111 114 [weight=2, ];
E: 111 127 [weight=4, ];
E: 111 138 [weight=2, ];
E: 112 114 [weight=2, ];
E: 112 127 [weight=4, ];
E: 112 138 [weight=2, ];
E: 113 114 [weight=1, ];
E: 113 115 [weight=1, ];
E: 113 126 [weight=1, ];
E: 113 127 [weight=4, ];
E: 113 138 [weight=2, ];
E: 114 115 [weight=1, ];
E: 114 127 [weight=5, ];
E: 114 138 [weight=2, ];
E: 115 127 [weight=4, ];
E: 115 137 [weight=1, ];
E: 115 138 [weight=3, ];
E: 116 118 [weight=2, ];
E: 116 119 [weight=1, ];
E: 116 127 [weight=5, ];
E: 116 130 [weight=6, ];
E: 117 119 [weight=1, ];
E: 117 127 [weight=1, ];
E: 117 130 [weight=1, ];
E: 118 127 [weight=2, ];
E: 118 130 [weight=3, ];
E: 119 126 [weight=1, ];
E: 119 127 [weight=1, ];
E: 119 130 [weight=2, ];
E: 120 127 [weight=2, ];
E: 120 138 [weight=2, ];
E: 121 127 [weight=2, ];
E: 121 138 [weight=2, ];
E: 122 126 [weight=2, ];
E: 122 127 [weight=4, ];
E: 122 138 [weight=2, ];
E: 123 125 [weight=1, ];
E: 123 126 [weight=1, ];
E: 123 127 [weight=3, ];
E: 123 138 [weight=2, ];
E: 124 126 [weight=2, ];
E: 124 127 [weight=4, ];
E: 124 138 [weight=2, ];
E: 125 126 [weight=2, ];
E: 125 127 [weight=4, ];
E: 125 138 [weight=2, ];
E: 126 138 [weight=1, ];
E: 127 138 [weight=1, ];
E: 128 129 [weight=2, ];
E: 128 138 [weight=2, ];
E: 129 138 [weight=2, ];
E: 130 137 [weight=1, ];
E: 130 138 [weight=1, ];
E: 131 138 [weight=2, ];
E: 132 138 [weight=2, ];
E: 133 137 [weight=2, ];
E: 133 138 [weight=4, ];
E: 134 136 [weight=1, ];
E: 134 137 [weight=1, ];
E: 134 138 [weight=3, ];
E: 135 137 [weight=2, ];
E: 135 138 [weight=4, ];
E: 136 137 [weight=2, ];
E: 136 138 [weight=4, ];
