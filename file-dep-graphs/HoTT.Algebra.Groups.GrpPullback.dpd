N: 5 "equiv_functor_grp_pullback" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 4 "equiv_grp_pullback_compose_r" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 6 "functor_grp_pullback" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 11 "grp_pullback" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 8 "grp_pullback_corec" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 7 "grp_pullback_corec'" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 3 "grp_pullback_corec_pr1" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 2 "grp_pullback_corec_pr2" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 15 "grp_pullback_inverse" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 20 "grp_pullback_issemigroup" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 18 "grp_pullback_leftidentity" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 14 "grp_pullback_leftinverse" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 19 "grp_pullback_mon_unit" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 10 "grp_pullback_pr1" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 9 "grp_pullback_pr2" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 17 "grp_pullback_rightidentity" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 13 "grp_pullback_rightinverse" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 22 "grp_pullback_sgop" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 21 "grp_pullback_sgop_associative" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 1 "isequiv_grp_pullback_corec" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 12 "isgroup_grp_pullback" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
N: 16 "ismonoid_grp_pullback" [body=yes, kind=cnst, prop=no, path="GrpPullback", ];
E: 1 2 [weight=1, ];
E: 1 3 [weight=6, ];
E: 1 7 [weight=48, ];
E: 1 9 [weight=29, ];
E: 1 10 [weight=35, ];
E: 1 11 [weight=82, ];
E: 2 8 [weight=4, ];
E: 2 9 [weight=4, ];
E: 2 11 [weight=4, ];
E: 3 8 [weight=4, ];
E: 3 10 [weight=4, ];
E: 3 11 [weight=4, ];
E: 4 6 [weight=9, ];
E: 4 8 [weight=19, ];
E: 4 9 [weight=179, ];
E: 4 10 [weight=36, ];
E: 4 11 [weight=260, ];
E: 5 6 [weight=27, ];
E: 5 11 [weight=26, ];
E: 6 8 [weight=1, ];
E: 6 9 [weight=3, ];
E: 6 10 [weight=3, ];
E: 6 11 [weight=16, ];
E: 7 8 [weight=1, ];
E: 7 11 [weight=1, ];
E: 8 11 [weight=44, ];
E: 9 11 [weight=6, ];
E: 10 11 [weight=6, ];
E: 11 12 [weight=1, ];
E: 11 15 [weight=1, ];
E: 11 19 [weight=1, ];
E: 11 22 [weight=1, ];
E: 12 13 [weight=1, ];
E: 12 14 [weight=1, ];
E: 12 15 [weight=2, ];
E: 12 16 [weight=1, ];
E: 12 19 [weight=2, ];
E: 12 22 [weight=2, ];
E: 13 15 [weight=14, ];
E: 13 19 [weight=14, ];
E: 13 22 [weight=3, ];
E: 14 15 [weight=14, ];
E: 14 19 [weight=14, ];
E: 14 22 [weight=3, ];
E: 16 17 [weight=1, ];
E: 16 18 [weight=1, ];
E: 16 19 [weight=2, ];
E: 16 20 [weight=1, ];
E: 16 22 [weight=2, ];
E: 17 19 [weight=13, ];
E: 17 22 [weight=13, ];
E: 18 19 [weight=13, ];
E: 18 22 [weight=13, ];
E: 20 21 [weight=1, ];
E: 20 22 [weight=2, ];
E: 21 22 [weight=42, ];
