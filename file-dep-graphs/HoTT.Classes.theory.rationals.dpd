N: 5 "QLe_dec" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 4 "QLt_dec" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 24 "Q_abs_le_pr" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 10 "Q_abs_plus_1_bounds" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 21 "Q_average_between" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 13 "Q_dense" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 39 "Q_sum_eq_join_meet" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 16 "Q_triangle_le" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 30 "Qabs_0_or_pos" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 23 "Qabs_is_join" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 25 "Qabs_le_neg_raw" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 27 "Qabs_le_raw" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 9 "Qabs_mult" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 26 "Qabs_neg" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 12 "Qabs_neg_flip" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 32 "Qabs_nonneg" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 31 "Qabs_nonpos_0" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 29 "Qabs_of_nonneg" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 28 "Qabs_of_nonpos" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 14 "Qabs_triangle_alt" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 15 "Qabs_triangle_alt_aux" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 22 "Qlt_join" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 33 "Qmeet_plus_l" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 66 "Qpos_Q" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 35 "Qpos_diff" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 34 "Qpos_diff_pr" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 1 "Qpos_enumerable" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 3 "Qpos_enumerator" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 71 "Qpos_ind" [body=yes, kind=cnst, prop=yes, path="rationals", ];
N: 2 "Qpos_is_enumerator" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 61 "Qpos_isset" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 40 "Qpos_join" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 37 "Qpos_le_lt_min" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 36 "Qpos_lt_min" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 41 "Qpos_meet" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 59 "Qpos_mult" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 47 "Qpos_mult_1_l" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 46 "Qpos_mult_1_r" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 49 "Qpos_mult_assoc" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 8 "Qpos_neg_le" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 60 "Qpos_one" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 64 "Qpos_plus" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 48 "Qpos_plus_assoc" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 42 "Qpos_plus_mult_distr_l" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 65 "Qpos_plus_pr" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 70 "Qpos_rec" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 43 "Qpos_recip_1" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 72 "Qpos_rect" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 69 "Qpos_sind" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 38 "Qpos_sum_eq_join_meet" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 7 "Qpos_upper" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 6 "Qpos_upper_inject" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 67 "is_pos" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 20 "path_avg_split_diff_l" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 19 "path_avg_split_diff_r" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 68 "pos" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 62 "pos_eq" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 18 "pos_gt_both" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 63 "pos_is_pos" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 52 "pos_mult_1_r" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 11 "pos_of_Q" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 55 "pos_of_nat" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 56 "pos_recip" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 54 "pos_recip_r" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 53 "pos_recip_r'" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 45 "pos_recip_through_plus" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 51 "pos_split2" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 50 "pos_split3" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 44 "pos_unconjugate" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 57 "qpos_mult_comm" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 58 "qpos_plus_comm" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 75 "rational_1_neq_0" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 17 "two_fourth_is_one_half" [body=yes, kind=cnst, prop=no, path="rationals", ];
N: 74 "Qpos" [kind=inductive, prop=no, path="rationals", ];
N: 73 "mkQpos" [kind=construct, prop=no, path="rationals", ];
E: 1 2 [weight=1, ];
E: 1 3 [weight=1, ];
E: 1 74 [weight=2, ];
E: 2 3 [weight=8, ];
E: 2 60 [weight=2, ];
E: 2 62 [weight=1, ];
E: 2 63 [weight=1, ];
E: 2 66 [weight=8, ];
E: 2 73 [weight=2, ];
E: 2 74 [weight=23, ];
E: 3 60 [weight=1, ];
E: 3 73 [weight=1, ];
E: 3 74 [weight=3, ];
E: 6 7 [weight=1, ];
E: 6 66 [weight=3, ];
E: 6 74 [weight=5, ];
E: 7 66 [weight=1, ];
E: 7 74 [weight=3, ];
E: 8 63 [weight=1, ];
E: 8 66 [weight=4, ];
E: 8 74 [weight=6, ];
E: 10 11 [weight=2, ];
E: 10 25 [weight=1, ];
E: 10 27 [weight=1, ];
E: 10 66 [weight=2, ];
E: 10 74 [weight=2, ];
E: 11 32 [weight=1, ];
E: 11 73 [weight=1, ];
E: 11 74 [weight=1, ];
E: 11 75 [weight=1, ];
E: 12 26 [weight=1, ];
E: 13 21 [weight=1, ];
E: 14 15 [weight=2, ];
E: 14 23 [weight=1, ];
E: 14 26 [weight=1, ];
E: 15 16 [weight=1, ];
E: 16 23 [weight=1, ];
E: 16 25 [weight=2, ];
E: 16 27 [weight=2, ];
E: 17 56 [weight=12, ];
E: 17 59 [weight=8, ];
E: 17 60 [weight=92, ];
E: 17 62 [weight=1, ];
E: 17 64 [weight=44, ];
E: 17 66 [weight=4, ];
E: 17 68 [weight=32, ];
E: 17 74 [weight=175, ];
E: 17 75 [weight=1, ];
E: 18 21 [weight=1, ];
E: 18 22 [weight=1, ];
E: 18 35 [weight=10, ];
E: 18 62 [weight=1, ];
E: 18 63 [weight=1, ];
E: 18 64 [weight=21, ];
E: 18 66 [weight=75, ];
E: 18 68 [weight=108, ];
E: 18 73 [weight=15, ];
E: 18 74 [weight=258, ];
E: 19 75 [weight=1, ];
E: 20 75 [weight=1, ];
E: 21 75 [weight=4, ];
E: 24 25 [weight=1, ];
E: 24 27 [weight=1, ];
E: 25 26 [weight=1, ];
E: 25 27 [weight=1, ];
E: 30 31 [weight=1, ];
E: 31 32 [weight=1, ];
E: 34 35 [weight=1, ];
E: 34 66 [weight=1, ];
E: 34 74 [weight=1, ];
E: 35 73 [weight=1, ];
E: 35 74 [weight=1, ];
E: 36 37 [weight=2, ];
E: 36 64 [weight=22, ];
E: 36 66 [weight=14, ];
E: 36 74 [weight=101, ];
E: 37 51 [weight=2, ];
E: 37 56 [weight=138, ];
E: 37 59 [weight=66, ];
E: 37 60 [weight=284, ];
E: 37 62 [weight=1, ];
E: 37 63 [weight=8, ];
E: 37 64 [weight=163, ];
E: 37 65 [weight=2, ];
E: 37 66 [weight=196, ];
E: 37 68 [weight=108, ];
E: 37 73 [weight=8, ];
E: 37 74 [weight=993, ];
E: 38 39 [weight=1, ];
E: 38 40 [weight=2, ];
E: 38 41 [weight=2, ];
E: 38 62 [weight=1, ];
E: 38 64 [weight=10, ];
E: 38 66 [weight=9, ];
E: 38 74 [weight=36, ];
E: 40 63 [weight=2, ];
E: 40 66 [weight=38, ];
E: 40 73 [weight=1, ];
E: 40 74 [weight=42, ];
E: 41 63 [weight=2, ];
E: 41 66 [weight=38, ];
E: 41 73 [weight=1, ];
E: 41 74 [weight=42, ];
E: 42 59 [weight=5, ];
E: 42 62 [weight=1, ];
E: 42 64 [weight=4, ];
E: 42 66 [weight=3, ];
E: 42 74 [weight=17, ];
E: 43 56 [weight=2, ];
E: 43 60 [weight=4, ];
E: 43 62 [weight=1, ];
E: 43 74 [weight=7, ];
E: 44 47 [weight=1, ];
E: 44 54 [weight=1, ];
E: 44 56 [weight=34, ];
E: 44 59 [weight=22, ];
E: 44 60 [weight=1, ];
E: 44 62 [weight=1, ];
E: 44 66 [weight=80, ];
E: 44 74 [weight=146, ];
E: 45 54 [weight=1, ];
E: 45 56 [weight=72, ];
E: 45 59 [weight=32, ];
E: 45 60 [weight=3, ];
E: 45 62 [weight=2, ];
E: 45 64 [weight=20, ];
E: 45 66 [weight=189, ];
E: 45 74 [weight=327, ];
E: 46 59 [weight=3, ];
E: 46 60 [weight=3, ];
E: 46 62 [weight=1, ];
E: 46 66 [weight=1, ];
E: 46 74 [weight=12, ];
E: 47 59 [weight=3, ];
E: 47 60 [weight=3, ];
E: 47 62 [weight=1, ];
E: 47 66 [weight=1, ];
E: 47 74 [weight=12, ];
E: 48 62 [weight=1, ];
E: 48 64 [weight=6, ];
E: 48 66 [weight=3, ];
E: 48 74 [weight=14, ];
E: 49 59 [weight=6, ];
E: 49 62 [weight=1, ];
E: 49 66 [weight=3, ];
E: 49 74 [weight=14, ];
E: 50 52 [weight=1, ];
E: 50 54 [weight=1, ];
E: 50 56 [weight=12, ];
E: 50 59 [weight=16, ];
E: 50 60 [weight=50, ];
E: 50 62 [weight=1, ];
E: 50 64 [weight=38, ];
E: 50 66 [weight=65, ];
E: 50 74 [weight=192, ];
E: 51 52 [weight=1, ];
E: 51 54 [weight=1, ];
E: 51 56 [weight=9, ];
E: 51 59 [weight=13, ];
E: 51 60 [weight=28, ];
E: 51 62 [weight=1, ];
E: 51 64 [weight=16, ];
E: 51 66 [weight=44, ];
E: 51 74 [weight=121, ];
E: 52 59 [weight=2, ];
E: 52 60 [weight=2, ];
E: 52 62 [weight=1, ];
E: 52 66 [weight=1, ];
E: 52 74 [weight=8, ];
E: 53 54 [weight=1, ];
E: 53 56 [weight=1, ];
E: 53 59 [weight=1, ];
E: 53 60 [weight=1, ];
E: 53 66 [weight=3, ];
E: 53 74 [weight=10, ];
E: 54 56 [weight=3, ];
E: 54 59 [weight=4, ];
E: 54 60 [weight=4, ];
E: 54 62 [weight=1, ];
E: 54 63 [weight=2, ];
E: 54 66 [weight=8, ];
E: 54 73 [weight=1, ];
E: 54 74 [weight=20, ];
E: 55 73 [weight=2, ];
E: 55 74 [weight=3, ];
E: 55 75 [weight=3, ];
E: 56 63 [weight=1, ];
E: 56 66 [weight=2, ];
E: 56 73 [weight=1, ];
E: 56 74 [weight=5, ];
E: 57 59 [weight=4, ];
E: 57 62 [weight=1, ];
E: 57 66 [weight=2, ];
E: 57 74 [weight=12, ];
E: 58 62 [weight=1, ];
E: 58 64 [weight=4, ];
E: 58 66 [weight=2, ];
E: 58 74 [weight=12, ];
E: 59 63 [weight=2, ];
E: 59 66 [weight=4, ];
E: 59 73 [weight=1, ];
E: 59 74 [weight=8, ];
E: 60 73 [weight=1, ];
E: 60 74 [weight=1, ];
E: 60 75 [weight=1, ];
E: 61 62 [weight=1, ];
E: 61 66 [weight=7, ];
E: 61 74 [weight=17, ];
E: 62 66 [weight=4, ];
E: 62 73 [weight=5, ];
E: 62 74 [weight=11, ];
E: 63 66 [weight=1, ];
E: 63 67 [weight=1, ];
E: 63 74 [weight=2, ];
E: 64 65 [weight=1, ];
E: 64 66 [weight=2, ];
E: 64 73 [weight=1, ];
E: 64 74 [weight=5, ];
E: 65 66 [weight=4, ];
E: 65 67 [weight=2, ];
E: 65 74 [weight=8, ];
E: 66 68 [weight=1, ];
E: 66 74 [weight=1, ];
E: 67 74 [weight=2, ];
E: 68 74 [weight=2, ];
E: 69 73 [weight=2, ];
E: 69 74 [weight=4, ];
E: 70 72 [weight=1, ];
E: 70 73 [weight=1, ];
E: 70 74 [weight=3, ];
E: 71 73 [weight=2, ];
E: 71 74 [weight=4, ];
E: 72 73 [weight=2, ];
E: 72 74 [weight=4, ];
