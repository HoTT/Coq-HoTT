N: 29 "FiberSeq" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 68 "IsComplex" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 52 "IsExact_ind" [body=yes, kind=cnst, prop=yes, path="ExactSequence", ];
N: 51 "IsExact_rec" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 53 "IsExact_rect" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 50 "IsExact_sind" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 11 "LongExactSequence_ind" [body=yes, kind=cnst, prop=yes, path="ExactSequence", ];
N: 10 "LongExactSequence_rec" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 12 "LongExactSequence_rect" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 9 "LongExactSequence_sind" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 2 "Pi_les" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 1 "classify_fiberseq" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 48 "conn_map_isexact" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 18 "connect_fiberseq" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 17 "connecting_map" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 15 "connecting_map_family" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 49 "cx_isexact" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 67 "cxfib" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 34 "equiv_cxfib" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 33 "equiv_cxfib_beta" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 25 "fiberseq_isexact_purely" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 24 "fiberseq_loops" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 28 "i_fiberseq" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 60 "iscomplex_cancelL" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 58 "iscomplex_equiv_fiber" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 59 "iscomplex_equiv_i" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 61 "iscomplex_homotopic_f" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 62 "iscomplex_homotopic_i" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 63 "iscomplex_iterated_loops" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 64 "iscomplex_loops" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 31 "iscomplex_pfib" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 65 "iscomplex_ptr" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 57 "iscomplex_trivial" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 43 "isconnmap_O_isexact_base_contr" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 35 "isequiv_cxfib" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 16 "isexact_connect_R" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 37 "isexact_equiv_fiber" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 39 "isexact_equiv_i" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 40 "isexact_equiv_i_subproof" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 41 "isexact_homotopic_f" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 42 "isexact_homotopic_i" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 22 "isexact_iterated_loops" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 23 "isexact_loops" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 30 "isexact_pfib" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 45 "isexact_preimage" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 44 "isexact_preimage_hfiber" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 21 "isexact_ptr" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 20 "isexact_ptr_purely" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 32 "isexact_purely_O" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 27 "isexact_purely_fiberseq" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 36 "isexact_square_if" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 56 "ishprop_iscomplex_hset" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 46 "ishprop_isexact_hset" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 47 "issig_isexact" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 8 "les_carrier" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 7 "les_fn" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 6 "les_isexact" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 4 "loops_carrier" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 3 "loops_les" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 38 "moveL_isexact_equiv" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 26 "pequiv_cxfib" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 66 "pfib_cxfib" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 19 "square_pfib_pequiv_cxfib" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 5 "trunc_les" [body=yes, kind=cnst, prop=no, path="ExactSequence", ];
N: 55 "IsExact" [kind=inductive, prop=no, path="ExactSequence", ];
N: 14 "LongExactSequence" [kind=inductive, prop=no, path="ExactSequence", ];
N: 54 "Build_IsExact" [kind=construct, prop=no, path="ExactSequence", ];
N: 13 "Build_LongExactSequence" [kind=construct, prop=no, path="ExactSequence", ];
E: 1 29 [weight=3, ];
E: 2 3 [weight=1, ];
E: 2 5 [weight=1, ];
E: 2 14 [weight=1, ];
E: 2 55 [weight=2, ];
E: 3 4 [weight=454, ];
E: 3 13 [weight=1, ];
E: 3 14 [weight=1, ];
E: 3 16 [weight=1, ];
E: 3 17 [weight=14, ];
E: 3 18 [weight=1, ];
E: 3 22 [weight=17, ];
E: 3 27 [weight=1, ];
E: 3 55 [weight=12, ];
E: 5 13 [weight=1, ];
E: 5 14 [weight=3, ];
E: 5 20 [weight=1, ];
E: 6 14 [weight=2, ];
E: 6 55 [weight=1, ];
E: 7 14 [weight=2, ];
E: 8 14 [weight=2, ];
E: 9 13 [weight=2, ];
E: 9 14 [weight=4, ];
E: 9 55 [weight=2, ];
E: 10 12 [weight=1, ];
E: 10 13 [weight=1, ];
E: 10 14 [weight=3, ];
E: 10 55 [weight=1, ];
E: 11 13 [weight=2, ];
E: 11 14 [weight=4, ];
E: 11 55 [weight=2, ];
E: 12 13 [weight=2, ];
E: 12 14 [weight=4, ];
E: 12 55 [weight=2, ];
E: 13 55 [weight=1, ];
E: 14 55 [weight=1, ];
E: 16 17 [weight=1, ];
E: 16 19 [weight=11, ];
E: 16 26 [weight=15, ];
E: 16 30 [weight=1, ];
E: 16 39 [weight=1, ];
E: 16 55 [weight=3, ];
E: 17 18 [weight=1, ];
E: 17 28 [weight=1, ];
E: 17 55 [weight=2, ];
E: 18 19 [weight=1, ];
E: 18 26 [weight=1, ];
E: 18 29 [weight=1, ];
E: 18 55 [weight=2, ];
E: 19 26 [weight=4, ];
E: 19 55 [weight=2, ];
E: 19 66 [weight=1, ];
E: 20 21 [weight=1, ];
E: 20 54 [weight=1, ];
E: 20 55 [weight=3, ];
E: 20 67 [weight=2, ];
E: 21 54 [weight=1, ];
E: 21 55 [weight=3, ];
E: 21 65 [weight=6, ];
E: 21 67 [weight=29, ];
E: 22 23 [weight=1, ];
E: 22 55 [weight=5, ];
E: 23 24 [weight=14, ];
E: 23 25 [weight=50, ];
E: 23 27 [weight=1, ];
E: 23 28 [weight=2, ];
E: 23 42 [weight=1, ];
E: 23 55 [weight=3, ];
E: 23 66 [weight=1, ];
E: 23 67 [weight=8, ];
E: 24 29 [weight=3, ];
E: 25 26 [weight=1, ];
E: 25 29 [weight=1, ];
E: 25 55 [weight=2, ];
E: 26 35 [weight=1, ];
E: 26 55 [weight=2, ];
E: 26 67 [weight=1, ];
E: 27 28 [weight=23, ];
E: 27 29 [weight=2, ];
E: 27 54 [weight=1, ];
E: 27 55 [weight=1, ];
E: 27 67 [weight=2, ];
E: 28 29 [weight=2, ];
E: 30 31 [weight=1, ];
E: 30 54 [weight=1, ];
E: 30 55 [weight=1, ];
E: 31 68 [weight=1, ];
E: 32 35 [weight=1, ];
E: 32 54 [weight=1, ];
E: 32 55 [weight=3, ];
E: 32 67 [weight=1, ];
E: 33 34 [weight=7, ];
E: 33 35 [weight=1, ];
E: 33 55 [weight=2, ];
E: 33 67 [weight=1, ];
E: 34 35 [weight=1, ];
E: 34 55 [weight=2, ];
E: 34 67 [weight=1, ];
E: 35 55 [weight=2, ];
E: 35 67 [weight=4, ];
E: 36 39 [weight=1, ];
E: 36 41 [weight=1, ];
E: 36 54 [weight=1, ];
E: 36 55 [weight=5, ];
E: 36 60 [weight=10, ];
E: 36 67 [weight=16, ];
E: 37 54 [weight=1, ];
E: 37 55 [weight=3, ];
E: 37 58 [weight=4, ];
E: 37 67 [weight=7, ];
E: 38 39 [weight=1, ];
E: 38 55 [weight=3, ];
E: 39 40 [weight=1, ];
E: 39 54 [weight=1, ];
E: 39 55 [weight=3, ];
E: 39 59 [weight=2, ];
E: 39 67 [weight=5, ];
E: 40 55 [weight=2, ];
E: 41 54 [weight=1, ];
E: 41 55 [weight=3, ];
E: 41 61 [weight=5, ];
E: 41 67 [weight=7, ];
E: 42 54 [weight=1, ];
E: 42 55 [weight=3, ];
E: 42 62 [weight=4, ];
E: 42 67 [weight=6, ];
E: 43 55 [weight=2, ];
E: 43 67 [weight=1, ];
E: 44 45 [weight=1, ];
E: 44 55 [weight=2, ];
E: 45 55 [weight=2, ];
E: 45 67 [weight=5, ];
E: 46 54 [weight=8, ];
E: 46 55 [weight=14, ];
E: 46 56 [weight=1, ];
E: 46 67 [weight=24, ];
E: 46 68 [weight=44, ];
E: 47 54 [weight=8, ];
E: 47 55 [weight=12, ];
E: 47 67 [weight=21, ];
E: 47 68 [weight=39, ];
E: 48 55 [weight=2, ];
E: 48 67 [weight=1, ];
E: 49 55 [weight=2, ];
E: 49 68 [weight=1, ];
E: 50 54 [weight=2, ];
E: 50 55 [weight=4, ];
E: 50 67 [weight=2, ];
E: 50 68 [weight=2, ];
E: 51 53 [weight=1, ];
E: 51 54 [weight=1, ];
E: 51 55 [weight=3, ];
E: 51 67 [weight=1, ];
E: 51 68 [weight=1, ];
E: 52 54 [weight=2, ];
E: 52 55 [weight=4, ];
E: 52 67 [weight=2, ];
E: 52 68 [weight=2, ];
E: 53 54 [weight=2, ];
E: 53 55 [weight=4, ];
E: 53 67 [weight=2, ];
E: 53 68 [weight=2, ];
E: 54 67 [weight=1, ];
E: 54 68 [weight=1, ];
E: 55 67 [weight=1, ];
E: 55 68 [weight=1, ];
E: 56 68 [weight=1, ];
E: 57 68 [weight=1, ];
E: 58 68 [weight=3, ];
E: 59 68 [weight=3, ];
E: 60 68 [weight=3, ];
E: 61 68 [weight=3, ];
E: 62 68 [weight=3, ];
E: 63 64 [weight=1, ];
E: 63 68 [weight=5, ];
E: 64 68 [weight=3, ];
E: 65 68 [weight=3, ];
E: 66 67 [weight=5, ];
E: 66 68 [weight=2, ];
E: 67 68 [weight=2, ];
