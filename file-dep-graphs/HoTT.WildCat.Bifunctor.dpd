N: 55 "Build_Is0Bifunctor'" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 54 "Build_Is0Bifunctor''" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 39 "Build_Is1Bifunctor'" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 38 "Build_Is1Bifunctor''" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 61 "Is0Bifunctor_ind" [body=yes, kind=cnst, prop=yes, path="Bifunctor", ];
N: 60 "Is0Bifunctor_rec" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 62 "Is0Bifunctor_rect" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 59 "Is0Bifunctor_sind" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 47 "Is1Bifunctor_ind" [body=yes, kind=cnst, prop=yes, path="Bifunctor", ];
N: 46 "Is1Bifunctor_rec" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 48 "Is1Bifunctor_rect" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 45 "Is1Bifunctor_sind" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 37 "bifunctor_coh" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 19 "emap01" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 20 "emap10" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 18 "emap11" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 52 "fmap01" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 26 "fmap01_comp" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 31 "fmap01_id" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 28 "fmap01_is_fmap11" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 36 "fmap02" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 53 "fmap10" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 25 "fmap10_comp" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 30 "fmap10_id" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 27 "fmap10_is_fmap11" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 51 "fmap11" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 24 "fmap11_comp" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 29 "fmap11_id" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 41 "fmap11_is_fmap01_fmap10" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 40 "fmap11_is_fmap10_fmap01" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 7 "fmap11_square" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 35 "fmap12" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 34 "fmap20" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 33 "fmap21" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 32 "fmap22" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 22 "iemap01" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 23 "iemap10" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 21 "iemap11" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 17 "is0bifunctor_flip" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 4 "is0bifunctor_op" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 2 "is0bifunctor_op'" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 15 "is0bifunctor_postcompose" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 13 "is0bifunctor_precompose" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 57 "is0functor01_bifunctor" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 56 "is0functor10_bifunctor" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 58 "is0functor_bifunctor_uncurried" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 11 "is0functor_uncurry_uncurry_left" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 9 "is0functor_uncurry_uncurry_right" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 16 "is1bifunctor_flip" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 3 "is1bifunctor_op" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 1 "is1bifunctor_op'" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 14 "is1bifunctor_postcompose" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 12 "is1bifunctor_precompose" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 43 "is1functor01_bifunctor" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 42 "is1functor10_bifunctor" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 44 "is1functor_bifunctor_uncurried" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 10 "is1functor_uncurry_uncurry_left" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 8 "is1functor_uncurry_uncurry_right" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 6 "is1natural_uncurry" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 5 "nattrans_flip" [body=yes, kind=cnst, prop=no, path="Bifunctor", ];
N: 64 "Is0Bifunctor" [kind=inductive, prop=no, path="Bifunctor", ];
N: 50 "Is1Bifunctor" [kind=inductive, prop=no, path="Bifunctor", ];
N: 63 "Build_Is0Bifunctor" [kind=construct, prop=no, path="Bifunctor", ];
N: 49 "Build_Is1Bifunctor" [kind=construct, prop=no, path="Bifunctor", ];
E: 1 2 [weight=1, ];
E: 1 3 [weight=1, ];
E: 1 50 [weight=3, ];
E: 1 64 [weight=2, ];
E: 2 4 [weight=1, ];
E: 2 64 [weight=3, ];
E: 3 4 [weight=2, ];
E: 3 49 [weight=1, ];
E: 3 50 [weight=3, ];
E: 3 64 [weight=2, ];
E: 4 63 [weight=1, ];
E: 4 64 [weight=3, ];
E: 5 17 [weight=6, ];
E: 5 50 [weight=4, ];
E: 5 64 [weight=4, ];
E: 6 50 [weight=4, ];
E: 6 52 [weight=3, ];
E: 6 53 [weight=3, ];
E: 6 64 [weight=4, ];
E: 7 24 [weight=2, ];
E: 7 32 [weight=1, ];
E: 7 50 [weight=2, ];
E: 7 51 [weight=16, ];
E: 7 64 [weight=2, ];
E: 8 9 [weight=2, ];
E: 8 24 [weight=2, ];
E: 8 29 [weight=2, ];
E: 8 32 [weight=2, ];
E: 8 35 [weight=2, ];
E: 8 50 [weight=4, ];
E: 8 51 [weight=20, ];
E: 8 64 [weight=4, ];
E: 9 51 [weight=2, ];
E: 9 64 [weight=4, ];
E: 10 12 [weight=1, ];
E: 10 13 [weight=1, ];
E: 10 50 [weight=4, ];
E: 10 64 [weight=4, ];
E: 11 13 [weight=1, ];
E: 11 64 [weight=4, ];
E: 12 13 [weight=2, ];
E: 12 49 [weight=1, ];
E: 12 50 [weight=3, ];
E: 12 64 [weight=2, ];
E: 13 63 [weight=1, ];
E: 13 64 [weight=3, ];
E: 14 15 [weight=2, ];
E: 14 49 [weight=1, ];
E: 14 50 [weight=3, ];
E: 14 51 [weight=4, ];
E: 14 52 [weight=8, ];
E: 14 53 [weight=8, ];
E: 14 64 [weight=2, ];
E: 15 63 [weight=1, ];
E: 15 64 [weight=3, ];
E: 16 17 [weight=2, ];
E: 16 49 [weight=1, ];
E: 16 50 [weight=3, ];
E: 16 64 [weight=2, ];
E: 17 63 [weight=1, ];
E: 17 64 [weight=3, ];
E: 18 21 [weight=1, ];
E: 18 50 [weight=2, ];
E: 18 51 [weight=1, ];
E: 18 64 [weight=2, ];
E: 19 50 [weight=2, ];
E: 19 52 [weight=1, ];
E: 19 64 [weight=2, ];
E: 20 23 [weight=1, ];
E: 20 50 [weight=2, ];
E: 20 53 [weight=1, ];
E: 20 64 [weight=2, ];
E: 21 50 [weight=2, ];
E: 21 51 [weight=1, ];
E: 21 64 [weight=2, ];
E: 22 50 [weight=2, ];
E: 22 52 [weight=1, ];
E: 22 64 [weight=2, ];
E: 23 50 [weight=2, ];
E: 23 53 [weight=1, ];
E: 23 64 [weight=2, ];
E: 24 50 [weight=2, ];
E: 24 51 [weight=3, ];
E: 24 64 [weight=2, ];
E: 25 50 [weight=2, ];
E: 25 53 [weight=3, ];
E: 25 64 [weight=2, ];
E: 26 50 [weight=2, ];
E: 26 52 [weight=3, ];
E: 26 64 [weight=2, ];
E: 27 31 [weight=1, ];
E: 27 50 [weight=2, ];
E: 27 51 [weight=3, ];
E: 27 52 [weight=2, ];
E: 27 53 [weight=7, ];
E: 27 64 [weight=2, ];
E: 28 30 [weight=1, ];
E: 28 50 [weight=2, ];
E: 28 51 [weight=3, ];
E: 28 52 [weight=7, ];
E: 28 53 [weight=2, ];
E: 28 64 [weight=2, ];
E: 29 50 [weight=2, ];
E: 29 51 [weight=1, ];
E: 29 64 [weight=2, ];
E: 30 50 [weight=2, ];
E: 30 53 [weight=1, ];
E: 30 64 [weight=2, ];
E: 31 50 [weight=2, ];
E: 31 52 [weight=1, ];
E: 31 64 [weight=2, ];
E: 32 50 [weight=2, ];
E: 32 51 [weight=2, ];
E: 32 64 [weight=2, ];
E: 33 50 [weight=2, ];
E: 33 51 [weight=2, ];
E: 33 64 [weight=2, ];
E: 34 50 [weight=2, ];
E: 34 53 [weight=2, ];
E: 34 64 [weight=2, ];
E: 35 50 [weight=2, ];
E: 35 51 [weight=2, ];
E: 35 64 [weight=2, ];
E: 36 50 [weight=2, ];
E: 36 52 [weight=2, ];
E: 36 64 [weight=2, ];
E: 37 50 [weight=2, ];
E: 37 51 [weight=2, ];
E: 37 52 [weight=5, ];
E: 37 53 [weight=5, ];
E: 37 64 [weight=2, ];
E: 38 49 [weight=1, ];
E: 38 50 [weight=1, ];
E: 38 52 [weight=7, ];
E: 38 53 [weight=7, ];
E: 38 54 [weight=2, ];
E: 38 64 [weight=2, ];
E: 39 49 [weight=1, ];
E: 39 50 [weight=1, ];
E: 39 51 [weight=4, ];
E: 39 55 [weight=6, ];
E: 40 50 [weight=2, ];
E: 40 51 [weight=1, ];
E: 40 52 [weight=1, ];
E: 40 53 [weight=1, ];
E: 40 64 [weight=2, ];
E: 41 50 [weight=2, ];
E: 41 51 [weight=1, ];
E: 41 52 [weight=1, ];
E: 41 53 [weight=1, ];
E: 41 64 [weight=2, ];
E: 42 50 [weight=2, ];
E: 42 64 [weight=2, ];
E: 43 50 [weight=2, ];
E: 43 64 [weight=2, ];
E: 44 50 [weight=2, ];
E: 44 64 [weight=2, ];
E: 45 49 [weight=2, ];
E: 45 50 [weight=4, ];
E: 45 51 [weight=4, ];
E: 45 52 [weight=4, ];
E: 45 53 [weight=4, ];
E: 45 64 [weight=2, ];
E: 46 48 [weight=1, ];
E: 46 49 [weight=1, ];
E: 46 50 [weight=3, ];
E: 46 51 [weight=2, ];
E: 46 52 [weight=2, ];
E: 46 53 [weight=2, ];
E: 46 64 [weight=2, ];
E: 47 49 [weight=2, ];
E: 47 50 [weight=4, ];
E: 47 51 [weight=4, ];
E: 47 52 [weight=4, ];
E: 47 53 [weight=4, ];
E: 47 64 [weight=2, ];
E: 48 49 [weight=2, ];
E: 48 50 [weight=4, ];
E: 48 51 [weight=4, ];
E: 48 52 [weight=4, ];
E: 48 53 [weight=4, ];
E: 48 64 [weight=2, ];
E: 49 51 [weight=2, ];
E: 49 52 [weight=2, ];
E: 49 53 [weight=2, ];
E: 49 64 [weight=1, ];
E: 50 51 [weight=2, ];
E: 50 52 [weight=2, ];
E: 50 53 [weight=2, ];
E: 50 64 [weight=1, ];
E: 51 64 [weight=2, ];
E: 52 64 [weight=2, ];
E: 53 64 [weight=2, ];
E: 54 63 [weight=1, ];
E: 54 64 [weight=1, ];
E: 55 63 [weight=1, ];
E: 55 64 [weight=1, ];
E: 56 64 [weight=2, ];
E: 57 64 [weight=2, ];
E: 58 64 [weight=2, ];
E: 59 63 [weight=2, ];
E: 59 64 [weight=4, ];
E: 60 62 [weight=1, ];
E: 60 63 [weight=1, ];
E: 60 64 [weight=3, ];
E: 61 63 [weight=2, ];
E: 61 64 [weight=4, ];
E: 62 63 [weight=2, ];
E: 62 64 [weight=4, ];
