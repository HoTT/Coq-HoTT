N: 44 "Fraction_ind" [body=yes, kind=cnst, prop=yes, path="Localization", ];
N: 43 "Fraction_rec" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 45 "Fraction_rect" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 42 "Fraction_sind" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 54 "IsMultiplicativeSubset_ind" [body=yes, kind=cnst, prop=yes, path="Localization", ];
N: 53 "IsMultiplicativeSubset_rec" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 55 "IsMultiplicativeSubset_rect" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 52 "IsMultiplicativeSubset_sind" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 15 "associative_mult_rng_localization" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 17 "associative_plus_rng_localization" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 14 "commutative_mult_rng_localization" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 20 "commutative_plus_rng_localization" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 40 "denominator" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 34 "frac_add" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 33 "frac_add_wd" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 32 "frac_add_wd_l" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 31 "frac_add_wd_r" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 35 "frac_in" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 29 "frac_mult" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 28 "frac_mult_wd_l" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 27 "frac_mult_wd_r" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 23 "frac_negate" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 22 "frac_negate_wd" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 3 "fraction_decompose" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 38 "fraction_eq" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 36 "fraction_eq_refl" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 37 "fraction_eq_simple" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 39 "in_mult_subset_denominator" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 5 "isinvertible_denominator" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 6 "isinvertible_rng_localization" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 4 "isinvertible_rng_localization_preserved" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 48 "ismultiplicative_isinvertible" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 49 "ismultiplicative_powers" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 9 "issemiringpreserving_rng_localization_rec_map" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 13 "leftdistribute_rng_localization" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 16 "leftidentity_mult_rng_localization" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 19 "leftidentity_plus_rng_localization" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 18 "leftinverse_plus_rng_localization" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 11 "loc_in" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 50 "mss_mult" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 51 "mss_one" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 26 "mult_rng_localization" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 21 "negate_rng_localization" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 41 "numerator" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 24 "one_rng_localization" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 30 "plus_rng_localization" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 12 "rng_localization" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 2 "rng_localization_ind" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 1 "rng_localization_ind_homotopy" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 8 "rng_localization_rec" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 7 "rng_localization_rec_beta" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 10 "rng_localization_rec_map" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 25 "zero_rng_localization" [body=yes, kind=cnst, prop=no, path="Localization", ];
N: 47 "Fraction" [kind=inductive, prop=no, path="Localization", ];
N: 57 "IsMultiplicativeSubset" [kind=inductive, prop=no, path="Localization", ];
N: 46 "Build_Fraction" [kind=construct, prop=no, path="Localization", ];
N: 56 "Build_IsMultiplicativeSubset" [kind=construct, prop=no, path="Localization", ];
E: 1 2 [weight=1, ];
E: 1 11 [weight=4, ];
E: 1 12 [weight=91, ];
E: 1 26 [weight=2, ];
E: 1 57 [weight=2, ];
E: 2 3 [weight=3, ];
E: 2 5 [weight=12, ];
E: 2 11 [weight=23, ];
E: 2 12 [weight=35, ];
E: 2 26 [weight=8, ];
E: 2 38 [weight=18, ];
E: 2 47 [weight=20, ];
E: 2 57 [weight=2, ];
E: 3 5 [weight=1, ];
E: 3 11 [weight=2, ];
E: 3 12 [weight=2, ];
E: 3 26 [weight=1, ];
E: 3 29 [weight=2, ];
E: 3 35 [weight=2, ];
E: 3 37 [weight=1, ];
E: 3 38 [weight=3, ];
E: 3 46 [weight=2, ];
E: 3 47 [weight=5, ];
E: 3 57 [weight=2, ];
E: 4 11 [weight=2, ];
E: 4 12 [weight=2, ];
E: 4 57 [weight=2, ];
E: 5 6 [weight=1, ];
E: 5 11 [weight=1, ];
E: 5 12 [weight=1, ];
E: 5 47 [weight=2, ];
E: 5 57 [weight=2, ];
E: 6 11 [weight=2, ];
E: 6 12 [weight=2, ];
E: 6 29 [weight=2, ];
E: 6 35 [weight=2, ];
E: 6 37 [weight=1, ];
E: 6 38 [weight=2, ];
E: 6 46 [weight=6, ];
E: 6 47 [weight=2, ];
E: 6 57 [weight=2, ];
E: 7 8 [weight=3, ];
E: 7 11 [weight=3, ];
E: 7 12 [weight=3, ];
E: 7 57 [weight=2, ];
E: 8 9 [weight=1, ];
E: 8 10 [weight=1, ];
E: 8 12 [weight=2, ];
E: 8 57 [weight=2, ];
E: 9 10 [weight=24, ];
E: 9 12 [weight=24, ];
E: 9 24 [weight=3, ];
E: 9 25 [weight=5, ];
E: 9 26 [weight=6, ];
E: 9 30 [weight=6, ];
E: 9 38 [weight=18, ];
E: 9 46 [weight=10, ];
E: 9 47 [weight=22, ];
E: 9 57 [weight=2, ];
E: 10 12 [weight=1, ];
E: 10 38 [weight=3, ];
E: 10 47 [weight=8, ];
E: 10 57 [weight=2, ];
E: 11 12 [weight=31, ];
E: 11 29 [weight=4, ];
E: 11 34 [weight=4, ];
E: 11 35 [weight=30, ];
E: 11 37 [weight=2, ];
E: 11 38 [weight=9, ];
E: 11 47 [weight=11, ];
E: 11 57 [weight=2, ];
E: 12 13 [weight=1, ];
E: 12 14 [weight=1, ];
E: 12 15 [weight=1, ];
E: 12 16 [weight=1, ];
E: 12 17 [weight=1, ];
E: 12 18 [weight=1, ];
E: 12 19 [weight=1, ];
E: 12 20 [weight=1, ];
E: 12 21 [weight=1, ];
E: 12 24 [weight=1, ];
E: 12 25 [weight=1, ];
E: 12 26 [weight=1, ];
E: 12 30 [weight=1, ];
E: 12 38 [weight=2, ];
E: 12 47 [weight=2, ];
E: 12 57 [weight=2, ];
E: 13 26 [weight=7, ];
E: 13 29 [weight=12, ];
E: 13 30 [weight=5, ];
E: 13 34 [weight=8, ];
E: 13 37 [weight=1, ];
E: 13 38 [weight=12, ];
E: 13 47 [weight=15, ];
E: 13 57 [weight=2, ];
E: 14 26 [weight=5, ];
E: 14 29 [weight=8, ];
E: 14 37 [weight=1, ];
E: 14 38 [weight=11, ];
E: 14 47 [weight=13, ];
E: 14 57 [weight=2, ];
E: 15 26 [weight=9, ];
E: 15 29 [weight=24, ];
E: 15 37 [weight=1, ];
E: 15 38 [weight=12, ];
E: 15 47 [weight=15, ];
E: 15 57 [weight=2, ];
E: 16 24 [weight=3, ];
E: 16 26 [weight=3, ];
E: 16 29 [weight=4, ];
E: 16 37 [weight=1, ];
E: 16 38 [weight=9, ];
E: 16 46 [weight=4, ];
E: 16 47 [weight=10, ];
E: 16 57 [weight=2, ];
E: 17 30 [weight=9, ];
E: 17 34 [weight=16, ];
E: 17 37 [weight=1, ];
E: 17 38 [weight=12, ];
E: 17 47 [weight=15, ];
E: 17 57 [weight=2, ];
E: 18 21 [weight=3, ];
E: 18 23 [weight=4, ];
E: 18 25 [weight=3, ];
E: 18 30 [weight=3, ];
E: 18 34 [weight=4, ];
E: 18 37 [weight=1, ];
E: 18 38 [weight=10, ];
E: 18 46 [weight=4, ];
E: 18 47 [weight=11, ];
E: 18 57 [weight=2, ];
E: 19 25 [weight=3, ];
E: 19 30 [weight=3, ];
E: 19 34 [weight=4, ];
E: 19 37 [weight=1, ];
E: 19 38 [weight=9, ];
E: 19 46 [weight=4, ];
E: 19 47 [weight=10, ];
E: 19 57 [weight=2, ];
E: 20 30 [weight=5, ];
E: 20 34 [weight=8, ];
E: 20 37 [weight=1, ];
E: 20 38 [weight=11, ];
E: 20 47 [weight=13, ];
E: 20 57 [weight=2, ];
E: 21 22 [weight=1, ];
E: 21 23 [weight=3, ];
E: 21 38 [weight=7, ];
E: 21 47 [weight=9, ];
E: 22 23 [weight=14, ];
E: 22 38 [weight=3, ];
E: 22 47 [weight=4, ];
E: 23 46 [weight=1, ];
E: 23 47 [weight=4, ];
E: 24 38 [weight=2, ];
E: 24 46 [weight=1, ];
E: 24 47 [weight=2, ];
E: 24 57 [weight=2, ];
E: 25 38 [weight=2, ];
E: 25 46 [weight=1, ];
E: 25 47 [weight=2, ];
E: 25 57 [weight=2, ];
E: 26 27 [weight=1, ];
E: 26 28 [weight=1, ];
E: 26 29 [weight=9, ];
E: 26 38 [weight=20, ];
E: 26 47 [weight=44, ];
E: 26 57 [weight=2, ];
E: 27 29 [weight=14, ];
E: 27 38 [weight=3, ];
E: 27 47 [weight=6, ];
E: 27 57 [weight=2, ];
E: 28 29 [weight=14, ];
E: 28 38 [weight=3, ];
E: 28 47 [weight=6, ];
E: 28 57 [weight=2, ];
E: 29 46 [weight=1, ];
E: 29 47 [weight=7, ];
E: 29 57 [weight=2, ];
E: 30 31 [weight=1, ];
E: 30 32 [weight=1, ];
E: 30 34 [weight=5, ];
E: 30 38 [weight=10, ];
E: 30 47 [weight=18, ];
E: 30 57 [weight=2, ];
E: 31 33 [weight=1, ];
E: 31 34 [weight=2, ];
E: 31 36 [weight=1, ];
E: 31 38 [weight=4, ];
E: 31 47 [weight=6, ];
E: 31 57 [weight=2, ];
E: 32 33 [weight=1, ];
E: 32 34 [weight=2, ];
E: 32 36 [weight=1, ];
E: 32 38 [weight=4, ];
E: 32 47 [weight=6, ];
E: 32 57 [weight=2, ];
E: 33 34 [weight=14, ];
E: 33 38 [weight=9, ];
E: 33 46 [weight=30, ];
E: 33 47 [weight=8, ];
E: 33 57 [weight=2, ];
E: 34 46 [weight=1, ];
E: 34 47 [weight=7, ];
E: 34 57 [weight=2, ];
E: 35 46 [weight=1, ];
E: 35 47 [weight=1, ];
E: 35 57 [weight=2, ];
E: 36 37 [weight=1, ];
E: 36 38 [weight=1, ];
E: 36 47 [weight=2, ];
E: 36 57 [weight=2, ];
E: 37 38 [weight=1, ];
E: 37 47 [weight=4, ];
E: 37 57 [weight=2, ];
E: 38 47 [weight=4, ];
E: 39 47 [weight=2, ];
E: 40 47 [weight=2, ];
E: 41 47 [weight=2, ];
E: 42 46 [weight=2, ];
E: 42 47 [weight=4, ];
E: 43 45 [weight=1, ];
E: 43 46 [weight=1, ];
E: 43 47 [weight=3, ];
E: 44 46 [weight=2, ];
E: 44 47 [weight=4, ];
E: 45 46 [weight=2, ];
E: 45 47 [weight=4, ];
E: 48 56 [weight=1, ];
E: 48 57 [weight=1, ];
E: 49 56 [weight=1, ];
E: 49 57 [weight=1, ];
E: 50 57 [weight=2, ];
E: 51 57 [weight=2, ];
E: 52 56 [weight=2, ];
E: 52 57 [weight=4, ];
E: 53 55 [weight=1, ];
E: 53 56 [weight=1, ];
E: 53 57 [weight=3, ];
E: 54 56 [weight=2, ];
E: 54 57 [weight=4, ];
E: 55 56 [weight=2, ];
E: 55 57 [weight=4, ];
