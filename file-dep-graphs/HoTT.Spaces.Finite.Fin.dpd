N: 43 "Fin" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 39 "contr_fin1" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 41 "decidable_fin" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 40 "decidablepaths_fin" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 9 "equiv_fin_equiv" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 38 "fin_empty" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 17 "fin_equiv" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 16 "fin_equiv'" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 15 "fin_equiv_hfiber" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 12 "fin_equiv_inj_fst" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 11 "fin_equiv_inj_snd" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 14 "fin_equiv_inv" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 13 "fin_equiv_issect" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 35 "fin_incl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 36 "fin_last" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 2 "fin_nat" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 42 "fin_to_nat" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 27 "fin_transpose_last_two" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 26 "fin_transpose_last_two_last" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 25 "fin_transpose_last_two_nextlast" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 24 "fin_transpose_last_two_rest" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 23 "fin_transpose_last_with" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 18 "fin_transpose_last_with_invol" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 22 "fin_transpose_last_with_last" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 19 "fin_transpose_last_with_last_other" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 20 "fin_transpose_last_with_rest" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 21 "fin_transpose_last_with_with" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 37 "fin_zero" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 34 "fsucc" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 3 "fsucc_mod" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 33 "isembedding_fsucc" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 10 "isequiv_fin_equiv" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 8 "nat_eq_fin_equiv" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 7 "nat_fin" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 5 "nat_fin_compl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 4 "nat_fin_compl_compl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 6 "nat_fin_inl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 32 "path_fin_fsucc_incl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 31 "path_nat_fin_incl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 28 "path_nat_fin_last" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 29 "path_nat_fin_zero" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 30 "path_nat_fsucc" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 1 "sperners_lemma_1d" [body=yes, kind=cnst, prop=no, path="Fin", ];
E: 1 34 [weight=13, ];
E: 1 35 [weight=32, ];
E: 1 36 [weight=18, ];
E: 1 37 [weight=9, ];
E: 1 43 [weight=42, ];
E: 2 3 [weight=1, ];
E: 2 37 [weight=1, ];
E: 2 43 [weight=3, ];
E: 3 34 [weight=1, ];
E: 3 37 [weight=1, ];
E: 3 43 [weight=9, ];
E: 4 5 [weight=17, ];
E: 4 7 [weight=17, ];
E: 4 43 [weight=13, ];
E: 5 43 [weight=9, ];
E: 6 7 [weight=3, ];
E: 6 43 [weight=4, ];
E: 7 43 [weight=9, ];
E: 8 14 [weight=1, ];
E: 8 43 [weight=28, ];
E: 9 10 [weight=1, ];
E: 9 16 [weight=1, ];
E: 9 43 [weight=10, ];
E: 10 11 [weight=2, ];
E: 10 12 [weight=2, ];
E: 10 13 [weight=1, ];
E: 10 14 [weight=3, ];
E: 10 16 [weight=43, ];
E: 10 40 [weight=1, ];
E: 10 43 [weight=348, ];
E: 11 17 [weight=10, ];
E: 11 22 [weight=2, ];
E: 11 23 [weight=6, ];
E: 11 43 [weight=54, ];
E: 12 17 [weight=9, ];
E: 12 22 [weight=2, ];
E: 12 23 [weight=2, ];
E: 12 43 [weight=31, ];
E: 13 14 [weight=1, ];
E: 13 15 [weight=1, ];
E: 13 16 [weight=1, ];
E: 13 43 [weight=7, ];
E: 14 15 [weight=1, ];
E: 14 43 [weight=7, ];
E: 15 16 [weight=13, ];
E: 15 18 [weight=1, ];
E: 15 19 [weight=1, ];
E: 15 20 [weight=4, ];
E: 15 21 [weight=4, ];
E: 15 22 [weight=12, ];
E: 15 23 [weight=104, ];
E: 15 43 [weight=2030, ];
E: 16 17 [weight=1, ];
E: 16 43 [weight=8, ];
E: 17 23 [weight=1, ];
E: 17 43 [weight=13, ];
E: 18 19 [weight=2, ];
E: 18 20 [weight=2, ];
E: 18 21 [weight=2, ];
E: 18 22 [weight=2, ];
E: 18 23 [weight=26, ];
E: 18 40 [weight=1, ];
E: 18 43 [weight=96, ];
E: 19 23 [weight=2, ];
E: 19 43 [weight=9, ];
E: 20 23 [weight=15, ];
E: 20 43 [weight=201, ];
E: 21 23 [weight=14, ];
E: 21 43 [weight=58, ];
E: 22 23 [weight=14, ];
E: 22 43 [weight=66, ];
E: 23 27 [weight=3, ];
E: 23 43 [weight=32, ];
E: 24 27 [weight=2, ];
E: 24 43 [weight=10, ];
E: 25 27 [weight=2, ];
E: 25 43 [weight=2, ];
E: 26 27 [weight=2, ];
E: 26 43 [weight=2, ];
E: 27 43 [weight=2, ];
E: 28 36 [weight=2, ];
E: 28 42 [weight=2, ];
E: 29 37 [weight=4, ];
E: 29 42 [weight=4, ];
E: 30 31 [weight=1, ];
E: 30 32 [weight=1, ];
E: 30 34 [weight=12, ];
E: 30 35 [weight=3, ];
E: 30 42 [weight=20, ];
E: 30 43 [weight=15, ];
E: 31 35 [weight=2, ];
E: 31 42 [weight=3, ];
E: 31 43 [weight=2, ];
E: 32 34 [weight=3, ];
E: 32 35 [weight=3, ];
E: 32 43 [weight=4, ];
E: 33 34 [weight=41, ];
E: 33 40 [weight=1, ];
E: 33 43 [weight=120, ];
E: 34 43 [weight=11, ];
E: 35 43 [weight=4, ];
E: 36 43 [weight=1, ];
E: 37 43 [weight=4, ];
E: 38 43 [weight=5, ];
E: 39 43 [weight=1, ];
E: 40 43 [weight=7, ];
E: 41 43 [weight=3, ];
E: 42 43 [weight=4, ];
