N: 24 "Bool_to_S0" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 16 "Circle_to_S1" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 25 "S0_to_Bool" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 17 "S1_to_Circle" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 12 "S2_to_TwoSphere" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 27 "Sphere" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 11 "TwoSphere_to_S2" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 3 "allnullhomot_trunc" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 22 "equiv_S0_Bool" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 14 "equiv_S1_Circle" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 7 "equiv_S2_TwoSphere" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 4 "isconnected_sn" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 23 "isequiv_S0_to_Bool" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 15 "isequiv_S1_to_Circle" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 8 "isequiv_S2_to_TwoSphere" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 21 "ispointed_bool" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 9 "issect_S2_to_TwoSphere" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 10 "issect_TwoSphere_to_S2" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 2 "istrunc_allnullhomot" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 6 "istrunc_s0" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 5 "istrunc_s1" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 20 "pBool" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 19 "pequiv_S0_Bool" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 13 "pequiv_S1_Circle" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 18 "pmap_from_bool" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 1 "pmap_from_psphere_iterated_loops" [body=yes, kind=cnst, prop=no, path="Spheres", ];
N: 26 "psphere" [body=yes, kind=cnst, prop=no, path="Spheres", ];
E: 1 18 [weight=1, ];
E: 1 19 [weight=1, ];
E: 1 20 [weight=3, ];
E: 1 26 [weight=19, ];
E: 2 25 [weight=1, ];
E: 2 27 [weight=18, ];
E: 3 27 [weight=11, ];
E: 4 27 [weight=6, ];
E: 5 15 [weight=2, ];
E: 5 17 [weight=1, ];
E: 5 27 [weight=3, ];
E: 6 23 [weight=2, ];
E: 6 25 [weight=1, ];
E: 6 27 [weight=3, ];
E: 7 8 [weight=1, ];
E: 7 12 [weight=1, ];
E: 7 27 [weight=2, ];
E: 8 9 [weight=1, ];
E: 8 10 [weight=1, ];
E: 8 11 [weight=1, ];
E: 8 12 [weight=2, ];
E: 8 27 [weight=2, ];
E: 9 11 [weight=998, ];
E: 9 12 [weight=775, ];
E: 9 27 [weight=1338, ];
E: 10 11 [weight=1035, ];
E: 10 12 [weight=1016, ];
E: 10 27 [weight=630, ];
E: 11 27 [weight=2, ];
E: 12 27 [weight=1, ];
E: 13 14 [weight=1, ];
E: 13 26 [weight=2, ];
E: 14 15 [weight=1, ];
E: 14 17 [weight=1, ];
E: 14 27 [weight=2, ];
E: 15 16 [weight=67, ];
E: 15 17 [weight=50, ];
E: 15 23 [weight=8, ];
E: 15 25 [weight=22, ];
E: 15 27 [weight=158, ];
E: 16 27 [weight=1, ];
E: 17 25 [weight=1, ];
E: 17 27 [weight=1, ];
E: 18 20 [weight=32, ];
E: 19 20 [weight=3, ];
E: 19 22 [weight=2, ];
E: 19 26 [weight=4, ];
E: 22 23 [weight=1, ];
E: 22 25 [weight=1, ];
E: 22 27 [weight=2, ];
E: 23 24 [weight=12, ];
E: 23 25 [weight=13, ];
E: 23 27 [weight=12, ];
E: 24 27 [weight=2, ];
E: 25 27 [weight=2, ];
E: 26 27 [weight=1, ];
