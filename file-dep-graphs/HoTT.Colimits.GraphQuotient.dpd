N: 2 "GraphQuotient_ind" [body=yes, kind=cnst, prop=no, path="GraphQuotient.GraphQuotient", ];
N: 1 "GraphQuotient_ind_beta_gqglue" [body=no, kind=cnst, prop=no, path="GraphQuotient.GraphQuotient", ];
N: 49 "GraphQuotient_rec" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 48 "GraphQuotient_rec_beta_gqglue" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 6 "equiv_functor_gq" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 15 "equiv_gqd_flatten" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 29 "fam_gqdepdescent" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 43 "fam_gqdescent" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 13 "fam_gqdescent_equiv_path" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 17 "flatten_gqd" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 16 "flatten_gqd_glue" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 8 "functor2_gq" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 12 "functor_gq" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 11 "functor_gq_beta_gqglue" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 9 "functor_gq_compose" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 10 "functor_gq_idmap" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 44 "gqd_e" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 45 "gqd_fam" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 31 "gqdd_e" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 32 "gqdd_fam" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 20 "gqddcs_e" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 21 "gqddcs_sect" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 25 "gqdds_e" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 26 "gqdds_sect" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 30 "gqdepdescent_fam" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 24 "gqdepdescent_ind" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 19 "gqdepdescent_rec" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 18 "gqdepdescent_rec_beta_gqglue" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 42 "gqdescent_fam" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 36 "gqdescent_ind" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 35 "gqdescent_ind_beta_gqglue" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 37 "gqds_e" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 38 "gqds_sect" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 3 "gqglue" [body=no, kind=cnst, prop=no, path="GraphQuotient.GraphQuotient", ];
N: 14 "idsys_flatten_gqdescent" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 7 "isequiv_functor_gq" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 41 "transport_fam_gqdescent_gqglue" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 5 "GraphQuotient" [kind=inductive, prop=no, path="GraphQuotient.GraphQuotient", ];
N: 34 "gqDepDescent" [kind=inductive, prop=no, path="GraphQuotient", ];
N: 23 "gqDepDescentConstSection" [kind=inductive, prop=no, path="GraphQuotient", ];
N: 28 "gqDepDescentSection" [kind=inductive, prop=no, path="GraphQuotient", ];
N: 47 "gqDescent" [kind=inductive, prop=no, path="GraphQuotient", ];
N: 40 "gqDescentSection" [kind=inductive, prop=no, path="GraphQuotient", ];
N: 4 "gq" [kind=construct, prop=no, path="GraphQuotient.GraphQuotient", ];
N: 33 "Build_gqDepDescent" [kind=construct, prop=no, path="GraphQuotient", ];
N: 22 "Build_gqDepDescentConstSection" [kind=construct, prop=no, path="GraphQuotient", ];
N: 27 "Build_gqDepDescentSection" [kind=construct, prop=no, path="GraphQuotient", ];
N: 46 "Build_gqDescent" [kind=construct, prop=no, path="GraphQuotient", ];
N: 39 "Build_gqDescentSection" [kind=construct, prop=no, path="GraphQuotient", ];
E: 1 2 [weight=3, ];
E: 1 3 [weight=3, ];
E: 1 4 [weight=11, ];
E: 1 5 [weight=4, ];
E: 2 3 [weight=4, ];
E: 2 4 [weight=14, ];
E: 2 5 [weight=9, ];
E: 3 4 [weight=2, ];
E: 3 5 [weight=1, ];
E: 6 5 [weight=4, ];
E: 6 7 [weight=1, ];
E: 6 12 [weight=1, ];
E: 7 5 [weight=28, ];
E: 7 8 [weight=2, ];
E: 7 9 [weight=2, ];
E: 7 10 [weight=2, ];
E: 7 12 [weight=17, ];
E: 8 2 [weight=1, ];
E: 8 3 [weight=36, ];
E: 8 4 [weight=203, ];
E: 8 5 [weight=136, ];
E: 8 11 [weight=2, ];
E: 8 12 [weight=134, ];
E: 9 2 [weight=1, ];
E: 9 3 [weight=23, ];
E: 9 4 [weight=102, ];
E: 9 5 [weight=113, ];
E: 9 11 [weight=3, ];
E: 9 12 [weight=124, ];
E: 10 2 [weight=1, ];
E: 10 3 [weight=13, ];
E: 10 4 [weight=50, ];
E: 10 5 [weight=42, ];
E: 10 12 [weight=24, ];
E: 10 48 [weight=1, ];
E: 11 3 [weight=3, ];
E: 11 4 [weight=5, ];
E: 11 5 [weight=4, ];
E: 11 12 [weight=3, ];
E: 11 48 [weight=1, ];
E: 12 3 [weight=1, ];
E: 12 4 [weight=1, ];
E: 12 5 [weight=3, ];
E: 12 49 [weight=1, ];
E: 13 4 [weight=2, ];
E: 13 5 [weight=4, ];
E: 13 14 [weight=1, ];
E: 13 28 [weight=2, ];
E: 13 34 [weight=4, ];
E: 13 43 [weight=2, ];
E: 13 47 [weight=2, ];
E: 14 4 [weight=7, ];
E: 14 5 [weight=7, ];
E: 14 24 [weight=2, ];
E: 14 28 [weight=2, ];
E: 14 30 [weight=3, ];
E: 14 34 [weight=4, ];
E: 14 43 [weight=7, ];
E: 14 47 [weight=2, ];
E: 15 2 [weight=1, ];
E: 15 3 [weight=171, ];
E: 15 4 [weight=471, ];
E: 15 5 [weight=932, ];
E: 15 16 [weight=88, ];
E: 15 18 [weight=2, ];
E: 15 19 [weight=95, ];
E: 15 22 [weight=125, ];
E: 15 24 [weight=1, ];
E: 15 27 [weight=1, ];
E: 15 30 [weight=3, ];
E: 15 41 [weight=22, ];
E: 15 43 [weight=537, ];
E: 15 47 [weight=2, ];
E: 15 48 [weight=2, ];
E: 15 49 [weight=85, ];
E: 16 3 [weight=2, ];
E: 16 4 [weight=3, ];
E: 16 5 [weight=3, ];
E: 16 17 [weight=8, ];
E: 16 41 [weight=1, ];
E: 16 43 [weight=4, ];
E: 16 47 [weight=2, ];
E: 17 4 [weight=1, ];
E: 17 5 [weight=2, ];
E: 17 43 [weight=2, ];
E: 17 47 [weight=2, ];
E: 18 1 [weight=1, ];
E: 18 3 [weight=1705, ];
E: 18 4 [weight=5097, ];
E: 18 5 [weight=2953, ];
E: 18 19 [weight=926, ];
E: 18 23 [weight=2, ];
E: 18 41 [weight=99, ];
E: 18 43 [weight=1935, ];
E: 18 47 [weight=2, ];
E: 19 2 [weight=1, ];
E: 19 3 [weight=7, ];
E: 19 4 [weight=16, ];
E: 19 5 [weight=11, ];
E: 19 23 [weight=2, ];
E: 19 41 [weight=1, ];
E: 19 43 [weight=9, ];
E: 19 47 [weight=2, ];
E: 20 23 [weight=2, ];
E: 20 47 [weight=2, ];
E: 21 23 [weight=2, ];
E: 21 47 [weight=2, ];
E: 22 47 [weight=1, ];
E: 23 47 [weight=1, ];
E: 24 2 [weight=1, ];
E: 24 3 [weight=13, ];
E: 24 4 [weight=35, ];
E: 24 5 [weight=32, ];
E: 24 28 [weight=2, ];
E: 24 30 [weight=7, ];
E: 24 41 [weight=6, ];
E: 24 43 [weight=21, ];
E: 24 47 [weight=2, ];
E: 25 28 [weight=2, ];
E: 25 34 [weight=2, ];
E: 25 47 [weight=2, ];
E: 26 28 [weight=2, ];
E: 26 34 [weight=2, ];
E: 26 47 [weight=2, ];
E: 27 34 [weight=1, ];
E: 27 47 [weight=1, ];
E: 28 34 [weight=1, ];
E: 28 47 [weight=1, ];
E: 29 2 [weight=1, ];
E: 29 3 [weight=16, ];
E: 29 4 [weight=79, ];
E: 29 5 [weight=43, ];
E: 29 34 [weight=2, ];
E: 29 41 [weight=1, ];
E: 29 43 [weight=23, ];
E: 29 47 [weight=2, ];
E: 30 3 [weight=1, ];
E: 30 4 [weight=3, ];
E: 30 5 [weight=3, ];
E: 30 33 [weight=1, ];
E: 30 34 [weight=1, ];
E: 30 41 [weight=1, ];
E: 30 43 [weight=3, ];
E: 30 47 [weight=2, ];
E: 31 34 [weight=2, ];
E: 31 47 [weight=2, ];
E: 32 34 [weight=2, ];
E: 32 47 [weight=2, ];
E: 33 47 [weight=1, ];
E: 34 47 [weight=1, ];
E: 35 1 [weight=1, ];
E: 35 3 [weight=4, ];
E: 35 4 [weight=13, ];
E: 35 5 [weight=4, ];
E: 35 36 [weight=3, ];
E: 35 40 [weight=2, ];
E: 35 41 [weight=2, ];
E: 35 43 [weight=8, ];
E: 35 47 [weight=2, ];
E: 36 2 [weight=1, ];
E: 36 3 [weight=1, ];
E: 36 4 [weight=3, ];
E: 36 5 [weight=2, ];
E: 36 40 [weight=2, ];
E: 36 41 [weight=1, ];
E: 36 43 [weight=4, ];
E: 36 47 [weight=2, ];
E: 37 40 [weight=2, ];
E: 37 47 [weight=2, ];
E: 38 40 [weight=2, ];
E: 38 47 [weight=2, ];
E: 39 47 [weight=1, ];
E: 40 47 [weight=1, ];
E: 41 3 [weight=2, ];
E: 41 4 [weight=5, ];
E: 41 5 [weight=2, ];
E: 41 43 [weight=3, ];
E: 41 47 [weight=2, ];
E: 41 48 [weight=1, ];
E: 42 3 [weight=1, ];
E: 42 4 [weight=3, ];
E: 42 5 [weight=5, ];
E: 42 46 [weight=1, ];
E: 42 47 [weight=1, ];
E: 43 5 [weight=1, ];
E: 43 47 [weight=2, ];
E: 43 49 [weight=1, ];
E: 44 47 [weight=2, ];
E: 45 47 [weight=2, ];
E: 48 1 [weight=1, ];
E: 48 2 [weight=26, ];
E: 48 3 [weight=72, ];
E: 48 4 [weight=170, ];
E: 48 5 [weight=136, ];
E: 48 49 [weight=6, ];
E: 49 2 [weight=1, ];
E: 49 3 [weight=2, ];
E: 49 4 [weight=4, ];
E: 49 5 [weight=5, ];
