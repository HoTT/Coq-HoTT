N: 15 "P" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 13 "P_dec" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 12 "P_inhab" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 14 "P_isHProp" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 29 "P_lower" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 26 "P_lower_inhab" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 28 "P_lower_prop" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 23 "P_upper" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 20 "P_upper_inhab" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 22 "P_upper_prop" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 45 "all_reals_locators" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 11 "archimedean_structure" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 37 "equiv_locator_locator'" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 18 "inc_N_Q" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 17 "inc_fin_N" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 46 "locates_left" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 49 "locates_right" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 47 "locates_right_false" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 48 "locates_right_true" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 56 "locator" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 52 "locator'_ind" [body=yes, kind=cnst, prop=yes, path="Locator", ];
N: 41 "locator'_locator" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 38 "locator'_locator_locator'" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 51 "locator'_rec" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 53 "locator'_rect" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 50 "locator'_sind" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 2 "locator_join" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 44 "locator_left" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 1 "locator_limit" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 42 "locator_locator'" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 40 "locator_locator'_locator" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 3 "locator_meet" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 10 "locator_minus" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 4 "locator_plus" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 5 "locator_recip" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 6 "locator_recip_neg" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 8 "locator_recip_pos" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 43 "locator_second" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 39 "locsig" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 25 "lower_bound" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 24 "lt1N" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 30 "ltN1" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 32 "ltQnegQ" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 31 "ltQposQ" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 33 "ltrx_locates_right" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 21 "ltx1N" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 27 "ltxN1" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 35 "ltxq_locates_left" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 36 "nltqx_locates_left" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 34 "nltxr_locates_right" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 57 "qinc" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 7 "recip_neg_nu" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 9 "recip_nu" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 16 "tight_bound" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 19 "upper_bound" [body=yes, kind=cnst, prop=no, path="Locator", ];
N: 55 "locator'" [kind=inductive, prop=no, path="Locator", ];
N: 54 "Build_locator'" [kind=construct, prop=no, path="Locator", ];
E: 1 56 [weight=4, ];
E: 1 57 [weight=44, ];
E: 2 56 [weight=6, ];
E: 2 57 [weight=46, ];
E: 3 56 [weight=6, ];
E: 3 57 [weight=46, ];
E: 4 16 [weight=1, ];
E: 4 31 [weight=1, ];
E: 4 56 [weight=6, ];
E: 4 57 [weight=95, ];
E: 5 6 [weight=1, ];
E: 5 7 [weight=1, ];
E: 5 8 [weight=1, ];
E: 5 9 [weight=1, ];
E: 5 56 [weight=10, ];
E: 5 57 [weight=4, ];
E: 6 7 [weight=4, ];
E: 6 8 [weight=1, ];
E: 6 9 [weight=6, ];
E: 6 10 [weight=2, ];
E: 6 56 [weight=8, ];
E: 6 57 [weight=4, ];
E: 8 9 [weight=27, ];
E: 8 56 [weight=4, ];
E: 8 57 [weight=73, ];
E: 10 56 [weight=4, ];
E: 10 57 [weight=22, ];
E: 11 12 [weight=1, ];
E: 11 13 [weight=1, ];
E: 11 15 [weight=2, ];
E: 11 31 [weight=3, ];
E: 11 32 [weight=3, ];
E: 11 42 [weight=6, ];
E: 11 46 [weight=2, ];
E: 11 56 [weight=4, ];
E: 11 57 [weight=8, ];
E: 12 15 [weight=8, ];
E: 12 31 [weight=2, ];
E: 12 32 [weight=2, ];
E: 12 33 [weight=1, ];
E: 12 35 [weight=1, ];
E: 12 42 [weight=4, ];
E: 12 46 [weight=1, ];
E: 12 56 [weight=4, ];
E: 12 57 [weight=4, ];
E: 13 15 [weight=2, ];
E: 13 31 [weight=2, ];
E: 13 32 [weight=2, ];
E: 13 42 [weight=3, ];
E: 13 46 [weight=2, ];
E: 13 56 [weight=4, ];
E: 13 57 [weight=2, ];
E: 14 15 [weight=1, ];
E: 14 31 [weight=2, ];
E: 14 32 [weight=2, ];
E: 14 42 [weight=3, ];
E: 14 46 [weight=2, ];
E: 14 56 [weight=4, ];
E: 14 57 [weight=2, ];
E: 15 31 [weight=1, ];
E: 15 32 [weight=1, ];
E: 15 42 [weight=2, ];
E: 15 46 [weight=1, ];
E: 15 56 [weight=4, ];
E: 16 17 [weight=40, ];
E: 16 18 [weight=150, ];
E: 16 19 [weight=1, ];
E: 16 25 [weight=1, ];
E: 16 33 [weight=1, ];
E: 16 35 [weight=1, ];
E: 16 42 [weight=5, ];
E: 16 56 [weight=2, ];
E: 16 57 [weight=67, ];
E: 19 20 [weight=1, ];
E: 19 23 [weight=4, ];
E: 19 24 [weight=1, ];
E: 19 56 [weight=2, ];
E: 19 57 [weight=21, ];
E: 20 21 [weight=1, ];
E: 20 23 [weight=6, ];
E: 20 24 [weight=1, ];
E: 20 35 [weight=1, ];
E: 20 42 [weight=1, ];
E: 20 56 [weight=2, ];
E: 20 57 [weight=8, ];
E: 22 23 [weight=2, ];
E: 22 56 [weight=2, ];
E: 23 24 [weight=1, ];
E: 23 42 [weight=1, ];
E: 23 46 [weight=1, ];
E: 23 56 [weight=2, ];
E: 24 31 [weight=1, ];
E: 25 26 [weight=1, ];
E: 25 29 [weight=3, ];
E: 25 30 [weight=2, ];
E: 25 56 [weight=2, ];
E: 25 57 [weight=7, ];
E: 26 27 [weight=1, ];
E: 26 29 [weight=6, ];
E: 26 30 [weight=1, ];
E: 26 33 [weight=1, ];
E: 26 42 [weight=1, ];
E: 26 56 [weight=2, ];
E: 26 57 [weight=8, ];
E: 28 29 [weight=1, ];
E: 28 30 [weight=1, ];
E: 28 56 [weight=2, ];
E: 28 57 [weight=2, ];
E: 29 30 [weight=1, ];
E: 29 42 [weight=1, ];
E: 29 56 [weight=2, ];
E: 30 32 [weight=1, ];
E: 33 34 [weight=1, ];
E: 33 55 [weight=2, ];
E: 33 57 [weight=3, ];
E: 34 55 [weight=2, ];
E: 34 57 [weight=4, ];
E: 35 36 [weight=1, ];
E: 35 46 [weight=1, ];
E: 35 55 [weight=2, ];
E: 35 57 [weight=3, ];
E: 36 46 [weight=1, ];
E: 36 55 [weight=2, ];
E: 36 57 [weight=3, ];
E: 37 38 [weight=1, ];
E: 37 40 [weight=1, ];
E: 37 41 [weight=1, ];
E: 37 42 [weight=1, ];
E: 37 55 [weight=2, ];
E: 37 56 [weight=2, ];
E: 38 39 [weight=7, ];
E: 38 41 [weight=13, ];
E: 38 42 [weight=5, ];
E: 38 54 [weight=68, ];
E: 38 55 [weight=19, ];
E: 38 57 [weight=640, ];
E: 39 54 [weight=8, ];
E: 39 55 [weight=12, ];
E: 39 57 [weight=98, ];
E: 40 41 [weight=8, ];
E: 40 42 [weight=8, ];
E: 40 54 [weight=6, ];
E: 40 56 [weight=3, ];
E: 40 57 [weight=168, ];
E: 41 55 [weight=2, ];
E: 41 56 [weight=2, ];
E: 41 57 [weight=6, ];
E: 42 54 [weight=1, ];
E: 42 55 [weight=1, ];
E: 42 56 [weight=2, ];
E: 42 57 [weight=41, ];
E: 43 56 [weight=2, ];
E: 43 57 [weight=27, ];
E: 44 56 [weight=2, ];
E: 44 57 [weight=27, ];
E: 45 56 [weight=2, ];
E: 45 57 [weight=17, ];
E: 46 55 [weight=2, ];
E: 47 55 [weight=2, ];
E: 47 57 [weight=1, ];
E: 48 55 [weight=2, ];
E: 48 57 [weight=1, ];
E: 49 55 [weight=2, ];
E: 50 54 [weight=2, ];
E: 50 55 [weight=4, ];
E: 50 57 [weight=4, ];
E: 51 53 [weight=1, ];
E: 51 54 [weight=1, ];
E: 51 55 [weight=3, ];
E: 51 57 [weight=2, ];
E: 52 54 [weight=2, ];
E: 52 55 [weight=4, ];
E: 52 57 [weight=4, ];
E: 53 54 [weight=2, ];
E: 53 55 [weight=4, ];
E: 53 57 [weight=4, ];
E: 54 57 [weight=2, ];
E: 55 57 [weight=2, ];
E: 56 57 [weight=2, ];
