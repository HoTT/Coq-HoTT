N: 42 "binint_add_0_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 41 "binint_add_0_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 11 "binint_add_assoc" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 12 "binint_add_assoc_pos" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 43 "binint_add_comm" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 35 "binint_add_negation_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 34 "binint_add_negation_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 8 "binint_add_pred_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 7 "binint_add_pred_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 10 "binint_add_succ_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 9 "binint_add_succ_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 40 "binint_mul_0_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 39 "binint_mul_0_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 38 "binint_mul_1_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 37 "binint_mul_1_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 2 "binint_mul_add_distr_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 3 "binint_mul_add_distr_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 1 "binint_mul_assoc" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 6 "binint_mul_comm" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 33 "binint_neg_pos_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 23 "binint_negation_add_distr" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 31 "binint_negation_double" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 22 "binint_negation_inj" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 30 "binint_negation_pred_double" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 15 "binint_negation_pred_negation_red" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 29 "binint_negation_succ_double" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 32 "binint_pos_pos_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 13 "binint_pos_sub_add" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 36 "binint_pos_sub_diag" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 4 "binint_pos_sub_mul_neg" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 5 "binint_pos_sub_mul_pos" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 28 "binint_pos_sub_negation" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 21 "binint_pos_sub_succ_l" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 20 "binint_pos_sub_succ_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 17 "binint_pos_sub_succ_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 14 "binint_pred_add_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 18 "binint_pred_double_binint_pos_sub" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 16 "binint_pred_pos_sub_r" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 26 "binint_pred_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 19 "binint_succ_double_binint_pos_sub" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 27 "binint_succ_pred" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 24 "equiv_binint_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
N: 25 "isequiv_binint_succ" [body=yes, kind=cnst, prop=no, path="Spec", ];
E: 2 3 [weight=1, ];
E: 2 6 [weight=3, ];
E: 3 4 [weight=2, ];
E: 3 5 [weight=2, ];
E: 3 39 [weight=2, ];
E: 4 6 [weight=1, ];
E: 4 11 [weight=1, ];
E: 4 13 [weight=2, ];
E: 4 23 [weight=1, ];
E: 4 28 [weight=5, ];
E: 5 6 [weight=1, ];
E: 5 11 [weight=1, ];
E: 5 13 [weight=2, ];
E: 5 23 [weight=1, ];
E: 5 28 [weight=2, ];
E: 5 38 [weight=1, ];
E: 7 11 [weight=1, ];
E: 8 11 [weight=2, ];
E: 8 43 [weight=1, ];
E: 9 11 [weight=1, ];
E: 10 11 [weight=2, ];
E: 10 43 [weight=1, ];
E: 11 12 [weight=2, ];
E: 11 22 [weight=1, ];
E: 11 23 [weight=4, ];
E: 12 13 [weight=4, ];
E: 12 22 [weight=1, ];
E: 12 23 [weight=1, ];
E: 12 28 [weight=2, ];
E: 12 41 [weight=1, ];
E: 12 43 [weight=2, ];
E: 13 14 [weight=2, ];
E: 13 16 [weight=2, ];
E: 14 15 [weight=1, ];
E: 14 16 [weight=2, ];
E: 14 22 [weight=1, ];
E: 14 26 [weight=5, ];
E: 14 28 [weight=2, ];
E: 14 43 [weight=1, ];
E: 16 17 [weight=2, ];
E: 17 18 [weight=1, ];
E: 17 19 [weight=1, ];
E: 23 28 [weight=2, ];
E: 24 25 [weight=1, ];
E: 25 26 [weight=1, ];
E: 25 27 [weight=1, ];
E: 28 29 [weight=1, ];
E: 28 30 [weight=1, ];
E: 28 31 [weight=2, ];
E: 34 36 [weight=2, ];
E: 35 36 [weight=2, ];
