N: 40 "IsReflexive_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 39 "IsTransitive_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 28 "ap100_path_arrow2" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 19 "ap10_dpath_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 37 "ap10_path_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 35 "ap10_path_forall" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 36 "apD10_path_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 17 "ap_apply_Fl" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 15 "ap_apply_FlFr" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 16 "ap_apply_Fr" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 18 "ap_apply_l" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 8 "ap_functor_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 14 "ap_lambda" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 12 "ap_postcompose" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 13 "ap_precompose" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 21 "ap_transport_arrow_toconst" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 41 "arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 7 "contr_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 1 "decidable_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 20 "dpath_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 32 "equiv_ap10" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 5 "equiv_arrow_from_contr" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 3 "equiv_functor_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 2 "equiv_functor_arrow'" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 30 "equiv_path_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 29 "equiv_path_arrow2" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 34 "eta_path_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 11 "functor_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 9 "iff_not" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 4 "isequiv_functor_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 31 "isequiv_path_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 6 "istrunc_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 10 "not_contrapositive" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 38 "path_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 33 "path_arrow_1" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 27 "path_arrow_pp" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 26 "transport_arrow" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 25 "transport_arrow'" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 22 "transport_arrow_fromconst" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 24 "transport_arrow_toconst" [body=yes, kind=cnst, prop=no, path="Arrow", ];
N: 23 "transport_arrow_toconst'" [body=yes, kind=cnst, prop=no, path="Arrow", ];
E: 4 11 [weight=1, ];
E: 8 11 [weight=3, ];
E: 8 38 [weight=2, ];
E: 9 10 [weight=2, ];
E: 10 11 [weight=1, ];
E: 12 38 [weight=4, ];
E: 13 38 [weight=1, ];
E: 14 33 [weight=1, ];
E: 14 38 [weight=4, ];
E: 19 20 [weight=3, ];
E: 19 26 [weight=3, ];
E: 20 30 [weight=1, ];
E: 21 24 [weight=7, ];
E: 27 38 [weight=3, ];
E: 28 29 [weight=4, ];
E: 28 30 [weight=4, ];
E: 28 36 [weight=2, ];
E: 29 30 [weight=2, ];
E: 31 38 [weight=1, ];
E: 33 34 [weight=1, ];
E: 33 38 [weight=1, ];
E: 34 38 [weight=1, ];
E: 36 38 [weight=1, ];
E: 37 38 [weight=1, ];
E: 39 41 [weight=3, ];
E: 40 41 [weight=1, ];
