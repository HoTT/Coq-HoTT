N: 32 "P0" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 31 "P1" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 18 "PXguard" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 34 "Peqb" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 33 "Peqb_instance" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 37 "Pol_ind" [body=yes, kind=cnst, prop=yes, path="ring_pol", ];
N: 36 "Pol_rec" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 38 "Pol_rect" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 35 "Pol_sind" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 13 "add" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 24 "addC" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 21 "addX" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 22 "addX'" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 14 "add_aux" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 29 "andb_true" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 30 "eval" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 25 "eval_0" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 26 "eval_0'" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 17 "eval_PXguard" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 10 "eval_add" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 11 "eval_add'" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 23 "eval_addC" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 19 "eval_addX" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 20 "eval_addX'" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 12 "eval_add_aux" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 27 "eval_eqb" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 28 "eval_eqb'" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 6 "eval_mkPX" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 3 "eval_mul" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 4 "eval_mul'" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 15 "eval_mulC" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 8 "eval_mulX" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 1 "eval_toPol" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 7 "mkPX" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 5 "mul" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 16 "mulC" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 9 "mulX" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 2 "toPol" [body=yes, kind=cnst, prop=no, path="ring_pol", ];
N: 41 "Pol" [kind=inductive, prop=no, path="ring_pol", ];
N: 40 "Pconst" [kind=construct, prop=no, path="ring_pol", ];
N: 39 "PX" [kind=construct, prop=no, path="ring_pol", ];
E: 1 2 [weight=40, ];
E: 1 3 [weight=1, ];
E: 1 5 [weight=1, ];
E: 1 10 [weight=1, ];
E: 1 13 [weight=1, ];
E: 1 15 [weight=1, ];
E: 1 16 [weight=1, ];
E: 1 30 [weight=33, ];
E: 2 5 [weight=1, ];
E: 2 13 [weight=1, ];
E: 2 16 [weight=1, ];
E: 2 31 [weight=2, ];
E: 2 32 [weight=2, ];
E: 2 39 [weight=1, ];
E: 2 41 [weight=7, ];
E: 3 4 [weight=1, ];
E: 3 5 [weight=1, ];
E: 3 30 [weight=3, ];
E: 3 41 [weight=2, ];
E: 4 5 [weight=89, ];
E: 4 8 [weight=3, ];
E: 4 9 [weight=32, ];
E: 4 10 [weight=3, ];
E: 4 13 [weight=19, ];
E: 4 15 [weight=2, ];
E: 4 16 [weight=1, ];
E: 4 30 [weight=275, ];
E: 4 38 [weight=1, ];
E: 4 39 [weight=11, ];
E: 4 40 [weight=2, ];
E: 4 41 [weight=13, ];
E: 5 9 [weight=3, ];
E: 5 13 [weight=3, ];
E: 5 16 [weight=2, ];
E: 5 41 [weight=12, ];
E: 6 7 [weight=2, ];
E: 6 8 [weight=1, ];
E: 6 9 [weight=4, ];
E: 6 10 [weight=1, ];
E: 6 13 [weight=1, ];
E: 6 30 [weight=18, ];
E: 6 41 [weight=4, ];
E: 7 9 [weight=1, ];
E: 7 13 [weight=1, ];
E: 7 41 [weight=5, ];
E: 8 9 [weight=15, ];
E: 8 19 [weight=1, ];
E: 8 21 [weight=1, ];
E: 8 30 [weight=90, ];
E: 8 32 [weight=9, ];
E: 8 38 [weight=1, ];
E: 8 39 [weight=14, ];
E: 8 40 [weight=2, ];
E: 8 41 [weight=15, ];
E: 9 21 [weight=1, ];
E: 9 32 [weight=3, ];
E: 9 39 [weight=3, ];
E: 9 41 [weight=11, ];
E: 10 11 [weight=1, ];
E: 10 13 [weight=1, ];
E: 10 30 [weight=3, ];
E: 10 41 [weight=2, ];
E: 11 12 [weight=1, ];
E: 11 13 [weight=12, ];
E: 11 14 [weight=1, ];
E: 11 23 [weight=1, ];
E: 11 30 [weight=34, ];
E: 11 38 [weight=1, ];
E: 11 39 [weight=2, ];
E: 11 40 [weight=2, ];
E: 11 41 [weight=11, ];
E: 12 14 [weight=9, ];
E: 12 17 [weight=1, ];
E: 12 18 [weight=3, ];
E: 12 30 [weight=120, ];
E: 12 38 [weight=1, ];
E: 12 39 [weight=8, ];
E: 12 40 [weight=2, ];
E: 12 41 [weight=14, ];
E: 13 14 [weight=1, ];
E: 13 24 [weight=1, ];
E: 13 41 [weight=10, ];
E: 14 18 [weight=1, ];
E: 14 39 [weight=3, ];
E: 14 41 [weight=17, ];
E: 15 16 [weight=15, ];
E: 15 17 [weight=1, ];
E: 15 18 [weight=1, ];
E: 15 30 [weight=43, ];
E: 15 38 [weight=1, ];
E: 15 39 [weight=2, ];
E: 15 40 [weight=2, ];
E: 15 41 [weight=5, ];
E: 16 18 [weight=1, ];
E: 16 40 [weight=1, ];
E: 16 41 [weight=7, ];
E: 17 18 [weight=2, ];
E: 17 25 [weight=1, ];
E: 17 30 [weight=25, ];
E: 17 32 [weight=2, ];
E: 17 33 [weight=2, ];
E: 17 39 [weight=1, ];
E: 17 41 [weight=9, ];
E: 18 32 [weight=1, ];
E: 18 33 [weight=1, ];
E: 18 39 [weight=1, ];
E: 18 41 [weight=8, ];
E: 19 20 [weight=1, ];
E: 19 21 [weight=2, ];
E: 19 22 [weight=1, ];
E: 19 30 [weight=17, ];
E: 19 41 [weight=3, ];
E: 20 22 [weight=9, ];
E: 20 23 [weight=1, ];
E: 20 24 [weight=4, ];
E: 20 30 [weight=73, ];
E: 20 38 [weight=1, ];
E: 20 39 [weight=11, ];
E: 20 40 [weight=4, ];
E: 20 41 [weight=6, ];
E: 21 22 [weight=1, ];
E: 21 41 [weight=4, ];
E: 22 24 [weight=1, ];
E: 22 39 [weight=4, ];
E: 22 40 [weight=2, ];
E: 22 41 [weight=8, ];
E: 23 24 [weight=7, ];
E: 23 30 [weight=41, ];
E: 23 38 [weight=1, ];
E: 23 39 [weight=2, ];
E: 23 40 [weight=2, ];
E: 23 41 [weight=5, ];
E: 24 39 [weight=1, ];
E: 24 40 [weight=1, ];
E: 24 41 [weight=7, ];
E: 25 26 [weight=1, ];
E: 25 30 [weight=1, ];
E: 25 32 [weight=1, ];
E: 25 33 [weight=1, ];
E: 25 41 [weight=3, ];
E: 26 30 [weight=8, ];
E: 26 32 [weight=8, ];
E: 26 33 [weight=8, ];
E: 26 38 [weight=1, ];
E: 26 39 [weight=3, ];
E: 26 40 [weight=3, ];
E: 26 41 [weight=21, ];
E: 27 28 [weight=1, ];
E: 27 30 [weight=2, ];
E: 27 33 [weight=1, ];
E: 27 41 [weight=3, ];
E: 28 29 [weight=2, ];
E: 28 30 [weight=26, ];
E: 28 33 [weight=10, ];
E: 28 34 [weight=12, ];
E: 28 38 [weight=1, ];
E: 28 39 [weight=10, ];
E: 28 40 [weight=10, ];
E: 28 41 [weight=27, ];
E: 30 41 [weight=4, ];
E: 31 40 [weight=1, ];
E: 31 41 [weight=1, ];
E: 32 40 [weight=1, ];
E: 32 41 [weight=1, ];
E: 33 34 [weight=1, ];
E: 33 41 [weight=1, ];
E: 34 41 [weight=9, ];
E: 35 39 [weight=2, ];
E: 35 40 [weight=2, ];
E: 35 41 [weight=10, ];
E: 36 38 [weight=1, ];
E: 36 39 [weight=1, ];
E: 36 40 [weight=1, ];
E: 36 41 [weight=5, ];
E: 37 39 [weight=2, ];
E: 37 40 [weight=2, ];
E: 37 41 [weight=10, ];
E: 38 39 [weight=2, ];
E: 38 40 [weight=2, ];
E: 38 41 [weight=10, ];
