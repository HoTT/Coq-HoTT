N: 34 "FreeGroup" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 23 "FreeGroup_ind_homotopy" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 24 "FreeGroup_ind_hprop" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 25 "FreeGroup_ind_hprop'" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 28 "FreeGroup_rec" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 26 "FreeGroup_rec_beta" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 55 "Words" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 39 "associative_freegroup_type" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 54 "change_sign" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 53 "change_sign_inv" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 15 "equiv_freegroup_rec" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 13 "equiv_isfreegroupon_isequiv_precomp" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 16 "equiv_isfreegroupon_rec" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 3 "freegroup_const" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 49 "freegroup_eta" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 27 "freegroup_in" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 4 "freegroup_rec_compose" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 5 "freegroup_rec_in" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 48 "freegroup_tau" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 50 "freegroup_type" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 40 "inverse_freegroup_type" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 2 "is0functor_freegroup" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 1 "is1functor_freegroup" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 9 "is_retraction" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 17 "isequiv_isfreegroupon_rec" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 7 "isequiv_subgroup_incl_freegroupon" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 21 "isfreegroup_freegroup" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 22 "isfreegroupon_freegroup" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 20 "isfreegroupon_rec" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 19 "isfreegroupon_rec_beta" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 8 "isgenerated_isfreegroupon" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 12 "isgeneratedby" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 14 "ishprop_isfreegroupon" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 6 "iso_subgroup_incl_freegroupon" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 38 "leftidentity_freegroup_type" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 36 "leftinverse_freegroup_type" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 52 "map1" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 51 "map2" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 46 "monunit_freegroup_type" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 18 "path_homomorphism_from_free_group" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 37 "rightidentity_freegroup_type" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 35 "rightinverse_freegroup_type" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 47 "sgop_freegroup" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 11 "to_subgroup_generated" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 10 "to_subgroup_generated_beta" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 45 "word_change_sign" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 43 "word_change_sign_inv" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 44 "word_change_sign_ww" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 42 "word_concat_Vw" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 41 "word_concat_wV" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 33 "word_rec" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 32 "words_rec" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 29 "words_rec_coh" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 31 "words_rec_cons" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 30 "words_rec_pp" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
E: 1 2 [weight=9, ];
E: 1 5 [weight=1, ];
E: 1 23 [weight=2, ];
E: 1 27 [weight=2, ];
E: 1 34 [weight=12, ];
E: 2 27 [weight=1, ];
E: 2 28 [weight=1, ];
E: 2 34 [weight=4, ];
E: 3 23 [weight=1, ];
E: 3 27 [weight=1, ];
E: 3 28 [weight=2, ];
E: 3 34 [weight=7, ];
E: 4 23 [weight=1, ];
E: 4 27 [weight=1, ];
E: 4 28 [weight=5, ];
E: 4 34 [weight=7, ];
E: 5 23 [weight=1, ];
E: 5 27 [weight=3, ];
E: 5 28 [weight=2, ];
E: 5 34 [weight=15, ];
E: 6 7 [weight=1, ];
E: 7 8 [weight=1, ];
E: 8 9 [weight=1, ];
E: 8 11 [weight=4, ];
E: 8 12 [weight=1, ];
E: 9 10 [weight=1, ];
E: 9 11 [weight=5, ];
E: 9 18 [weight=1, ];
E: 10 11 [weight=1, ];
E: 10 19 [weight=1, ];
E: 11 20 [weight=1, ];
E: 13 14 [weight=1, ];
E: 13 16 [weight=1, ];
E: 15 16 [weight=1, ];
E: 15 22 [weight=1, ];
E: 15 27 [weight=1, ];
E: 15 34 [weight=2, ];
E: 16 17 [weight=1, ];
E: 16 20 [weight=1, ];
E: 17 18 [weight=1, ];
E: 17 19 [weight=2, ];
E: 17 20 [weight=6, ];
E: 19 20 [weight=1, ];
E: 21 22 [weight=1, ];
E: 21 27 [weight=1, ];
E: 21 34 [weight=2, ];
E: 22 23 [weight=1, ];
E: 22 27 [weight=15, ];
E: 22 28 [weight=10, ];
E: 22 34 [weight=32, ];
E: 22 51 [weight=5, ];
E: 22 52 [weight=5, ];
E: 22 55 [weight=15, ];
E: 23 24 [weight=1, ];
E: 23 27 [weight=4, ];
E: 23 34 [weight=48, ];
E: 23 40 [weight=3, ];
E: 24 25 [weight=1, ];
E: 24 27 [weight=11, ];
E: 24 34 [weight=42, ];
E: 24 40 [weight=2, ];
E: 24 46 [weight=2, ];
E: 24 47 [weight=3, ];
E: 24 49 [weight=6, ];
E: 24 55 [weight=1, ];
E: 25 34 [weight=5, ];
E: 25 49 [weight=2, ];
E: 25 51 [weight=7, ];
E: 25 52 [weight=7, ];
E: 25 55 [weight=23, ];
E: 26 27 [weight=2, ];
E: 26 28 [weight=2, ];
E: 26 34 [weight=2, ];
E: 27 34 [weight=1, ];
E: 27 49 [weight=1, ];
E: 27 50 [weight=2, ];
E: 27 55 [weight=2, ];
E: 28 29 [weight=29, ];
E: 28 30 [weight=1, ];
E: 28 32 [weight=29, ];
E: 28 34 [weight=24, ];
E: 28 51 [weight=104, ];
E: 28 52 [weight=104, ];
E: 28 55 [weight=378, ];
E: 29 30 [weight=4, ];
E: 29 32 [weight=58, ];
E: 29 51 [weight=2, ];
E: 29 52 [weight=2, ];
E: 29 54 [weight=21, ];
E: 29 55 [weight=16, ];
E: 30 31 [weight=2, ];
E: 30 32 [weight=38, ];
E: 30 33 [weight=9, ];
E: 30 55 [weight=8, ];
E: 31 32 [weight=9, ];
E: 31 33 [weight=6, ];
E: 31 55 [weight=2, ];
E: 32 33 [weight=2, ];
E: 32 55 [weight=2, ];
E: 34 35 [weight=1, ];
E: 34 36 [weight=1, ];
E: 34 37 [weight=1, ];
E: 34 38 [weight=1, ];
E: 34 39 [weight=1, ];
E: 34 40 [weight=2, ];
E: 34 46 [weight=3, ];
E: 34 47 [weight=4, ];
E: 34 50 [weight=7, ];
E: 34 51 [weight=1, ];
E: 34 52 [weight=1, ];
E: 34 55 [weight=3, ];
E: 35 40 [weight=5, ];
E: 35 41 [weight=1, ];
E: 35 46 [weight=5, ];
E: 35 47 [weight=5, ];
E: 35 50 [weight=23, ];
E: 35 51 [weight=12, ];
E: 35 52 [weight=12, ];
E: 35 55 [weight=37, ];
E: 36 40 [weight=5, ];
E: 36 42 [weight=1, ];
E: 36 46 [weight=5, ];
E: 36 47 [weight=5, ];
E: 36 50 [weight=23, ];
E: 36 51 [weight=12, ];
E: 36 52 [weight=12, ];
E: 36 55 [weight=37, ];
E: 37 46 [weight=5, ];
E: 37 47 [weight=5, ];
E: 37 50 [weight=17, ];
E: 37 51 [weight=19, ];
E: 37 52 [weight=19, ];
E: 37 55 [weight=59, ];
E: 38 46 [weight=5, ];
E: 38 47 [weight=5, ];
E: 38 50 [weight=18, ];
E: 38 51 [weight=14, ];
E: 38 52 [weight=14, ];
E: 38 55 [weight=43, ];
E: 39 47 [weight=50, ];
E: 39 50 [weight=70, ];
E: 39 51 [weight=93, ];
E: 39 52 [weight=93, ];
E: 39 55 [weight=285, ];
E: 40 43 [weight=1, ];
E: 40 44 [weight=4, ];
E: 40 45 [weight=84, ];
E: 40 48 [weight=1, ];
E: 40 49 [weight=19, ];
E: 40 50 [weight=14, ];
E: 40 51 [weight=7, ];
E: 40 52 [weight=7, ];
E: 40 54 [weight=14, ];
E: 40 55 [weight=35, ];
E: 41 42 [weight=1, ];
E: 41 43 [weight=1, ];
E: 41 45 [weight=4, ];
E: 41 46 [weight=2, ];
E: 41 49 [weight=2, ];
E: 41 50 [weight=4, ];
E: 41 55 [weight=3, ];
E: 42 45 [weight=16, ];
E: 42 46 [weight=8, ];
E: 42 48 [weight=1, ];
E: 42 49 [weight=14, ];
E: 42 50 [weight=19, ];
E: 42 53 [weight=1, ];
E: 42 54 [weight=17, ];
E: 42 55 [weight=2, ];
E: 43 45 [weight=4, ];
E: 43 53 [weight=1, ];
E: 43 54 [weight=30, ];
E: 43 55 [weight=4, ];
E: 44 45 [weight=6, ];
E: 44 54 [weight=11, ];
E: 44 55 [weight=6, ];
E: 45 54 [weight=1, ];
E: 45 55 [weight=3, ];
E: 46 49 [weight=1, ];
E: 46 50 [weight=1, ];
E: 47 48 [weight=6, ];
E: 47 49 [weight=79, ];
E: 47 50 [weight=51, ];
E: 47 51 [weight=53, ];
E: 47 52 [weight=53, ];
E: 47 54 [weight=52, ];
E: 47 55 [weight=283, ];
E: 48 49 [weight=2, ];
E: 48 50 [weight=1, ];
E: 48 51 [weight=7, ];
E: 48 52 [weight=7, ];
E: 48 54 [weight=3, ];
E: 48 55 [weight=28, ];
E: 49 50 [weight=1, ];
E: 49 51 [weight=5, ];
E: 49 52 [weight=5, ];
E: 49 55 [weight=18, ];
E: 50 51 [weight=1, ];
E: 50 52 [weight=1, ];
E: 50 55 [weight=3, ];
E: 51 55 [weight=8, ];
E: 52 54 [weight=1, ];
E: 52 55 [weight=8, ];
E: 53 54 [weight=4, ];
