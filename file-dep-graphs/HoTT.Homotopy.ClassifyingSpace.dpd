N: 1 "B" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace.ClassifyingSpaceNotation", ];
N: 3 "ClassifyingSpace_ind" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace.ClassifyingSpace", ];
N: 2 "ClassifyingSpace_ind_beta_bloop" [body=no, kind=cnst, prop=no, path="ClassifyingSpace.ClassifyingSpace", ];
N: 48 "ClassifyingSpace_ind_hprop" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 50 "ClassifyingSpace_ind_hset" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 52 "ClassifyingSpace_rec" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 51 "ClassifyingSpace_rec_beta_bloop" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 49 "ClassifyingSpace_rec_hset" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 30 "LoopGroup" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 26 "bg_mul" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 24 "bg_mul_left_id" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 23 "bg_mul_right_id" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 25 "bg_mul_symm" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 6 "bloop" [body=no, kind=cnst, prop=no, path="ClassifyingSpace.ClassifyingSpace", ];
N: 44 "bloop_id" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 43 "bloop_inv" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 20 "bloop_natural" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 5 "bloop_pp" [body=no, kind=cnst, prop=no, path="ClassifyingSpace.ClassifyingSpace", ];
N: 39 "codes" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 37 "codes_transport" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 36 "decode" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 35 "decode_encode" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 38 "encode" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 10 "equiv_bg_pi1_adjoint" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 33 "equiv_g_loops_bg" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 15 "equiv_grp_homo_pmap_bg" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 27 "grp_homo_loops" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 29 "grp_iso_g_loopgroup_bg" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 28 "grp_iso_g_pi1_bg" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 21 "is0functor_pclassifyingspace" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 17 "is1functor_pclassifyingspace" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 9 "is1natural_equiv_bg_pi1_adjoint_r" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 14 "is1natural_grp_homo_pmap_bg_r" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 47 "isconnected_classifyingspace" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 34 "isequiv_bloop" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 16 "isequiv_fmap_pclassifyingspace" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 22 "ishspace_bg" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 46 "ispointed_classifyingspace" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 4 "istrunc_ClassifyingSpace" [body=no, kind=cnst, prop=no, path="ClassifyingSpace.ClassifyingSpace", ];
N: 11 "natequiv_bg_pi1_adjoint" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 18 "natequiv_g_loops_bg" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 13 "natequiv_grp_homo_pmap_bg" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 45 "pClassifyingSpace" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 41 "pClassifyingSpace_rec" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 40 "pClassifyingSpace_rec_beta_bloop" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 42 "pbloop" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 19 "pbloop_natural" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 32 "pequiv_g_loops_bg" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 31 "pequiv_loops_bg_g" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 12 "pequiv_pclassifyingspace_pi1" [body=yes, kind=cnst, prop=no, path="ClassifyingSpace", ];
N: 8 "ClassifyingSpace" [kind=inductive, prop=no, path="ClassifyingSpace.ClassifyingSpace", ];
N: 7 "bbase" [kind=construct, prop=no, path="ClassifyingSpace.ClassifyingSpace", ];
E: 1 45 [weight=1, ];
E: 2 3 [weight=3, ];
E: 2 5 [weight=1, ];
E: 2 6 [weight=11, ];
E: 2 7 [weight=29, ];
E: 2 8 [weight=14, ];
E: 3 5 [weight=4, ];
E: 3 6 [weight=36, ];
E: 3 7 [weight=86, ];
E: 3 8 [weight=47, ];
E: 4 8 [weight=1, ];
E: 5 6 [weight=3, ];
E: 5 7 [weight=5, ];
E: 5 8 [weight=2, ];
E: 6 7 [weight=2, ];
E: 6 8 [weight=1, ];
E: 9 1 [weight=2, ];
E: 9 10 [weight=1, ];
E: 9 11 [weight=1, ];
E: 9 21 [weight=1, ];
E: 10 1 [weight=1, ];
E: 10 11 [weight=1, ];
E: 11 1 [weight=33, ];
E: 11 4 [weight=1, ];
E: 11 12 [weight=1, ];
E: 11 13 [weight=1, ];
E: 11 21 [weight=11, ];
E: 12 1 [weight=8, ];
E: 12 6 [weight=3, ];
E: 12 7 [weight=2, ];
E: 12 8 [weight=1, ];
E: 12 34 [weight=1, ];
E: 12 40 [weight=1, ];
E: 12 41 [weight=1, ];
E: 12 47 [weight=1, ];
E: 13 1 [weight=10, ];
E: 13 14 [weight=1, ];
E: 13 15 [weight=1, ];
E: 13 21 [weight=2, ];
E: 14 1 [weight=38, ];
E: 14 15 [weight=6, ];
E: 14 17 [weight=1, ];
E: 14 21 [weight=4, ];
E: 15 1 [weight=4, ];
E: 15 16 [weight=1, ];
E: 15 21 [weight=1, ];
E: 16 1 [weight=2087, ];
E: 16 4 [weight=1538, ];
E: 16 5 [weight=19, ];
E: 16 6 [weight=199, ];
E: 16 7 [weight=863, ];
E: 16 8 [weight=895, ];
E: 16 21 [weight=33, ];
E: 16 27 [weight=253, ];
E: 16 29 [weight=505, ];
E: 16 30 [weight=1010, ];
E: 16 33 [weight=1, ];
E: 16 35 [weight=3, ];
E: 16 38 [weight=6, ];
E: 16 40 [weight=1, ];
E: 16 50 [weight=3, ];
E: 16 51 [weight=3, ];
E: 16 52 [weight=15, ];
E: 17 1 [weight=207, ];
E: 17 4 [weight=65, ];
E: 17 5 [weight=62, ];
E: 17 6 [weight=430, ];
E: 17 7 [weight=686, ];
E: 17 8 [weight=619, ];
E: 17 21 [weight=80, ];
E: 17 50 [weight=3, ];
E: 17 51 [weight=6, ];
E: 17 52 [weight=56, ];
E: 18 1 [weight=17, ];
E: 18 19 [weight=1, ];
E: 18 21 [weight=4, ];
E: 18 32 [weight=4, ];
E: 19 1 [weight=17, ];
E: 19 4 [weight=1, ];
E: 19 20 [weight=1, ];
E: 19 21 [weight=2, ];
E: 19 42 [weight=4, ];
E: 20 1 [weight=16, ];
E: 20 4 [weight=1, ];
E: 20 5 [weight=1, ];
E: 20 6 [weight=9, ];
E: 20 7 [weight=10, ];
E: 20 8 [weight=5, ];
E: 20 21 [weight=1, ];
E: 20 40 [weight=1, ];
E: 21 1 [weight=10, ];
E: 21 4 [weight=1, ];
E: 21 5 [weight=1, ];
E: 21 6 [weight=6, ];
E: 21 7 [weight=10, ];
E: 21 8 [weight=5, ];
E: 21 41 [weight=1, ];
E: 22 1 [weight=2, ];
E: 22 23 [weight=1, ];
E: 22 24 [weight=1, ];
E: 22 26 [weight=1, ];
E: 23 1 [weight=4, ];
E: 23 7 [weight=1, ];
E: 23 26 [weight=1, ];
E: 24 1 [weight=2, ];
E: 24 7 [weight=2, ];
E: 24 25 [weight=1, ];
E: 24 26 [weight=1, ];
E: 25 1 [weight=103, ];
E: 25 4 [weight=53, ];
E: 25 5 [weight=66, ];
E: 25 6 [weight=1115, ];
E: 25 7 [weight=3380, ];
E: 25 8 [weight=1925, ];
E: 25 26 [weight=157, ];
E: 25 48 [weight=5, ];
E: 25 50 [weight=38, ];
E: 25 51 [weight=10, ];
E: 26 1 [weight=28, ];
E: 26 4 [weight=9, ];
E: 26 5 [weight=15, ];
E: 26 6 [weight=229, ];
E: 26 7 [weight=540, ];
E: 26 8 [weight=255, ];
E: 26 48 [weight=1, ];
E: 26 50 [weight=7, ];
E: 26 52 [weight=1, ];
E: 27 30 [weight=61, ];
E: 28 1 [weight=38, ];
E: 28 4 [weight=14, ];
E: 28 29 [weight=1, ];
E: 28 30 [weight=10, ];
E: 29 1 [weight=4, ];
E: 29 4 [weight=4, ];
E: 29 5 [weight=1, ];
E: 29 30 [weight=4, ];
E: 29 33 [weight=2, ];
E: 31 1 [weight=2, ];
E: 31 32 [weight=1, ];
E: 32 1 [weight=2, ];
E: 32 34 [weight=1, ];
E: 32 42 [weight=1, ];
E: 33 1 [weight=1, ];
E: 33 6 [weight=1, ];
E: 33 7 [weight=2, ];
E: 33 8 [weight=1, ];
E: 33 34 [weight=1, ];
E: 34 1 [weight=2, ];
E: 34 6 [weight=4, ];
E: 34 7 [weight=19, ];
E: 34 8 [weight=4, ];
E: 34 35 [weight=1, ];
E: 34 37 [weight=1, ];
E: 34 38 [weight=2, ];
E: 34 39 [weight=7, ];
E: 35 1 [weight=2, ];
E: 35 7 [weight=5, ];
E: 35 8 [weight=5, ];
E: 35 36 [weight=2, ];
E: 35 38 [weight=2, ];
E: 35 44 [weight=1, ];
E: 36 1 [weight=1, ];
E: 36 4 [weight=1, ];
E: 36 5 [weight=1, ];
E: 36 6 [weight=32, ];
E: 36 7 [weight=67, ];
E: 36 8 [weight=48, ];
E: 36 37 [weight=1, ];
E: 36 39 [weight=13, ];
E: 36 50 [weight=1, ];
E: 37 1 [weight=10, ];
E: 37 6 [weight=11, ];
E: 37 7 [weight=53, ];
E: 37 8 [weight=16, ];
E: 37 39 [weight=42, ];
E: 37 51 [weight=1, ];
E: 38 1 [weight=2, ];
E: 38 7 [weight=4, ];
E: 38 8 [weight=4, ];
E: 38 39 [weight=3, ];
E: 39 1 [weight=1, ];
E: 39 52 [weight=1, ];
E: 40 1 [weight=12, ];
E: 40 6 [weight=13, ];
E: 40 7 [weight=14, ];
E: 40 8 [weight=21, ];
E: 40 41 [weight=3, ];
E: 40 51 [weight=1, ];
E: 40 52 [weight=7, ];
E: 41 1 [weight=5, ];
E: 41 52 [weight=2, ];
E: 42 1 [weight=2, ];
E: 42 6 [weight=1, ];
E: 42 44 [weight=1, ];
E: 43 5 [weight=1, ];
E: 43 6 [weight=19, ];
E: 43 7 [weight=40, ];
E: 43 8 [weight=19, ];
E: 43 44 [weight=1, ];
E: 44 5 [weight=1, ];
E: 44 6 [weight=13, ];
E: 44 7 [weight=29, ];
E: 44 8 [weight=15, ];
E: 45 7 [weight=1, ];
E: 45 8 [weight=1, ];
E: 46 7 [weight=1, ];
E: 46 8 [weight=1, ];
E: 47 7 [weight=6, ];
E: 47 8 [weight=22, ];
E: 47 48 [weight=1, ];
E: 48 6 [weight=1, ];
E: 48 7 [weight=6, ];
E: 48 8 [weight=7, ];
E: 48 50 [weight=1, ];
E: 49 8 [weight=1, ];
E: 49 52 [weight=1, ];
E: 50 3 [weight=1, ];
E: 50 5 [weight=2, ];
E: 50 6 [weight=16, ];
E: 50 7 [weight=38, ];
E: 50 8 [weight=45, ];
E: 51 2 [weight=1, ];
E: 51 5 [weight=2, ];
E: 51 6 [weight=105, ];
E: 51 7 [weight=259, ];
E: 51 8 [weight=154, ];
E: 51 52 [weight=25, ];
E: 52 3 [weight=1, ];
E: 52 5 [weight=2, ];
E: 52 6 [weight=93, ];
E: 52 7 [weight=217, ];
E: 52 8 [weight=139, ];
